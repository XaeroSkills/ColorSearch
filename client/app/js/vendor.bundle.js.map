{"version":3,"sources":["webpack:///js/vendor.bundle.js","webpack:///webpack/bootstrap 9ac45198b1ab350658b2","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/createClass.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_core.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_wks.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/get-iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_export.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-dp.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/map.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_global.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_descriptors.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_hide.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_is-object.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_ctx.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_an-object.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iterators.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/slicedToArray.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_fails.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_has.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-iobject.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-length.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-object.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_for-of.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_property-desc.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/toConsumableArray.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-integer.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_defined.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-define.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-keys.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_cof.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_shared-key.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_uid.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_classof.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_validate-collection.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_a-function.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_dom-create.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-create.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iobject.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_shared.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-call.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_is-array-iter.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-step.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_collection-strong.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_redefine-all.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_an-instance.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_meta.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_collection.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_collection-to-json.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-collection-of.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-collection-from.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/angularjs-slider/dist/rzslider.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/ng-infinite-scroll/build/ng-infinite-scroll.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/charenc/charenc.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/style-loader/lib/urls.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/object/define-property.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/object/define-property.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-primitive.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/@uirouter/angularjs/release/ui-router-angularjs.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/@uirouter/core/_bundles/ui-router-core.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/angular-spinner/dist/angular-spinner.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/colr/index.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/colr-convert/index.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/array/from.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/array/from.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_string-at.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_library.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_redefine.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-create.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-dps.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-includes.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_html.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-gpo.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.array.from.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_create-property.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-detect.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/symbol/iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/symbol/iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_wks-ext.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/map.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.map.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-species.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-methods.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-species-create.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-species-constructor.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_is-array.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.map.to-json.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-from-iterable.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.map.of.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.map.from.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/is-iterable.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/is-iterable.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/core.is-iterable.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/get-iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/core.get-iterator.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/object/keys.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/object/keys.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.object.keys.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-sap.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/angular-chartist.js/dist/angular-chartist.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/chartist/dist/chartist.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/set.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/set.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.set.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.set.to-json.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.set.of.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.set.from.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/xregexp/xregexp-all.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/ng-error/ng-error.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/ng-load/ng-load.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/object/values.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/object/values.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.object.values.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-to-array.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-pie.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/md5/md5.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/crypt/crypt.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/is-buffer/index.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/localforage/dist/localforage.js","webpack:///(webpack)/buildin/global.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/css-loader/lib/css-base.js","webpack:///C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/style-loader/lib/addStyles.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","parentJsonpFunction","window","webpackJsonp","chunkIds","moreModules","executeModules","chunkId","result","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","shift","s","1","e","onScriptComplete","script","onerror","onload","clearTimeout","timeout","chunk","Error","installedChunkData","Promise","resolve","promise","reject","head","document","getElementsByTagName","createElement","type","charset","async","nc","setAttribute","src","p","0","setTimeout","appendChild","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","oe","err","console","error","instance","Constructor","TypeError","_defineProperty","_defineProperty2","obj","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","core","version","__e","store","uid","Symbol","USE_SYMBOL","global","ctx","hide","$export","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","C","a","b","this","arguments","apply","Function","virtual","R","U","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","value","Math","self","__g","createDesc","it","aFunction","fn","that","isObject","$at","String","iterated","_t","_i","point","index","done","_interopRequireDefault","_isIterable2","_isIterable3","_getIterator2","_getIterator3","sliceIterator","arr","_arr","_n","_d","_e","_s","next","return","Array","isArray","exec","Iterators","TO_STRING_TAG","DOMIterables","split","NAME","Collection","proto","IObject","defined","toInteger","min","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","entries","ITERATOR","step","iterator","iterFn","bitmap","_from","_from2","arr2","ceil","floor","isNaN","LIBRARY","redefine","has","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","keys","returnThis","Base","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","$keys","enumBugKeys","toString","slice","shared","id","px","random","concat","def","tag","stat","classof","getIteratorMethod","cof","ARG","tryGet","T","callee","TYPE","is","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","style","display","contentWindow","open","write","lt","close","create","Properties","propertyIsEnumerable","ret","ArrayProto","redefineAll","anInstance","forOf","$iterDefine","setSpecies","DESCRIPTORS","fastKey","validate","SIZE","getEntry","entry","_f","k","getConstructor","wrapper","IS_MAP","ADDER","_l","clear","data","r","delete","prev","forEach","callbackfn","v","setStrong","_k","safe","forbiddenField","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","getWeak","onFreeze","meta","NEED","KEY","fails","each","common","IS_WEAK","_c","IS_ADDER","size","from","COLLECTION","of","A","mapping","cb","mapFn","nextItem","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","angular","defaultOptions","precision","minRange","maxRange","pushRange","minLimit","maxLimit","translate","getLegend","stepsArray","bindIndexForStepsArray","draggableRange","draggableRangeOnly","showSelectionBar","showSelectionBarEnd","showSelectionBarFromValue","showOuterSelectionBars","hidePointerLabels","hideLimitLabels","autoHideLimitLabels","readOnly","disabled","interval","showTicks","showTicksValues","ticksArray","ticksTooltip","ticksValuesTooltip","vertical","getSelectionBarColor","getTickColor","getPointerColor","keyboardSupport","scale","enforceStep","enforceRange","noSwitching","onlyBindHandles","onStart","onChange","onEnd","rightToLeft","boundPointerLabels","mergeRangeLabelsIfSame","customTemplateScope","logScale","customValueToPosition","customPositionToValue","selectionBarGradient","ariaLabel","ariaLabelledBy","ariaLabelHigh","ariaLabelledByHigh","globalOptions","options","extend","getOptions","$timeout","func","wait","context","args","getTime","Date","now","previous","later","remaining","cancel","trailing","$document","$window","$compile","RzSliderOptions","rzThrottle","Slider","scope","sliderElem","lowValue","highValue","range","rzSliderModel","rzSliderHigh","dragging","active","difference","position","lowLimit","highLimit","positionProperty","dimensionProperty","handleHalfDim","maxPos","tracking","minValue","maxValue","valueRange","intermediateTicks","initHasRun","firstKeyDown","internalChange","cmbLabelShown","currentFocusElement","fullBar","selBar","minH","maxH","flrLab","ceilLab","minLab","maxLab","cmbLab","ticks","init","thrLow","thrHigh","calcDimFn","calcViewDimensions","applyOptions","syncLowValue","syncHighValue","initElemHandles","manageElementsStyle","setDisabledState","setMinAndMax","addAccessibility","updateCeilLab","updateFloorLab","initHandles","manageEventsBindings","$on","element","on","onLowHandleChange","onHighHandleChange","resetLabelsValue","resetSlider","$watch","newValue","oldValue","unbindEvents","off","findStepIndex","modelValue","isDate","getStepValue","sliderValue","applyLowValue","applyHighValue","updateLowHandle","valueToPosition","updateSelectionBar","updateTicksScale","updateAriaAttributes","updateCmbLabel","updateHighHandle","sliderOptions","rzSliderOptions","isNumber","parseStepsArray","customTrFn","custom","legend","refocusPointerIfNeeded","onPointerFocus","pointer","ref","focusElement","children","elem","jElem","leftOutSelBar","rightOutSelBar","rzsp","css","alwaysHide","hideLabelsForTicks","addClass","removeClass","el","rzAlwaysHide","hideEl","showEl","bindEvents","attr","rzsv","translateFn","label","which","useCustomTr","valStr","getDimension","noLabelInjection","hasClass","rzsd","html","roundStep","sanitizeValue","aria-valuenow","aria-valuetext","aria-valuemin","aria-valuemax","handleWidth","barDimension","getBoundingClientRect","getTicksArray","reverse","map","translation","round","tick","selected","isTickSelected","-webkit-transform","-moz-transform","-o-transform","-ms-transform","transform","tooltip","tooltipPlacement","getDisplayValue","valueTooltip","valueTooltipPlacement","center","setPosition","updateHandles","newPos","getHandleLabelPos","labelName","labelRzsd","nearHandlePos","endOfBarPos","max","pointercolor","minPointerStyle","backgroundColor","shFloorCeil","maxPointerStyle","flHidden","clHidden","isMinLabAtFloor","isLabelBelowFloorLab","isMinLabAtCeil","isLabelAboveCeilLab","isMaxLabAtCeil","isCmbLabAtFloor","isCmbLabAtCeil","hideCeil","hideFloor","isRTL","pos","dim","floorPos","floorDim","ceilPos","ceilDim","dimension","isSelectionBarFromRight","positionForRange","abs","centerPosition","isModelGreaterThanCenter","setDimension","color","barStyle","offset","reversed","direction","backgroundImage","to","backgroundPosition","backgroundSize","pointerType","lowTr","highTr","labelVal","customStep","steppedDifference","parseFloat","toPrecision","toFixed","visibility","val","bottom","top","right","left","linearValueToPosition","logValueToPosition","percent","minVal","maxVal","log","positionToValue","linearPositionToValue","logPositionToValue","exp","getEventAttr","event","originalEvent","getEventXY","targetTouchId","clientXY","touches","identifier","getEventPosition","sliderPos","getEventNames","eventNames","moveEvent","endEvent","getNearestHandle","distanceMin","distanceMax","focus","barTracking","barStart","barMove","onDragStart","onDragMove","onMove","bind","onTickClick","ehMove","ehEnd","stopPropagation","preventDefault","endHandlerToBeRemovedOnEnd","callOnStart","changedTouches","touchId","isDragging","fromTick","touchForThisSlider","ceilValue","flrValue","positionTrackingHandle","eventName","callOnEnd","one","onPointerBlur","onKeyboardEvent","onKeyUp","getKeyActions","currentValue","increaseStep","decreaseStep","increasePage","decreasePage","actions","UP","DOWN","LEFT","RIGHT","PAGEUP","PAGEDOWN","HOME","END","keyCode","38","40","37","39","33","34","36","35","action","newMinValue","newMaxValue","positionTrackingBar","getValue","outOfBounds","isAbove","ceilLimit","flrLimit","isUnderFlrLimit","isOverCeilLimit","flrH","ceilH","applyModel","valueChanged","applyMinMaxLimit","applyPushRange","applyMinMaxRange","oppositeValue","callOnChange","$apply","$evalAsync","$emit","directive","RzSlider","restrict","replace","rzSliderTplUrl","templateUrl","attrs","link","slider","run","$templateCache","put","$rootScope","$interval","THROTTLE_MILLISECONDS","infiniteScroll","infiniteScrollContainer","infiniteScrollDistance","infiniteScrollDisabled","infiniteScrollUseDocumentBottom","infiniteScrollListenForEvent","changeContainer","checkInterval","checkWhenEnabled","container","handleInfiniteScrollContainer","handleInfiniteScrollDisabled","handleInfiniteScrollDistance","handleInfiniteScrollUseDocumentBottom","handler","height","immediateCheck","offsetTop","pageYOffset","scrollDistance","scrollEnabled","throttle","unregisterEventListener","useDocumentBottom","windowElement","offsetHeight","documentElement","clientHeight","scrollTop","ownerDocument","defaultView","containerBottom","containerTopOffset","elementBottom","shouldScroll","$$phase","unbind","newContainer","nodeType","append","querySelector","infiniteScrollParent","parent","infiniteScrollImmediateCheck","$eval","charenc","utf8","stringToBytes","str","bin","unescape","encodeURIComponent","bytesToString","bytes","decodeURIComponent","escape","charCodeAt","fromCharCode","join","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","test","newUrl","indexOf","JSON","stringify","$Object","desc","valueOf","ng_from_import","_uirouter_core","getNg1ViewConfigFactory","templateFactory","path","view","services","$injector","Ng1ViewConfig","ng1ViewsBuilder","state","tplKeys","ctrlKeys","compKeys","nonCompKeys","allViewKeys","isDefined","views","hasAnyKey","filter","viewsObject","pick","config","isString","component","resolveAs","$type","$context","$name","normalized","ViewService","normalizeUIViewTarget","$uiViewName","uiViewName","$uiViewContextAnchor","uiViewContextAnchor","getComponentBindings","cmpDefs","getBindings","reduce","unnestR","$uiRouter","$locationProvider","$get","$location","$browser","$sniffer","$http","ng1LocationService","_runtimeServices","router","UIRouter","stateProvider","StateProvider","stateRegistry","stateService","decorator","getStateHookBuilder","viewService","_pluginapi","_viewConfigFactory","locationService","locationConfig","Ng1LocationServices","monkeyPatchPathParameterType","$inject","runBlock","$q","x","$$state","resolvables","deps","resolvable","annotate","resolveFn","strictDi","watchDigests","trace","approximateDigests","parseStateRef","parsed","paramsOnly","match","paramExpr","stateContext","$uiView","inheritedData","parse","tail","processedDef","$state","$element","uiState","current","uiStateOpts","defaultOpts","href","uiStateParams","getTypeInfo","isSvg","prop","isForm","nodeName","isAnchor","toUpperCase","clickable","clickHook","getDef","button","ctrlKey","metaKey","shiftKey","transition","go","ignorePreventDefaultCount","relative","$current","inherit","hookFn","events","events_1","event_1","events_2","event_2","$IsStateFilter","isFilter","params","$stateful","$IncludedByStateFilter","includesFilter","includes","$ViewDirectiveFill","$controller","$transitions","$view","getControllerAs","getResolveAs","priority","compile","tElement","initial","empty","contents","cfg","$cfg","viewDecl","getTemplate","noop","resolveCtx","ResolveContext","traceUIViewFill","controller","controllerAs","locals","getLocals","controllerInstance","$scope","registerControllerCallbacks","cmp_1","kebobName","kebobString","tagRegexp_1","RegExp","getComponentController","directiveEl","tagName","ng","deregisterWatch_1","ctrlInstance","isFunction","$onInit","hasComponentImpl","viewState","hookOptions","uiOnParamsChanged","resolveContext","viewCreationTrans_1","getResolvable","paramsUpdated","$transition$","exiting","toParams","fromParams","toSchema","treeChanges","node","paramSchema","fromSchema","changedToParams","param","idx","equals","changedKeys_1","newValues","val$$1","onSuccess","uiCanExit","id_1","_uiCanExitId","prevTruthyAnswer_1","trans","_uiCanExitIds","redirectedFrom","wrappedHook","ids","when","then","criteria","onBefore","$ViewScrollProvider","useAnchorScroll","$anchorScroll","scrollIntoView","ng_from_global","acc","_this","$id","loaded","uiView","makeComponentTemplate","bindings","template","load","paramValues","promises","fromConfig","getController","all","results","traceViewServiceEvent","provider","controllerProvider","isInjectable","providerFn","Resolvable","TemplateFactory","_useHttp","minor","$templateRequest","useHttpService","asTemplate","asComponent","fromString","fromUrl","templateProvider","fromProvider","componentProvider","fromComponentProvider","url","cache","headers","Accept","response","prefix","kebob","camelCase","kebobed","attributeTpl","input","attrName","resolveName","res","scopeBindings","bindToController","bindingsObj","tuple","createProxyFunctions","definition","register","onInvalid","callback","hookName","parentFn","decoratedNg1Hook","$state$","invoke","hook","_urlListeners","_lp","dispose","removeFrom","html5Mode","enabled","history","evt","_loc","_browser","pathType","urlMatcherFactory","encode","~","/","decode","~~","~2F","UrlRouterProvider","_router","_urlRouter","urlRouter","update","interceptDeferred","listen","rule","ruleFn","BaseUrlRule","identity","otherwise","what","injectableHandler","$match","$stateParams","globals","deferIntercept","defer","mod_init","mod_util","mod_rtr","mod_state","mod_main","getProviderFor","serviceName","$urp","service","getUrlRouterProvider","uiRouter","urlRouterProvider","getStateProvider","$urlMatcherFactory","$urlRouter","uiSref","getTokens","getPolicy","applyPairs","require","uiSrefActive","unlinkInfoFn","$$addStateInfo","$set","rawDef","uiSrefOpts","onStatesChanged","transitionService","inputAttrs","watchDeregFns","field","$observe","expr","newval","$interpolate","$attrs","updateAfterTransition","addState","stateName","stateParams","activeClass","stateInfo","states","splitClasses","getClasses","stateList","allClasses","activeEqClass","uniqR","fuzzyClasses","exactlyMatchesAny","exactClasses","addClasses","removeClasses","cls","inArray","className","uiSrefActiveEq","stateOrName","newState","newParams","deregister","$animate","$uiViewScroll","getRenderer","enter","leave","configsEqual","config1","config2","rootData","_rootViewContext","count","terminal","transclude","tAttrs","$transclude","configUpdatedCallback","viewConfig","traceUIViewConfigUpdated","activeUIView","updateView","cleanupLastView","previousEl","traceUIViewEvent","remove","currentScope","$destroy","currentEl","_viewData_1","renderer","$$animLeave","newScope","$new","animEnter","animLeave","$uiViewData","$uiViewAnim","$animEnter","$animLeave","cloned","clone","autoScrollExp","onloadExp","unregister","autoscroll","inherited","fqn","configUpdated","creationContext","fromParentTagConfig","fromParentTag","registerUIView","curry","curried","func_args_length","initial_args","compose","start","pipe","funcs","and","fn1","fn2","or","fnName","pattern","struct","not","fnNames","latebind","bindFunction","makeLateRebindFn","_inArray","array","_removeFrom","splice","_pushTo","defaults","opts","defaultsList","_defaultsList","defaultVals","ancestors","first","second","propNames","objCopy","prop_1","omit","pluck","collection","propName","accept","item","find","pushR","assertFn","predicateOrMap","errMsg","arrayTuples","maxArrayLen","memo","keyValTuple","_copy","dest","_forEach","_extend","toObj","j","_equals","o1","o2","t1","tup","_arraysEq","isRegExp","any","a1","a2","t","uiViewString","uiview","normalizedCat","Category","matchState","criterion","matchGlobs","_state","globStrings","toMatch","glob","Glob","matches","makeEvent","registry","eventType","hookRegistrationFn","matchObject","registeredHook","RegisteredHook","hooks","_deregistered","_registeredHooks","tupleSort","reverseDepthSort","factor","depthDelta","ArrayType","mode","arrayWrap","arrayUnwrap","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","paramTypeFn","wrapperFn","dynamic","$arrayMode","unwrapShorthand","getStaticDefaultValue","isShorthand","__cacheable","$$fn","getType","urlType","paramTypes","DefType","CONFIG","PATH","SEARCH","ParamType","getSquashPolicy","isOptional","defaultPolicy","squash","getReplace","arrayMode","configuredKeys","maxLength","substr","padString","toLowerCase","functionToString","fnStr","fnToString","namedFunctionMatch","toStr","_fn","format","seen","stringifyPattern","splitOnDelim","delim","re","joinNeighborsR","nameBuilder","selfBuilder","dataBuilder","pathBuilder","includesBuilder","resolvablesBuilder","isResolveLiteral","token","isLikeNg2Provider","provide","useValue","useFactory","useExisting","useClass","isTupleFromObj","literal2Resolvable","policy","dependencies","tuple2Resolvable","item2Resolvable","decl","resolveObj","resolvePolicies","resolvePolicy","quoteRegExp","string","surroundPattern","appendBasePath","isHtml5","absolute","baseHref","getHandlerFn","TargetState","isDef","addCoreResolvables","addResolvable","Transition","entering","makeEnterExitRetainHook","lazyLoadState","updateStateRegistry","lazyLoadFn","lazyLoad","_promise","success","ignoredHook","ignoredReason","_ignoredReason","traceTransitionIgnored","pending","abort","Rejection","ignored","toPromise","invalidTransitionHook","valid","parseUrl$1","orEmptyString","_a","splitHash","beforehash","hash","_b","splitQuery","search","locationPluginFactory","serviceClass","configurationClass","configuration","servicesPlugin","propEq","ctor","constructor","eq","other","text","regexpString","seg","regexp","StateObject","stateDecl","isStateClass","__stateObjectCache","nameGlob","parameters","matchingKeys","parameter","__uiRouterState","isState","tis","isUndefined","isNull","isNullOrUndefined","isPromise","notImplemented","fnname","fromJson","toJson","copy","assign","extra","pushTo","deregAll","functions","mergeR","mapObj","allTrueR","anyTrueR","flattenR","unnest","flatten","assertPredicate","assertMap","pairs","silenceUncaughtInPromise","catch","silentRejection","Queue","_items","_limit","enqueue","items","dequeue","peekTail","peekHead","RejectType","SUPERSEDED","ABORTED","INVALID","IGNORED","ERROR","message","detail","_transitionRejection","isRejectionPromise","superseded","rejection","redirected","invalid","aborted","errored","normalize","viewConfigString","RESOLVE","TRANSITION","HOOK","UIVIEW","VIEWCONFIG","_tid","_rid","transLbl","Trace","_enabled","_set","categories","parseInt","category","enable","disable","traceTransitionStart","traceHookInvocation","traceHookResult","hookResult","transitionOptions","traceResolvePath","traceResolvableResolved","traceError","reason","traceSuccess","finalState","viewData","traceViewSync","uiViewData","ui-view fqn","state: view name","sort","localeCompare","table","traceViewServiceUIViewEvent","TransitionHookPhase","CREATE","BEFORE","RUN","SUCCESS","TransitionHookScope","STATE","_identifier","_definition","_params","_options","exists","base","traceData","TransitionHook","isSuperseded","hookPhase","isActive","logError","defaultErrorHandler","invokeHook","notCurrent","getNotCurrentRejection","normalizeErr","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","handleHookResult","_disposed","_aborted","chain","waitFor","createHookChainR","nextHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","tranSvc","matchCriteria","_matchingNodes","nodes","matching","_getDefaultMatchCriteria","_getPathTypes","_getMatchingNodes","mn","pathtype","isStateHook","every","HookBuilder","buildHooksForPhase","phase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","makeTransitionHooks","criteriaMatchPath","transitionHook","reverseSort","isCreate","reg","getHooks","$subPattern","sub","$normalize","$asArray","isSearch","hasOwn","Param","arrayDefaults","arrayParamNomenclature","raw","defaultSquashPolicy","inherit$$1","isDefaultValue","_defaultValueCache","defaultValue","validates","encoded","values$$1","params_1","changed","values1","values2","PathNode","stateOrNode","applyRawParams","getParamVal","paramDef","pDef","paramsFn","diff","PathUtils","makeTargetState","buildPath","targetState","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","viewDecls","subPath","viewConfigs","createViewConfig","toKeys","nodeParamVals","makeInheritedParamsNode","toNode","toParamVals","incomingParamVals","fromParamVals","noInherit","ownParamVals","reloadState","applyToParams","retainedNode","keep","node1","node2","nonDynamicParams","retained","retainedWithToParams","pathA","pathB","nodeA","nodeB","predicate","elementIdx","defaultResolvePolicy","arg1","resolved","literal","thisPolicy","statePolicy","getResolvableDependencies","getDependencies","invokeResolveFn","resolvedDeps","waitForRx","observable$","cached","take","findNode","maybeWaitForRx","applyResolvedValue","resolvedValue","fromData","LAZY","EAGER","WAIT","NOWAIT","RXWAIT","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","_path","subContext","addResolvables","newResolvables","resolvePath","whenOption","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","nodeResolvables","nowait","getResult","injector","_injector","UIInjectorImpl","availableResolvables","getDependency","fromInjector","getNative","native","getAsync","stateSelf","_deferred","_hookBuilder","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onExit","onRetain","onEnter","onFinish","onError","enteringStates","$from","$to","compare","freeze","pathName","getResolveTokens","topath","targetNode","originalTransition","rf","redirect","redirects","redirectOpts","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","schema","toVals","fromVals","changes","same","newTC","pendTC","getHooksFor","transitionSuccess","transitionError","_error","runTransition","allRunHooks","startTransition","lastStartedTransitionId","transitionHistory","allBeforeHooks","abstract","paramDefs","invalidParams","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","stringifyPatternFn","isRejection","beforeAfterSubstr","char","ParamTypes","typeQueue","defaultTypes","makeType","types","definitionFn","_flushTypeQueue","makeDefaultType","valToString","defaultTypeBase","query","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","json","defaultRuleSortFn","StateParams","$inherit","parentParams","parents","inheritList","parseUrl","charAt","substring","getUrlBuilder","$urlMatcherFactoryProvider","stateDec","paramMap","paramConfig","reloadOnSearch","isMatcher","navigable","getNavigableBuilder","isRoot","getParamsBuilder","paramFactory","makeConfigParam","urlParams","nonUrlParams","StateBuilder","matcher","parentBuilder","parentName","builders","builder","build","undefined","segments","pop","StateMatcher","_states","isRelative","matchGlob","isStr","baseState","splitName","pathLength","relName","StateQueueManager","$registry","listeners","queue","flush","registered","orphans","previousQueueLength","getState","name_1","orphanIdx","existingState","existingFutureState","attachRoute","listener","urlRuleFactory","StateRegistry","stateQueue","_registerRoot","rootStateDef","#","_root","stateDefinition","_deregisterTree","all$$1","getChildren","deregistered","$ur","rules","removeRule","deregisteredStates","found","memoizeTo","prop$$1","splitOnSlash","UrlMatcher","pattern$$1","_cache","_children","_segments","_compiled","strict","caseInsensitive","segment","placeholder","searchPlaceholder","last","patterns","checkParamErrors","nameValidator","matchDetails","lastIndex","fromSearch","allParams","pathParams","searchParams","nPathSegments","urlm","reverseString","unquoteDashes","validParamVal","getDetails","isValid","urlMatchers","pathSegmentsAndParams","queryParams","isInvalid","pathString","encodeDashes","queryString","paramDetails","weights","weightsA","weightsB","padVal","len","cmp","pairs$$1","UrlMatcherFactory","_isCaseInsensitive","_isStrictMode","_defaultSquashPolicy","_getConfig","strictMode","UrlRuleFactory","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","urlMatcher","matchPriority","optional","_handler","details","transitionTo","sticky","redirectUrlTo","Number","isUrlRule","prioritySort","typeSort","URLMATCHER","REGEXP","RAW","OTHER","urlMatcherSort","idSort","useMatchPriority","UrlRouter","_sortFn","_rules","_id","_sorted","_otherwiseFn","compareFn","stableSort","ensureSorted","arrOfWrapper","wrapperA","wrapperB","cmpDiff","best","weight","sync","defaultPrevented","$url","urlService","newurl","_stopFn","read","hashPrefix","slash","port","handlerFn","matchFn","urlParts","_uiViews","_viewConfigs","_viewConfigFactories","_registeredUIViews","_activeViewConfigs","_rootContext","viewType","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewDepth","stateDepth","viewConfigDepth","uiViewsByFqn","uiv","depthCompare","depthFn","posNeg","matchingConfigPair","matchingConfigs","configureUIView","uiViews","fqnAndTypeMatches","available","rawViewName","viewAtContext","relativeViewNameSugar","anchor","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","UIRouterGlobals","successfulTransitions","makeStub","locationServicesFns","locationConfigFns","umfFns","rulesFns","syncFns","UrlService","lateBind","locationServices","umf","parts","locationServiceStub","locationConfigStub","_routerInstance","_disposables","TransitionService","StateService","_plugins","disposable","plugin","pluginInstance","getPlugin","pluginName","registerAddCoreResolvables","onCreate","redirectToHook","redirectTo","registerRedirectToHook","onExitHook","registerOnExitHook","onRetainHook","registerOnRetainHook","onEnterHook","registerOnEnterHook","eagerResolvePath","registerEagerResolvePath","lazyResolveState","registerLazyResolveState","loadEnteringViews","enteringViews","registerLoadEnteringViews","activateViews","exitingViews","registerActivateViews","updateGlobalState","transitionSuccessful","clearCurrentTransition","registerUpdateGlobalState","updateUrl","urlOptions","registerUpdateUrl","lazyLoadHook","retryTransition","orig","registerLazyLoadHook","TransitionEventType","hookOrder","registerIgnoredTransitionHook","registerInvalidTransitionHook","defaultTransOpts","notify","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","hooksArray","Phase","TH","paths","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","eagerResolve","lazyResolve","loadViews","updateGlobals","invalidCallbacks","_defaultErrorHandler","$error$","stack","getters","boundFns","_handleInvalidTargetState","toState","invokeNextCallback","nextCallback","callbackQueue","checkForRedirect","latestThing","latest","defautGoOpts","transOpts","getCurrentPath","latestSuccess","currentPath","rejectedTransitionHandler","isLatest","transitionToPromise","include","lossy","nav","deferred","STRIP_COMMENTS","ARGUMENT_NAMES","ensureExist","beforeAfterSubstr$1","splitEqual","trimHashVal","keyValsToObjectR","accum","getParams","buildUrl","loc","searchObject","BaseLocationServices","fireAfterUpdate","_listener","_listeners","_get","_location","_history","evt_1","Event","__extends","extendStatics","setPrototypeOf","__proto__","__","HashLocationService","_super","addEventListener","title","removeEventListener","__extends$1","MemoryLocationService","_url","__extends$2","PushStateLocationService","_config","fullUrl","replaceState","pushState","MemoryLocationConfig","_baseHref","_port","_protocol","_host","_hashPrefix","BrowserLocationConfig","_isHtml5","hostname","newprefix","applyDocumentBaseHref","baseTags","origin","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin","UIRouterPluginBase","__WEBPACK_EXTERNAL_MODULE_5__","SpinJSSpinner_1","UsSpinnerService_1","AngularSpinner_1","UsSpinnerConfig_1","angularSpinner","UsSpinnerConfig","constant","SpinJSSpinner","UsSpinnerService","usSpinner","Spinner","createEl","ins","addAnimation","alpha","trail","lines","z","useCssAnimations","pre","animations","sheet","insertRule","cssRules","vendor","pp","prefixes","merge","getColor","width","radius","corners","opacity","rotate","speed","fps","zIndex","shadow","hwaccel","spin","stop","insertBefore","firstChild","ostep","astep","anim","parentNode","removeChild","fill","background","boxShadow","transformOrigin","borderRadius","animation","childNodes","styleSheet","probe","behavior","adj","vml","addRule","grp","coordsize","coordorigin","dx","g","rotation","arcsize","margin","$broadcast","usSpinnerConfig","stopSpinner","spinner","spinnerKey","startActive","spinnerStartActive","spinnerTheme","themes","spinnerOn","setDefaults","setTheme","Colr","_","clampPercentage","clampByte","byte","clampRgb","clampHsx","h","convert","fromHex","hex","fromGrayscale","fromRgb","fromRgbArray","fromRgbObject","fromHsl","fromHslArray","fromHslObject","fromHsv","fromHsvArray","fromHsvObject","rgb","grayscale","hsl","hsv","toHex","cachedFrom","toRawRgbArray","toGrayscale","toRawRgbObject","toRgbArray","toRgbObject","toRawHslArray","toRawHslObject","toHslArray","toHslObject","toRawHsvArray","toRawHsvObject","toHsvArray","toHsvObject","lighten","amount","darken","colr","hexVal","hex2rgb","h1","h2","h3","rgb2hex","rgb2hsl","delta","rgb2hsv","hsl2rgb","q","hsl2hsv","sv","hsv2rgb","hi","hsv2hsl","sl","grayscale2rgb","rgb2grayscale","TO_STRING","getKeys","toIObject","arrayIndexOf","names","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","toObject","ObjectProto","createProperty","iter","arrayLike","aLen","mapfn","$defineProperty","SAFE_CLOSING","riter","skipClosing","addToUnscopables","Arguments","Map","strong","set","SPECIES","asc","$create","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","speciesConstructor","original","arg","toJSON","isIterable","getIterator","Chartist","classCallCheck","AwaitValue","AsyncGenerator","gen","send","request","back","front","resume","settle","_invoke","asyncIterator","throw","createClass","angularChartistModule","AngularChartistCtrl","chartType","chartOptions","responsiveOptions","renderChart","chart","detach","_this2","_this3","newConfig","oldConfig","namespaces","svg","xmlns","xhtml","xlink","ct","alphaNumerate","sourceProp","replaceAll","subStr","newSubStr","ensureUnit","unit","quantity","Node","times","sum","mapMultiply","num","mapAdd","addend","serialMap","roundWithPrecision","digits","pow","escapingMap","&","<",">","\"","'","serialize","deserialize","createSvg","querySelectorAll","getAttributeNS","Svg","_node","normalizeData","multi","labelCount","output","series","getDataArray","labels","reverseData","safeHasProperty","isDataHoleValue","recursiveConvert","multiValue","getNumberOrUndefined","y","normalizePadding","padding","fallback","getMetaData","orderOfMagnitude","LN10","projectLength","axisLength","bounds","getAvailableHeight","chartPadding","axisX","getHighLow","recursiveHighLow","findHigh","highLow","high","findLow","low","MAX_VALUE","referenceValue","isNumeric","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","divisor","x1","x2","getBounds","scaleMinSpace","onlyInteger","safeIncrement","increment","EPSILON","newMin","newMax","optimizationCounter","oom","numberOfSteps","scaleUp","smallestFactor","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","chartRect","y1","y2","createGrid","axis","group","classes","eventEmitter","positionalData","units","counterUnits","gridElement","emit","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","content","innerText","foreignObject","getSeriesOption","seriesOptions","optionsProvider","updateCurrentOptions","mediaEvent","previousOptions","currentOptions","baseOptions","mql","matchMedia","removeMediaQueryListeners","mediaQueryListeners","removeListener","addListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","increasingX","fillHoles","hole","Interpolation","none","Path","currX","currY","currData","move","line","simple","prevX","prevY","prevData","curve","cardinal","tension","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","addEventHandler","handlers","removeEventHandler","starHandler","listToArray","list","properties","superProtoOverride","superProto","Class","cloneDefinitions","constr","super","getOwnPropertyNames","getOwnPropertyDescriptor","override","initializeTimeoutId","createChart","resizeListener","initialize","plugins","supportsForeignObject","isSupported","supportsAnimations","__chartist__","attributes","insertFirst","Element","createElementNS","xmlns:ct","ns","getAttribute","namespacedAttribute","setAttributeNS","SVGElement","selector","foundNode","foundNodes","List","getNode","innerHTML","fnObj","createTextNode","newElement","replaceChild","removedClasses","removeAllClasses","animate","guided","attribute","createAnimate","animationDefinition","easing","attributeProperties","Easing","begin","dur","calcMode","keySplines","keyTimes","attributeName","beginElement","SvgList","nodeList","svgElements","prototypeProperty","feature","implementation","hasFeature","easingCubicBeziers","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","command","pathElements","pathElement","forEachParam","pathElementIndex","elementDescriptions","paramName","paramIndex","SvgPath","arc","rx","ry","xAr","lAf","sf","chunks","elements","description","spliceArgs","accuracyMultiplier","accuracy","transformFnc","transformed","splitByCommand","joinedPath","Axis","axisUnits","rectEnd","rectStart","gridOffset","rectOffset","createGridAndLabels","labelGroup","axisOptions","projectedValues","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelLength","showGrid","classNames","grid","dir","showLabel","end","AutoScaleAxis","axisUnit","FixedScaleAxis","stepLength","StepAxis","calc","stretch","seriesGroup","fullWidth","showGridBackground","seriesIndex","seriesElement","ct:series-name","ct:meta","pathData","valueIndex","lineSmooth","showPoint","showLine","showArea","areaBase","smoothing","ct:value","seriesMeta","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","area","Line","horizontal","distributeSeries","horizontalBars","stackBars","serialSums","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","periodHalfLength","biPol","projected","bar","previousStack","labelAxisValueIndex","seriesBarDistance","positions","stackMode","metaData","Bar","determineAnchorPosition","toTheRight","labelsGroup","labelRadius","totalDataSum","seriesGroups","startAngle","donut","chartDonut","chartPie","total","previousValue","donutWidth","donutSolid","labelPosition","hasSingleValInSeries","ignoreEmptyValues","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","slicePie","sliceDonut","sliceDonutSolid","strokeWidth","rawValue","interpolatedValue","dy","text-anchor","labelDirection","Pie","Set","add","u","code","XRegExp","deanchor","leadingAnchor","trailingAnchor","asXRegExp","addFlagX","flags","REGEX_DATA","captureNames","subParts","union","conjunction","subs","inlineFlags","_clipDuplicates","numPriorCaps","patternAsRegex","numCaps","numOuterCaps","outerCapsMap","outerCapNames","$0","$2","$3","$4","capName","intro","localCapIndex","subName","ReferenceError","paren","backref","2","row","matchRecursive","outerStart","leftMatch","rightMatch","esc","basicFlags","escapeChar","vN","valueNames","openTokens","delimStart","delimEnd","lastOuterEnd","3","charCode","chr","dec","invertBmp","lastEnd","pad4","cacheInvertedBmp","slug","unicode","bmp","buildAstral","isNegated","combined","isBmpLast","astral","cacheAstral","_dec","_hex","_pad4","addToken","isAstralMode","SyntaxError","inverseOf","optionalFlags","leadChar","addUnicodeData","alias","_getUnicodeProperty","4","5","6","unicodeData","7","8","./addons/build","./addons/matchrecursive","./addons/unicode-base","./addons/unicode-blocks","./addons/unicode-categories","./addons/unicode-properties","./addons/unicode-scripts","./xregexp","9","hasNativeFlag","flag","exception","augment","regex","xSource","xFlags","isInternalOnly","clipDuplicates","nativ","copyRegex","xData","getNativeFlags","flagsToAdd","flagsToRemove","xregexpSource","xregexpFlags","removeG","removeY","addG","addY","hasNamedCapture","getContextualTokenSeparator","isPatternNext","hasFlagsProp","needlePattern","patternsToIgnore","isType","prepareFlags","registeredFlags","prepareOptions","registerFlag","runTokens","tokens","matchLength","reparse","setAstral","features","setNatives","fixed","natives","isInstalled","patternCache","defaultScope","applied","appliedPattern","appliedFlags","nativeTokens","classScope","captures","generated","regexCache","class","replacementToken","correctExecNpcg","hasNativeU","hasNativeY","_hasNativeFlag","cacheName","r2","cacheKey","fakeY","globalize","install","matchChain","recurseChain","level","addMatch","replacement","isRegex","s2","replaceEach","replacements","separator","limit","uninstall","rewrite","numCaptures","numPriorCaptures","origLastIndex","lastLength","lastLastIndex","endIndex","$parse","ngError","$event","ngLoad","$values","isEnum","isEntries","crypt","isBuffer","md5","encoding","bytesToWords","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","endian","_blocksize","_digestsize","digestbytes","wordsToBytes","asBytes","asString","bytesToHex","base64map","rotl","rotr","randomBytes","words","hexToBytes","bytesToBase64","base64","triplet","base64ToBytes","imod4","isSlowBuffer","readFloatLE","_isBuffer","_dereq_","nextTick","draining","oldQueue","immediate","task","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","called","observer","observe","characterData","setImmediate","MessageChannel","scriptEl","onreadystatechange","channel","port1","onmessage","port2","postMessage","INTERNAL","resolver","PENDING","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","getThen","thenable","tryToUnwrap","tryCatch","status","resolveFromAll","outValue","race","REJECTED","FULFILLED","_classCallCheck","createBlob","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","executeCallback","executeTwoCallbacks","errorCallback","_binStringToArrayBuffer","buf","ArrayBuffer","Uint8Array","_checkBlobSupportWithoutCaching","idb","Promise$1","txn","transaction","DETECT_BLOB_SUPPORT_STORE","blob","objectStore","onabort","oncomplete","matchedChrome","navigator","userAgent","matchedEdge","_checkBlobSupport","supportsBlobs","_deferReadiness","dbInfo","dbContext","dbContexts","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_getConnection","upgradeNeeded","db","dbArgs","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","warn","newVersion","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_initStorage","ignoreErrors","forages","ready","initPromises","forage","_defaultConfig","getItem","req","iterate","openCursor","iterationNumber","cursor","continue","setItem","blobSupport","removeItem","advanced","advance","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","BASE_CHARS","bufferToString","base64String","valueType","toString$1","marker","SERIALIZED_MARKER","TYPE_ARRAYBUFFER","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_UINT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","fileReader","BLOB_TYPE_PREFIX","TYPE_BLOB","readAsArrayBuffer","SERIALIZED_MARKER_LENGTH","blobType","TYPE_SERIALIZED_MARKER_LENGTH","BLOB_TYPE_PREFIX_REGEX","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","_initStorage$1","dbInfoPromise","openDatabase","executeSql","serializer","localforageSerializer","getItem$1","rows","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","_initStorage$2","keyPrefix","clear$2","localStorage","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","length$2","removeItem$2","setItem$2","callWhenReady","localForageInstance","libraryMethod","_args","isLibraryDriver","driverName","driver","DriverType","_typeof","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","asyncStorage","_driver","webSQLStorage","localStorageWrapper","CustomDrivers","INDEXEDDB","LOCALSTORAGE","WEBSQL","DefaultDriverOrder","LibraryMethods","DefaultConfig","driverSupport","isSafari","platform","hasFetch","fetch","IDBKeyRange","LocalForage","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","defineDriver","driverObject","complianceError","namingError","customDriverMethods","customDriverMethod","supportPromise","_support","supportResult","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","setDriverToConfig","extendSelfWithDriver","initDriver","supportedDrivers","driverPromiseLoop","currentDriverIndex","_getSupportedDrivers","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","eval","cssWithMappingToString","useSourceMap","cssMapping","sourceMapping","toComment","sources","sourceRoot","sourceMap","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","addStyle","listToStyles","newStyles","media","part","insertStyleElement","getElement","insertInto","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","removeStyleElement","createStyleElement","addAttrs","createLinkElement","rel","singleton","styleIndex","singletonCounter","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","updateLink","applyToTag","newObj","cssText","replaceText","cssNode","autoFixUrls","convertToAbsoluteUrls","fixUrls","oldSrc","isOldIE","DEBUG","newList","mayRemove","textStore"],"mappings":"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","file":"js/vendor.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId]) {\n/******/ \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n/******/ \t\t\t}\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n/******/ \t\twhile(resolves.length) {\n/******/ \t\t\tresolves.shift()();\n/******/ \t\t}\n/******/ \t\tif(executeModules) {\n/******/ \t\t\tfor(i=0; i < executeModules.length; i++) {\n/******/ \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\treturn result;\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// objects to store loaded and loading chunks\n/******/ \tvar installedChunks = {\n/******/ \t\t1: 0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId) {\n/******/ \t\tvar installedChunkData = installedChunks[chunkId];\n/******/ \t\tif(installedChunkData === 0) {\n/******/ \t\t\treturn new Promise(function(resolve) { resolve(); });\n/******/ \t\t}\n/******/\n/******/ \t\t// a Promise means \"currently loading\".\n/******/ \t\tif(installedChunkData) {\n/******/ \t\t\treturn installedChunkData[2];\n/******/ \t\t}\n/******/\n/******/ \t\t// setup Promise in chunk cache\n/******/ \t\tvar promise = new Promise(function(resolve, reject) {\n/******/ \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n/******/ \t\t});\n/******/ \t\tinstalledChunkData[2] = promise;\n/******/\n/******/ \t\t// start chunk loading\n/******/ \t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\tvar script = document.createElement('script');\n/******/ \t\tscript.type = 'text/javascript';\n/******/ \t\tscript.charset = 'utf-8';\n/******/ \t\tscript.async = true;\n/******/ \t\tscript.timeout = 120000;\n/******/\n/******/ \t\tif (__webpack_require__.nc) {\n/******/ \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n/******/ \t\t}\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + ({\"0\":\"app\"}[chunkId]||chunkId) + \"-\" + {\"0\":\"092bac83c1136c989a96\"}[chunkId] + \".js\";\n/******/ \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n/******/ \t\tscript.onerror = script.onload = onScriptComplete;\n/******/ \t\tfunction onScriptComplete() {\n/******/ \t\t\t// avoid mem leaks in IE.\n/******/ \t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\tclearTimeout(timeout);\n/******/ \t\t\tvar chunk = installedChunks[chunkId];\n/******/ \t\t\tif(chunk !== 0) {\n/******/ \t\t\t\tif(chunk) {\n/******/ \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = undefined;\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\thead.appendChild(script);\n/******/\n/******/ \t\treturn promise;\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// on error function for async loading\n/******/ \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(64);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.0' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store = __webpack_require__(42)('wks');\nvar uid = __webpack_require__(33);\nvar Symbol = __webpack_require__(8).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(114), __esModule: true };\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(8);\nvar core = __webpack_require__(2);\nvar ctx = __webpack_require__(12);\nvar hide = __webpack_require__(10);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(13);\nvar IE8_DOM_DEFINE = __webpack_require__(67);\nvar toPrimitive = __webpack_require__(68);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(9) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(99), __esModule: true };\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(17)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(6);\nvar createDesc = __webpack_require__(25);\nmodule.exports = __webpack_require__(9) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(38);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at = __webpack_require__(81)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(29)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _isIterable2 = __webpack_require__(111);\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = __webpack_require__(4);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(96);\nvar global = __webpack_require__(8);\nvar hide = __webpack_require__(10);\nvar Iterators = __webpack_require__(15);\nvar TO_STRING_TAG = __webpack_require__(3)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n/***/ }),\n/* 20 */,\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(41);\nvar defined = __webpack_require__(28);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(27);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(28);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ctx = __webpack_require__(12);\nvar call = __webpack_require__(44);\nvar isArrayIter = __webpack_require__(45);\nvar anObject = __webpack_require__(13);\nvar toLength = __webpack_require__(22);\nvar getIterFn = __webpack_require__(35);\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _from = __webpack_require__(79);\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY = __webpack_require__(82);\nvar $export = __webpack_require__(5);\nvar redefine = __webpack_require__(83);\nvar hide = __webpack_require__(10);\nvar has = __webpack_require__(18);\nvar Iterators = __webpack_require__(15);\nvar $iterCreate = __webpack_require__(84);\nvar setToStringTag = __webpack_require__(34);\nvar getPrototypeOf = __webpack_require__(90);\nvar ITERATOR = __webpack_require__(3)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(86);\nvar enumBugKeys = __webpack_require__(43);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(42)('keys');\nvar uid = __webpack_require__(33);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(6).f;\nvar has = __webpack_require__(18);\nvar TAG = __webpack_require__(3)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(36);\nvar ITERATOR = __webpack_require__(3)('iterator');\nvar Iterators = __webpack_require__(15);\nmodule.exports = __webpack_require__(2).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(31);\nvar TAG = __webpack_require__(3)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\nvar document = __webpack_require__(8).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(13);\nvar dPs = __webpack_require__(85);\nvar enumBugKeys = __webpack_require__(43);\nvar IE_PROTO = __webpack_require__(32)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(39)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(89).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(31);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(8);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(13);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// check on default Array iterator\nvar Iterators = __webpack_require__(15);\nvar ITERATOR = __webpack_require__(3)('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar dP = __webpack_require__(6).f;\nvar create = __webpack_require__(40);\nvar redefineAll = __webpack_require__(49);\nvar ctx = __webpack_require__(12);\nvar anInstance = __webpack_require__(50);\nvar forOf = __webpack_require__(24);\nvar $iterDefine = __webpack_require__(29);\nvar step = __webpack_require__(46);\nvar setSpecies = __webpack_require__(101);\nvar DESCRIPTORS = __webpack_require__(9);\nvar fastKey = __webpack_require__(51).fastKey;\nvar validate = __webpack_require__(37);\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hide = __webpack_require__(10);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar META = __webpack_require__(33)('meta');\nvar isObject = __webpack_require__(11);\nvar has = __webpack_require__(18);\nvar setDesc = __webpack_require__(6).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(17)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global = __webpack_require__(8);\nvar $export = __webpack_require__(5);\nvar meta = __webpack_require__(51);\nvar fails = __webpack_require__(17);\nvar hide = __webpack_require__(10);\nvar redefineAll = __webpack_require__(49);\nvar forOf = __webpack_require__(24);\nvar anInstance = __webpack_require__(50);\nvar isObject = __webpack_require__(11);\nvar setToStringTag = __webpack_require__(34);\nvar dP = __webpack_require__(6).f;\nvar each = __webpack_require__(102)(0);\nvar DESCRIPTORS = __webpack_require__(9);\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = __webpack_require__(36);\nvar from = __webpack_require__(107);\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = __webpack_require__(5);\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = __webpack_require__(5);\nvar aFunction = __webpack_require__(38);\nvar ctx = __webpack_require__(12);\nvar forOf = __webpack_require__(24);\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! angularjs-slider - v6.3.0 - \n (c) Rafal Zajac <rzajac@gmail.com>, Valentin Hervieu <valentin@hervieu.me>, Jussi Saarivirta <jusasi@gmail.com>, Angelin Sirbu <angelin.sirbu@gmail.com> - \n https://github.com/angular-slider/angularjs-slider - \n 2017-08-11 */\n/*jslint unparam: true */\n/*global angular: false, console: false, define, module */\n(function(root, factory) {\n  'use strict';\n  /* istanbul ignore next */\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    // to support bundler like browserify\n    var angularObj = angular || require('angular');\n    if ((!angularObj || !angularObj.module) && typeof angular != 'undefined') {\n      angularObj = angular;\n    }\n    module.exports = factory(angularObj);\n  } else {\n    // Browser globals (root is window)\n    factory(root.angular);\n  }\n\n}(this, function(angular) {\n  'use strict';\n  var module = angular.module('rzModule', [])\n\n  .factory('RzSliderOptions', function() {\n    var defaultOptions = {\n      floor: 0,\n      ceil: null, //defaults to rz-slider-model\n      step: 1,\n      precision: 0,\n      minRange: null,\n      maxRange: null,\n      pushRange: false,\n      minLimit: null,\n      maxLimit: null,\n      id: null,\n      translate: null,\n      getLegend: null,\n      stepsArray: null,\n      bindIndexForStepsArray: false,\n      draggableRange: false,\n      draggableRangeOnly: false,\n      showSelectionBar: false,\n      showSelectionBarEnd: false,\n      showSelectionBarFromValue: null,\n      showOuterSelectionBars: false,\n      hidePointerLabels: false,\n      hideLimitLabels: false,\n      autoHideLimitLabels: true,\n      readOnly: false,\n      disabled: false,\n      interval: 350,\n      showTicks: false,\n      showTicksValues: false,\n      ticksArray: null,\n      ticksTooltip: null,\n      ticksValuesTooltip: null,\n      vertical: false,\n      getSelectionBarColor: null,\n      getTickColor: null,\n      getPointerColor: null,\n      keyboardSupport: true,\n      scale: 1,\n      enforceStep: true,\n      enforceRange: false,\n      noSwitching: false,\n      onlyBindHandles: false,\n      onStart: null,\n      onChange: null,\n      onEnd: null,\n      rightToLeft: false,\n      boundPointerLabels: true,\n      mergeRangeLabelsIfSame: false,\n      customTemplateScope: null,\n      logScale: false,\n      customValueToPosition: null,\n      customPositionToValue: null,\n      selectionBarGradient: null,\n      ariaLabel: null,\n      ariaLabelledBy: null,\n      ariaLabelHigh: null,\n      ariaLabelledByHigh: null\n    };\n    var globalOptions = {};\n\n    var factory = {};\n    /**\n     * `options({})` allows global configuration of all sliders in the\n     * application.\n     *\n     *   var app = angular.module( 'App', ['rzModule'], function( RzSliderOptions ) {\n     *     // show ticks for all sliders\n     *     RzSliderOptions.options( { showTicks: true } );\n     *   });\n     */\n    factory.options = function(value) {\n      angular.extend(globalOptions, value);\n    };\n\n    factory.getOptions = function(options) {\n      return angular.extend({}, defaultOptions, globalOptions, options);\n    };\n\n    return factory;\n  })\n\n  .factory('rzThrottle', ['$timeout', function($timeout) {\n    /**\n     * rzThrottle\n     *\n     * Taken from underscore project\n     *\n     * @param {Function} func\n     * @param {number} wait\n     * @param {ThrottleOptions} options\n     * @returns {Function}\n     */\n    return function(func, wait, options) {\n      'use strict';\n      /* istanbul ignore next */\n      var getTime = (Date.now || function() {\n        return new Date().getTime();\n      });\n      var context, args, result;\n      var timeout = null;\n      var previous = 0;\n      options = options || {};\n      var later = function() {\n        previous = getTime();\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      };\n      return function() {\n        var now = getTime();\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n          $timeout.cancel(timeout);\n          timeout = null;\n          previous = now;\n          result = func.apply(context, args);\n          context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n          timeout = $timeout(later, remaining);\n        }\n        return result;\n      };\n    }\n  }])\n\n  .factory('RzSlider', ['$timeout', '$document', '$window', '$compile', 'RzSliderOptions', 'rzThrottle', function($timeout, $document, $window, $compile, RzSliderOptions, rzThrottle) {\n    'use strict';\n\n    /**\n     * Slider\n     *\n     * @param {ngScope} scope            The AngularJS scope\n     * @param {Element} sliderElem The slider directive element wrapped in jqLite\n     * @constructor\n     */\n    var Slider = function(scope, sliderElem) {\n      /**\n       * The slider's scope\n       *\n       * @type {ngScope}\n       */\n      this.scope = scope;\n\n      /**\n       * The slider inner low value (linked to rzSliderModel)\n       * @type {number}\n       */\n      this.lowValue = 0;\n\n      /**\n       * The slider inner high value (linked to rzSliderHigh)\n       * @type {number}\n       */\n      this.highValue = 0;\n\n      /**\n       * Slider element wrapped in jqLite\n       *\n       * @type {jqLite}\n       */\n      this.sliderElem = sliderElem;\n\n      /**\n       * Slider type\n       *\n       * @type {boolean} Set to true for range slider\n       */\n      this.range = this.scope.rzSliderModel !== undefined && this.scope.rzSliderHigh !== undefined;\n\n      /**\n       * Values recorded when first dragging the bar\n       *\n       * @type {Object}\n       */\n      this.dragging = {\n        active: false,\n        value: 0,\n        difference: 0,\n        position: 0,\n        lowLimit: 0,\n        highLimit: 0\n      };\n\n      /**\n       * property that handle position (defaults to left for horizontal)\n       * @type {string}\n       */\n      this.positionProperty = 'left';\n\n      /**\n       * property that handle dimension (defaults to width for horizontal)\n       * @type {string}\n       */\n      this.dimensionProperty = 'width';\n\n      /**\n       * Half of the width or height of the slider handles\n       *\n       * @type {number}\n       */\n      this.handleHalfDim = 0;\n\n      /**\n       * Maximum position the slider handle can have\n       *\n       * @type {number}\n       */\n      this.maxPos = 0;\n\n      /**\n       * Precision\n       *\n       * @type {number}\n       */\n      this.precision = 0;\n\n      /**\n       * Step\n       *\n       * @type {number}\n       */\n      this.step = 1;\n\n      /**\n       * The name of the handle we are currently tracking\n       *\n       * @type {string}\n       */\n      this.tracking = '';\n\n      /**\n       * Minimum value (floor) of the model\n       *\n       * @type {number}\n       */\n      this.minValue = 0;\n\n      /**\n       * Maximum value (ceiling) of the model\n       *\n       * @type {number}\n       */\n      this.maxValue = 0;\n\n\n      /**\n       * The delta between min and max value\n       *\n       * @type {number}\n       */\n      this.valueRange = 0;\n\n\n      /**\n       * If showTicks/showTicksValues options are number.\n       * In this case, ticks values should be displayed below the slider.\n       * @type {boolean}\n       */\n      this.intermediateTicks = false;\n\n      /**\n       * Set to true if init method already executed\n       *\n       * @type {boolean}\n       */\n      this.initHasRun = false;\n\n      /**\n       * Used to call onStart on the first keydown event\n       *\n       * @type {boolean}\n       */\n      this.firstKeyDown = false;\n\n      /**\n       * Internal flag to prevent watchers to be called when the sliders value are modified internally.\n       * @type {boolean}\n       */\n      this.internalChange = false;\n\n      /**\n       * Internal flag to keep track of the visibility of combo label\n       * @type {boolean}\n       */\n      this.cmbLabelShown = false;\n\n      /**\n       * Internal variable to keep track of the focus element\n       */\n      this.currentFocusElement = null;\n\n      // Slider DOM elements wrapped in jqLite\n      this.fullBar = null; // The whole slider bar\n      this.selBar = null; // Highlight between two handles\n      this.minH = null; // Left slider handle\n      this.maxH = null; // Right slider handle\n      this.flrLab = null; // Floor label\n      this.ceilLab = null; // Ceiling label\n      this.minLab = null; // Label above the low value\n      this.maxLab = null; // Label above the high value\n      this.cmbLab = null; // Combined label\n      this.ticks = null; // The ticks\n\n      // Initialize slider\n      this.init();\n    };\n\n    // Add instance methods\n    Slider.prototype = {\n\n      /**\n       * Initialize slider\n       *\n       * @returns {undefined}\n       */\n      init: function() {\n        var thrLow, thrHigh,\n          self = this;\n\n        var calcDimFn = function() {\n          self.calcViewDimensions();\n        };\n\n        this.applyOptions();\n        this.syncLowValue();\n        if (this.range)\n          this.syncHighValue();\n        this.initElemHandles();\n        this.manageElementsStyle();\n        this.setDisabledState();\n        this.calcViewDimensions();\n        this.setMinAndMax();\n        this.addAccessibility();\n        this.updateCeilLab();\n        this.updateFloorLab();\n        this.initHandles();\n        this.manageEventsBindings();\n\n        // Recalculate slider view dimensions\n        this.scope.$on('reCalcViewDimensions', calcDimFn);\n\n        // Recalculate stuff if view port dimensions have changed\n        angular.element($window).on('resize', calcDimFn);\n\n        this.initHasRun = true;\n\n        // Watch for changes to the model\n        thrLow = rzThrottle(function() {\n          self.onLowHandleChange();\n        }, self.options.interval);\n\n        thrHigh = rzThrottle(function() {\n          self.onHighHandleChange();\n        }, self.options.interval);\n\n        this.scope.$on('rzSliderForceRender', function() {\n          self.resetLabelsValue();\n          thrLow();\n          if (self.range) {\n            thrHigh();\n          }\n          self.resetSlider();\n        });\n\n        // Watchers (order is important because in case of simultaneous change,\n        // watchers will be called in the same order)\n        this.scope.$watch('rzSliderOptions()', function(newValue, oldValue) {\n          if (newValue === oldValue)\n            return;\n          self.applyOptions(); // need to be called before synchronizing the values\n          self.syncLowValue();\n          if (self.range)\n            self.syncHighValue();\n          self.resetSlider();\n        }, true);\n\n        this.scope.$watch('rzSliderModel', function(newValue, oldValue) {\n          if (self.internalChange)\n            return;\n          if (newValue === oldValue)\n            return;\n          thrLow();\n        });\n\n        this.scope.$watch('rzSliderHigh', function(newValue, oldValue) {\n          if (self.internalChange)\n            return;\n          if (newValue === oldValue)\n            return;\n          if (newValue != null)\n            thrHigh();\n          if (self.range && newValue == null || !self.range && newValue != null) {\n            self.applyOptions();\n            self.resetSlider();\n          }\n        });\n\n        this.scope.$on('$destroy', function() {\n          self.unbindEvents();\n          angular.element($window).off('resize', calcDimFn);\n          self.currentFocusElement = null;\n        });\n      },\n\n      findStepIndex: function(modelValue) {\n        var index = 0;\n        for (var i = 0; i < this.options.stepsArray.length; i++) {\n          var step = this.options.stepsArray[i];\n          if (step === modelValue) {\n            index = i;\n            break;\n          }\n          else if (angular.isDate(step)) {\n            if (step.getTime() === modelValue.getTime()) {\n              index = i;\n              break;\n            }\n          }\n          else if (angular.isObject(step)) {\n            if (angular.isDate(step.value) && step.value.getTime() === modelValue.getTime() || step.value === modelValue) {\n              index = i;\n              break;\n            }\n          }\n        }\n        return index;\n      },\n\n      syncLowValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.lowValue = this.findStepIndex(this.scope.rzSliderModel);\n          else\n            this.lowValue = this.scope.rzSliderModel\n        }\n        else\n          this.lowValue = this.scope.rzSliderModel;\n      },\n\n      syncHighValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.highValue = this.findStepIndex(this.scope.rzSliderHigh);\n          else\n            this.highValue = this.scope.rzSliderHigh\n        }\n        else\n          this.highValue = this.scope.rzSliderHigh;\n      },\n\n      getStepValue: function(sliderValue) {\n        var step = this.options.stepsArray[sliderValue];\n        if (angular.isDate(step))\n          return step;\n        if (angular.isObject(step))\n          return step.value;\n        return step;\n      },\n\n      applyLowValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.scope.rzSliderModel = this.getStepValue(this.lowValue);\n          else\n            this.scope.rzSliderModel = this.lowValue\n        }\n        else\n          this.scope.rzSliderModel = this.lowValue;\n      },\n\n      applyHighValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.scope.rzSliderHigh = this.getStepValue(this.highValue);\n          else\n            this.scope.rzSliderHigh = this.highValue\n        }\n        else\n          this.scope.rzSliderHigh = this.highValue;\n      },\n\n      /*\n       * Reflow the slider when the low handle changes (called with throttle)\n       */\n      onLowHandleChange: function() {\n        this.syncLowValue();\n        if (this.range)\n          this.syncHighValue();\n        this.setMinAndMax();\n        this.updateLowHandle(this.valueToPosition(this.lowValue));\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateAriaAttributes();\n        if (this.range) {\n          this.updateCmbLabel();\n        }\n      },\n\n      /*\n       * Reflow the slider when the high handle changes (called with throttle)\n       */\n      onHighHandleChange: function() {\n        this.syncLowValue();\n        this.syncHighValue();\n        this.setMinAndMax();\n        this.updateHighHandle(this.valueToPosition(this.highValue));\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateCmbLabel();\n        this.updateAriaAttributes();\n      },\n\n      /**\n       * Read the user options and apply them to the slider model\n       */\n      applyOptions: function() {\n        var sliderOptions;\n        if (this.scope.rzSliderOptions)\n          sliderOptions = this.scope.rzSliderOptions();\n        else\n          sliderOptions = {};\n\n        this.options = RzSliderOptions.getOptions(sliderOptions);\n\n        if (this.options.step <= 0)\n          this.options.step = 1;\n\n        this.range = this.scope.rzSliderModel !== undefined && this.scope.rzSliderHigh !== undefined;\n        this.options.draggableRange = this.range && this.options.draggableRange;\n        this.options.draggableRangeOnly = this.range && this.options.draggableRangeOnly;\n        if (this.options.draggableRangeOnly) {\n          this.options.draggableRange = true;\n        }\n\n        this.options.showTicks = this.options.showTicks || this.options.showTicksValues || !!this.options.ticksArray;\n        this.scope.showTicks = this.options.showTicks; //scope is used in the template\n        if (angular.isNumber(this.options.showTicks) || this.options.ticksArray)\n          this.intermediateTicks = true;\n\n        this.options.showSelectionBar = this.options.showSelectionBar || this.options.showSelectionBarEnd\n          || this.options.showSelectionBarFromValue !== null;\n\n        if (this.options.stepsArray) {\n          this.parseStepsArray();\n        } else {\n          if (this.options.translate)\n            this.customTrFn = this.options.translate;\n          else\n            this.customTrFn = function(value) {\n              return String(value);\n            };\n\n          this.getLegend = this.options.getLegend;\n        }\n\n        if (this.options.vertical) {\n          this.positionProperty = 'bottom';\n          this.dimensionProperty = 'height';\n        }\n\n        if (this.options.customTemplateScope)\n          this.scope.custom = this.options.customTemplateScope;\n      },\n\n      parseStepsArray: function() {\n        this.options.floor = 0;\n        this.options.ceil = this.options.stepsArray.length - 1;\n        this.options.step = 1;\n\n        if (this.options.translate) {\n          this.customTrFn = this.options.translate;\n        }\n        else {\n          this.customTrFn = function(modelValue) {\n            if (this.options.bindIndexForStepsArray)\n              return this.getStepValue(modelValue);\n            return modelValue;\n          };\n        }\n\n        this.getLegend = function(index) {\n          var step = this.options.stepsArray[index];\n          if (angular.isObject(step))\n            return step.legend;\n          return null;\n        };\n      },\n\n      /**\n       * Resets slider\n       *\n       * @returns {undefined}\n       */\n      resetSlider: function() {\n        this.manageElementsStyle();\n        this.addAccessibility();\n        this.setMinAndMax();\n        this.updateCeilLab();\n        this.updateFloorLab();\n        this.unbindEvents();\n        this.manageEventsBindings();\n        this.setDisabledState();\n        this.calcViewDimensions();\n        this.refocusPointerIfNeeded();\n      },\n\n      refocusPointerIfNeeded: function() {\n        if (this.currentFocusElement) {\n          this.onPointerFocus(this.currentFocusElement.pointer, this.currentFocusElement.ref);\n          this.focusElement(this.currentFocusElement.pointer)\n        }\n      },\n\n      /**\n       * Set the slider children to variables for easy access\n       *\n       * Run only once during initialization\n       *\n       * @returns {undefined}\n       */\n      initElemHandles: function() {\n        // Assign all slider elements to object properties for easy access\n        angular.forEach(this.sliderElem.children(), function(elem, index) {\n          var jElem = angular.element(elem);\n\n          switch (index) {\n            case 0:\n              this.leftOutSelBar = jElem;\n              break;\n            case 1:\n              this.rightOutSelBar = jElem;\n              break;\n            case 2:\n              this.fullBar = jElem;\n              break;\n            case 3:\n              this.selBar = jElem;\n              break;\n            case 4:\n              this.minH = jElem;\n              break;\n            case 5:\n              this.maxH = jElem;\n              break;\n            case 6:\n              this.flrLab = jElem;\n              break;\n            case 7:\n              this.ceilLab = jElem;\n              break;\n            case 8:\n              this.minLab = jElem;\n              break;\n            case 9:\n              this.maxLab = jElem;\n              break;\n            case 10:\n              this.cmbLab = jElem;\n              break;\n            case 11:\n              this.ticks = jElem;\n              break;\n          }\n\n        }, this);\n\n        // Initialize position cache properties\n        this.selBar.rzsp = 0;\n        this.minH.rzsp = 0;\n        this.maxH.rzsp = 0;\n        this.flrLab.rzsp = 0;\n        this.ceilLab.rzsp = 0;\n        this.minLab.rzsp = 0;\n        this.maxLab.rzsp = 0;\n        this.cmbLab.rzsp = 0;\n      },\n\n      /**\n       * Update each elements style based on options\n       */\n      manageElementsStyle: function() {\n\n        if (!this.range)\n          this.maxH.css('display', 'none');\n        else\n          this.maxH.css('display', '');\n\n\n        this.alwaysHide(this.flrLab, this.options.showTicksValues || this.options.hideLimitLabels);\n        this.alwaysHide(this.ceilLab, this.options.showTicksValues || this.options.hideLimitLabels);\n\n        var hideLabelsForTicks = this.options.showTicksValues && !this.intermediateTicks;\n        this.alwaysHide(this.minLab, hideLabelsForTicks || this.options.hidePointerLabels);\n        this.alwaysHide(this.maxLab, hideLabelsForTicks || !this.range || this.options.hidePointerLabels);\n        this.alwaysHide(this.cmbLab, hideLabelsForTicks || !this.range || this.options.hidePointerLabels);\n        this.alwaysHide(this.selBar, !this.range && !this.options.showSelectionBar);\n        this.alwaysHide(this.leftOutSelBar, !this.range || !this.options.showOuterSelectionBars);\n        this.alwaysHide(this.rightOutSelBar, !this.range || !this.options.showOuterSelectionBars);\n\n        if ( this.range && this.options.showOuterSelectionBars ) {\n          this.fullBar.addClass('rz-transparent');\n        }\n\n        if (this.options.vertical)\n          this.sliderElem.addClass('rz-vertical');\n\n        if (this.options.draggableRange)\n          this.selBar.addClass('rz-draggable');\n        else\n          this.selBar.removeClass('rz-draggable');\n\n        if (this.intermediateTicks && this.options.showTicksValues)\n          this.ticks.addClass('rz-ticks-values-under');\n      },\n\n      alwaysHide: function(el, hide) {\n        el.rzAlwaysHide = hide;\n        if (hide)\n          this.hideEl(el);\n        else\n          this.showEl(el)\n      },\n\n      /**\n       * Manage the events bindings based on readOnly and disabled options\n       *\n       * @returns {undefined}\n       */\n      manageEventsBindings: function() {\n        if (this.options.disabled || this.options.readOnly)\n          this.unbindEvents();\n        else\n          this.bindEvents();\n      },\n\n      /**\n       * Set the disabled state based on rzSliderDisabled\n       *\n       * @returns {undefined}\n       */\n      setDisabledState: function() {\n        if (this.options.disabled) {\n          this.sliderElem.attr('disabled', 'disabled');\n        } else {\n          this.sliderElem.attr('disabled', null);\n        }\n      },\n\n      /**\n       * Reset label values\n       *\n       * @return {undefined}\n       */\n      resetLabelsValue: function() {\n        this.minLab.rzsv = undefined;\n        this.maxLab.rzsv = undefined;\n      },\n\n      /**\n       * Initialize slider handles positions and labels\n       *\n       * Run only once during initialization and every time view port changes size\n       *\n       * @returns {undefined}\n       */\n      initHandles: function() {\n        this.updateLowHandle(this.valueToPosition(this.lowValue));\n\n        /*\n         the order here is important since the selection bar should be\n         updated after the high handle but before the combined label\n         */\n        if (this.range)\n          this.updateHighHandle(this.valueToPosition(this.highValue));\n        this.updateSelectionBar();\n        if (this.range)\n          this.updateCmbLabel();\n\n        this.updateTicksScale();\n      },\n\n      /**\n       * Translate value to human readable format\n       *\n       * @param {number|string} value\n       * @param {jqLite} label\n       * @param {String} which\n       * @param {boolean} [useCustomTr]\n       * @returns {undefined}\n       */\n      translateFn: function(value, label, which, useCustomTr) {\n        useCustomTr = useCustomTr === undefined ? true : useCustomTr;\n\n        var valStr = '',\n          getDimension = false,\n          noLabelInjection = label.hasClass('no-label-injection');\n\n        if (useCustomTr) {\n          if (this.options.stepsArray && !this.options.bindIndexForStepsArray)\n            value = this.getStepValue(value);\n          valStr = String(this.customTrFn(value, this.options.id, which));\n        }\n        else {\n          valStr = String(value)\n        }\n\n        if (label.rzsv === undefined || label.rzsv.length !== valStr.length || (label.rzsv.length > 0 && label.rzsd === 0)) {\n          getDimension = true;\n          label.rzsv = valStr;\n        }\n\n        if (!noLabelInjection) {\n          label.html(valStr);\n        }\n        ;\n\n        this.scope[which + 'Label'] = valStr;\n\n        // Update width only when length of the label have changed\n        if (getDimension) {\n          this.getDimension(label);\n        }\n      },\n\n      /**\n       * Set maximum and minimum values for the slider and ensure the model and high\n       * value match these limits\n       * @returns {undefined}\n       */\n      setMinAndMax: function() {\n\n        this.step = +this.options.step;\n        this.precision = +this.options.precision;\n\n        this.minValue = this.options.floor;\n        if (this.options.logScale && this.minValue === 0)\n          throw Error(\"Can't use floor=0 with logarithmic scale\");\n\n        if (this.options.enforceStep) {\n          this.lowValue = this.roundStep(this.lowValue);\n          if (this.range)\n            this.highValue = this.roundStep(this.highValue);\n        }\n\n        if (this.options.ceil != null)\n          this.maxValue = this.options.ceil;\n        else\n          this.maxValue = this.options.ceil = this.range ? this.highValue : this.lowValue;\n\n        if (this.options.enforceRange) {\n          this.lowValue = this.sanitizeValue(this.lowValue);\n          if (this.range)\n            this.highValue = this.sanitizeValue(this.highValue);\n        }\n\n        this.applyLowValue();\n        if (this.range)\n          this.applyHighValue();\n\n        this.valueRange = this.maxValue - this.minValue;\n      },\n\n      /**\n       * Adds accessibility attributes\n       *\n       * Run only once during initialization\n       *\n       * @returns {undefined}\n       */\n      addAccessibility: function() {\n        this.minH.attr('role', 'slider');\n        this.updateAriaAttributes();\n        if (this.options.keyboardSupport && !(this.options.readOnly || this.options.disabled))\n          this.minH.attr('tabindex', '0');\n        else\n          this.minH.attr('tabindex', '');\n        if (this.options.vertical)\n          this.minH.attr('aria-orientation', 'vertical');\n        if (this.options.ariaLabel)\n          this.minH.attr('aria-label', this.options.ariaLabel);\n        else if (this.options.ariaLabelledBy)\n          this.minH.attr('aria-labelledby', this.options.ariaLabelledBy);\n\n        if (this.range) {\n          this.maxH.attr('role', 'slider');\n          if (this.options.keyboardSupport && !(this.options.readOnly || this.options.disabled))\n            this.maxH.attr('tabindex', '0');\n          else\n            this.maxH.attr('tabindex', '');\n          if (this.options.vertical)\n            this.maxH.attr('aria-orientation', 'vertical');\n          if (this.options.ariaLabelHigh)\n            this.maxH.attr('aria-label', this.options.ariaLabelHigh);\n          else if (this.options.ariaLabelledByHigh)\n            this.maxH.attr('aria-labelledby', this.options.ariaLabelledByHigh);\n        }\n      },\n\n      /**\n       * Updates aria attributes according to current values\n       */\n      updateAriaAttributes: function() {\n        this.minH.attr({\n          'aria-valuenow': this.scope.rzSliderModel,\n          'aria-valuetext': this.customTrFn(this.scope.rzSliderModel, this.options.id, 'model'),\n          'aria-valuemin': this.minValue,\n          'aria-valuemax': this.maxValue\n        });\n        if (this.range) {\n          this.maxH.attr({\n            'aria-valuenow': this.scope.rzSliderHigh,\n            'aria-valuetext': this.customTrFn(this.scope.rzSliderHigh, this.options.id, 'high'),\n            'aria-valuemin': this.minValue,\n            'aria-valuemax': this.maxValue\n          });\n        }\n      },\n\n      /**\n       * Calculate dimensions that are dependent on view port size\n       *\n       * Run once during initialization and every time view port changes size.\n       *\n       * @returns {undefined}\n       */\n      calcViewDimensions: function() {\n        var handleWidth = this.getDimension(this.minH);\n\n        this.handleHalfDim = handleWidth / 2;\n        this.barDimension = this.getDimension(this.fullBar);\n\n        this.maxPos = this.barDimension - handleWidth;\n\n        this.getDimension(this.sliderElem);\n        this.sliderElem.rzsp = this.sliderElem[0].getBoundingClientRect()[this.positionProperty];\n\n        if (this.initHasRun) {\n          this.updateFloorLab();\n          this.updateCeilLab();\n          this.initHandles();\n          var self = this;\n          $timeout(function() {\n            self.updateTicksScale();\n          });\n        }\n      },\n\n      /**\n       * Update the ticks position\n       *\n       * @returns {undefined}\n       */\n      updateTicksScale: function() {\n        if (!this.options.showTicks) return;\n\n        var ticksArray = this.options.ticksArray || this.getTicksArray(),\n          translate = this.options.vertical ? 'translateY' : 'translateX',\n          self = this;\n\n        if (this.options.rightToLeft)\n          ticksArray.reverse();\n\n        this.scope.ticks = ticksArray.map(function(value) {\n          var position = self.valueToPosition(value);\n\n          if (self.options.vertical)\n            position = self.maxPos - position;\n\n          var translation = translate + '(' + Math.round(position) + 'px)';\n          var tick = {\n            selected: self.isTickSelected(value),\n            style: {\n              '-webkit-transform': translation,\n              '-moz-transform': translation,\n              '-o-transform': translation,\n              '-ms-transform': translation,\n              'transform': translation\n            }\n          };\n          if (tick.selected && self.options.getSelectionBarColor) {\n            tick.style['background-color'] = self.getSelectionBarColor();\n          }\n          if (!tick.selected && self.options.getTickColor) {\n            tick.style['background-color'] = self.getTickColor(value);\n          }\n          if (self.options.ticksTooltip) {\n            tick.tooltip = self.options.ticksTooltip(value);\n            tick.tooltipPlacement = self.options.vertical ? 'right' : 'top';\n          }\n          if (self.options.showTicksValues === true || value % self.options.showTicksValues === 0) {\n            tick.value = self.getDisplayValue(value, 'tick-value');\n            if (self.options.ticksValuesTooltip) {\n              tick.valueTooltip = self.options.ticksValuesTooltip(value);\n              tick.valueTooltipPlacement = self.options.vertical ? 'right' : 'top';\n            }\n          }\n          if (self.getLegend) {\n            var legend = self.getLegend(value, self.options.id);\n            if (legend)\n              tick.legend = legend;\n          }\n          return tick;\n        });\n      },\n\n      getTicksArray: function() {\n        var step = this.step,\n          ticksArray = [];\n        if (this.intermediateTicks)\n          step = this.options.showTicks;\n        for (var value = this.minValue; value <= this.maxValue; value += step) {\n          ticksArray.push(value);\n        }\n        return ticksArray;\n      },\n\n      isTickSelected: function(value) {\n        if (!this.range) {\n          if (this.options.showSelectionBarFromValue !== null) {\n            var center = this.options.showSelectionBarFromValue;\n            if (this.lowValue > center && value >= center && value <= this.lowValue)\n              return true;\n            else if (this.lowValue < center && value <= center && value >= this.lowValue)\n              return true;\n          }\n          else if (this.options.showSelectionBarEnd) {\n            if (value >= this.lowValue)\n              return true;\n          }\n          else if (this.options.showSelectionBar && value <= this.lowValue)\n            return true;\n        }\n        if (this.range && value >= this.lowValue && value <= this.highValue)\n          return true;\n        return false;\n      },\n\n      /**\n       * Update position of the floor label\n       *\n       * @returns {undefined}\n       */\n      updateFloorLab: function() {\n        this.translateFn(this.minValue, this.flrLab, 'floor');\n        this.getDimension(this.flrLab);\n        var position = this.options.rightToLeft ? this.barDimension - this.flrLab.rzsd : 0;\n        this.setPosition(this.flrLab, position);\n      },\n\n      /**\n       * Update position of the ceiling label\n       *\n       * @returns {undefined}\n       */\n      updateCeilLab: function() {\n        this.translateFn(this.maxValue, this.ceilLab, 'ceil');\n        this.getDimension(this.ceilLab);\n        var position = this.options.rightToLeft ? 0 : this.barDimension - this.ceilLab.rzsd;\n        this.setPosition(this.ceilLab, position);\n      },\n\n      /**\n       * Update slider handles and label positions\n       *\n       * @param {string} which\n       * @param {number} newPos\n       */\n      updateHandles: function(which, newPos) {\n        if (which === 'lowValue')\n          this.updateLowHandle(newPos);\n        else\n          this.updateHighHandle(newPos);\n\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        if (this.range)\n          this.updateCmbLabel();\n      },\n\n      /**\n       * Helper function to work out the position for handle labels depending on RTL or not\n       *\n       * @param {string} labelName maxLab or minLab\n       * @param newPos\n       *\n       * @returns {number}\n       */\n      getHandleLabelPos: function(labelName, newPos) {\n        var labelRzsd = this[labelName].rzsd,\n          nearHandlePos = newPos - labelRzsd / 2 + this.handleHalfDim,\n          endOfBarPos = this.barDimension - labelRzsd;\n\n        if (!this.options.boundPointerLabels)\n          return nearHandlePos;\n\n        if (this.options.rightToLeft && labelName === 'minLab' || !this.options.rightToLeft && labelName === 'maxLab') {\n          return Math.min(nearHandlePos, endOfBarPos);\n        } else {\n          return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n        }\n      },\n\n      /**\n       * Update low slider handle position and label\n       *\n       * @param {number} newPos\n       * @returns {undefined}\n       */\n      updateLowHandle: function(newPos) {\n        this.setPosition(this.minH, newPos);\n        this.translateFn(this.lowValue, this.minLab, 'model');\n        this.setPosition(this.minLab, this.getHandleLabelPos('minLab', newPos));\n\n        if (this.options.getPointerColor) {\n          var pointercolor = this.getPointerColor('min');\n          this.scope.minPointerStyle = {\n            backgroundColor: pointercolor\n          };\n        }\n\n        if (this.options.autoHideLimitLabels) {\n          this.shFloorCeil();\n        }\n      },\n\n      /**\n       * Update high slider handle position and label\n       *\n       * @param {number} newPos\n       * @returns {undefined}\n       */\n      updateHighHandle: function(newPos) {\n        this.setPosition(this.maxH, newPos);\n        this.translateFn(this.highValue, this.maxLab, 'high');\n        this.setPosition(this.maxLab, this.getHandleLabelPos('maxLab', newPos));\n\n        if (this.options.getPointerColor) {\n          var pointercolor = this.getPointerColor('max');\n          this.scope.maxPointerStyle = {\n            backgroundColor: pointercolor\n          };\n        }\n        if (this.options.autoHideLimitLabels) {\n          this.shFloorCeil();\n        }\n\n      },\n\n      /**\n       * Show/hide floor/ceiling label\n       *\n       * @returns {undefined}\n       */\n      shFloorCeil: function() {\n        // Show based only on hideLimitLabels if pointer labels are hidden\n        if (this.options.hidePointerLabels) {\n          return;\n        }\n        var flHidden = false,\n          clHidden = false,\n          isMinLabAtFloor = this.isLabelBelowFloorLab(this.minLab),\n          isMinLabAtCeil = this.isLabelAboveCeilLab(this.minLab),\n          isMaxLabAtCeil = this.isLabelAboveCeilLab(this.maxLab),\n          isCmbLabAtFloor = this.isLabelBelowFloorLab(this.cmbLab),\n          isCmbLabAtCeil = this.isLabelAboveCeilLab(this.cmbLab);\n\n        if (isMinLabAtFloor) {\n          flHidden = true;\n          this.hideEl(this.flrLab);\n        } else {\n          flHidden = false;\n          this.showEl(this.flrLab);\n        }\n\n        if (isMinLabAtCeil) {\n          clHidden = true;\n          this.hideEl(this.ceilLab);\n        } else {\n          clHidden = false;\n          this.showEl(this.ceilLab);\n        }\n\n        if (this.range) {\n          var hideCeil = this.cmbLabelShown ? isCmbLabAtCeil : isMaxLabAtCeil;\n          var hideFloor = this.cmbLabelShown ? isCmbLabAtFloor : isMinLabAtFloor;\n\n          if (hideCeil) {\n            this.hideEl(this.ceilLab);\n          } else if (!clHidden) {\n            this.showEl(this.ceilLab);\n          }\n\n          // Hide or show floor label\n          if (hideFloor) {\n            this.hideEl(this.flrLab);\n          } else if (!flHidden) {\n            this.showEl(this.flrLab);\n          }\n        }\n      },\n\n      isLabelBelowFloorLab: function(label) {\n        var isRTL = this.options.rightToLeft,\n          pos = label.rzsp,\n          dim = label.rzsd,\n          floorPos = this.flrLab.rzsp,\n          floorDim = this.flrLab.rzsd;\n        return isRTL ?\n          pos + dim >= floorPos - 2 :\n          pos <= floorPos + floorDim + 2;\n      },\n\n      isLabelAboveCeilLab: function(label) {\n        var isRTL = this.options.rightToLeft,\n          pos = label.rzsp,\n          dim = label.rzsd,\n          ceilPos = this.ceilLab.rzsp,\n          ceilDim = this.ceilLab.rzsd;\n        return isRTL ?\n          pos <= ceilPos + ceilDim + 2 :\n          pos + dim >= ceilPos - 2;\n      },\n\n      /**\n       * Update slider selection bar, combined label and range label\n       *\n       * @returns {undefined}\n       */\n      updateSelectionBar: function() {\n        var position = 0,\n          dimension = 0,\n          isSelectionBarFromRight = this.options.rightToLeft ? !this.options.showSelectionBarEnd : this.options.showSelectionBarEnd,\n          positionForRange = this.options.rightToLeft ? this.maxH.rzsp + this.handleHalfDim : this.minH.rzsp + this.handleHalfDim;\n\n        if (this.range) {\n          dimension = Math.abs(this.maxH.rzsp - this.minH.rzsp);\n          position = positionForRange;\n        }\n        else {\n          if (this.options.showSelectionBarFromValue !== null) {\n            var center = this.options.showSelectionBarFromValue,\n              centerPosition = this.valueToPosition(center),\n              isModelGreaterThanCenter = this.options.rightToLeft ? this.lowValue <= center : this.lowValue > center;\n            if (isModelGreaterThanCenter) {\n              dimension = this.minH.rzsp - centerPosition;\n              position = centerPosition + this.handleHalfDim;\n            }\n            else {\n              dimension = centerPosition - this.minH.rzsp;\n              position = this.minH.rzsp + this.handleHalfDim;\n            }\n          }\n          else if (isSelectionBarFromRight) {\n            dimension = Math.abs(this.maxPos - this.minH.rzsp) + this.handleHalfDim;\n            position = this.minH.rzsp + this.handleHalfDim;\n          } else {\n            dimension = this.minH.rzsp + this.handleHalfDim;\n            position = 0;\n          }\n        }\n        this.setDimension(this.selBar, dimension);\n        this.setPosition(this.selBar, position);\n        if (this.range && this.options.showOuterSelectionBars) {\n          if (this.options.rightToLeft) {\n            this.setDimension(this.rightOutSelBar, position);\n            this.setPosition(this.rightOutSelBar, 0);\n            this.setDimension(this.leftOutSelBar, this.getDimension(this.fullBar) - (position + dimension));\n            this.setPosition(this.leftOutSelBar, position + dimension);\n          } else {\n            this.setDimension(this.leftOutSelBar, position);\n            this.setPosition(this.leftOutSelBar, 0);\n            this.setDimension(this.rightOutSelBar, this.getDimension(this.fullBar) - (position + dimension));\n            this.setPosition(this.rightOutSelBar, position + dimension);\n          }\n        }\n        if (this.options.getSelectionBarColor) {\n          var color = this.getSelectionBarColor();\n          this.scope.barStyle = {\n            backgroundColor: color\n          };\n        } else if (this.options.selectionBarGradient) {\n          var offset = this.options.showSelectionBarFromValue !== null ? this.valueToPosition(this.options.showSelectionBarFromValue) : 0,\n            reversed = offset - position > 0 ^ isSelectionBarFromRight,\n            direction = this.options.vertical ? (reversed ? 'bottom' : 'top') : (reversed ? 'left' : 'right');\n          this.scope.barStyle = {\n            backgroundImage: 'linear-gradient(to ' + direction + ', ' + this.options.selectionBarGradient.from + ' 0%,' + this.options.selectionBarGradient.to + ' 100%)'\n          };\n          if (this.options.vertical) {\n            this.scope.barStyle.backgroundPosition = 'center ' + (offset + dimension + position + (reversed ? -this.handleHalfDim : 0)) + 'px';\n            this.scope.barStyle.backgroundSize = '100% ' + (this.barDimension - this.handleHalfDim) + 'px';\n          } else {\n            this.scope.barStyle.backgroundPosition = (offset - position + (reversed ? this.handleHalfDim : 0)) + 'px center';\n            this.scope.barStyle.backgroundSize = (this.barDimension - this.handleHalfDim) + 'px 100%';\n          }\n        }\n      },\n\n      /**\n       * Wrapper around the getSelectionBarColor of the user to pass to\n       * correct parameters\n       */\n      getSelectionBarColor: function() {\n        if (this.range)\n          return this.options.getSelectionBarColor(this.scope.rzSliderModel, this.scope.rzSliderHigh);\n        return this.options.getSelectionBarColor(this.scope.rzSliderModel);\n      },\n\n      /**\n       * Wrapper around the getPointerColor of the user to pass to\n       * correct parameters\n       */\n      getPointerColor: function(pointerType) {\n        if (pointerType === 'max') {\n          return this.options.getPointerColor(this.scope.rzSliderHigh, pointerType);\n        }\n        return this.options.getPointerColor(this.scope.rzSliderModel, pointerType);\n      },\n\n      /**\n       * Wrapper around the getTickColor of the user to pass to\n       * correct parameters\n       */\n      getTickColor: function(value) {\n        return this.options.getTickColor(value);\n      },\n\n      /**\n       * Update combined label position and value\n       *\n       * @returns {undefined}\n       */\n      updateCmbLabel: function() {\n        var isLabelOverlap = null;\n        if (this.options.rightToLeft) {\n          isLabelOverlap = this.minLab.rzsp - this.minLab.rzsd - 10 <= this.maxLab.rzsp;\n        } else {\n          isLabelOverlap = this.minLab.rzsp + this.minLab.rzsd + 10 >= this.maxLab.rzsp;\n        }\n\n        if (isLabelOverlap) {\n          var lowTr = this.getDisplayValue(this.lowValue, 'model'),\n            highTr = this.getDisplayValue(this.highValue, 'high'),\n            labelVal = '';\n          if (this.options.mergeRangeLabelsIfSame && lowTr === highTr) {\n            labelVal = lowTr;\n          } else {\n            labelVal = this.options.rightToLeft ? highTr + ' - ' + lowTr : lowTr + ' - ' + highTr;\n          }\n\n          this.translateFn(labelVal, this.cmbLab, 'cmb', false);\n          var pos = this.options.boundPointerLabels ? Math.min(\n            Math.max(\n              this.selBar.rzsp + this.selBar.rzsd / 2 - this.cmbLab.rzsd / 2,\n              0\n            ),\n            this.barDimension - this.cmbLab.rzsd\n          ) : this.selBar.rzsp + this.selBar.rzsd / 2 - this.cmbLab.rzsd / 2;\n\n          this.setPosition(this.cmbLab, pos);\n          this.cmbLabelShown = true;\n          this.hideEl(this.minLab);\n          this.hideEl(this.maxLab);\n          this.showEl(this.cmbLab);\n        } else {\n          this.cmbLabelShown = false;\n          this.updateHighHandle(this.valueToPosition(this.highValue));\n          this.updateLowHandle(this.valueToPosition(this.lowValue));\n          this.showEl(this.maxLab);\n          this.showEl(this.minLab);\n          this.hideEl(this.cmbLab);\n        }\n        if (this.options.autoHideLimitLabels) {\n          this.shFloorCeil();\n        }\n      },\n\n      /**\n       * Return the translated value if a translate function is provided else the original value\n       * @param value\n       * @param which if it's min or max handle\n       * @returns {*}\n       */\n      getDisplayValue: function(value, which) {\n        if (this.options.stepsArray && !this.options.bindIndexForStepsArray) {\n          value = this.getStepValue(value);\n        }\n        return this.customTrFn(value, this.options.id, which);\n      },\n\n      /**\n       * Round value to step and precision based on minValue\n       *\n       * @param {number} value\n       * @param {number} customStep a custom step to override the defined step\n       * @returns {number}\n       */\n      roundStep: function(value, customStep) {\n        var step = customStep ? customStep : this.step,\n          steppedDifference = parseFloat((value - this.minValue) / step).toPrecision(12);\n        steppedDifference = Math.round(+steppedDifference) * step;\n        var newValue = (this.minValue + steppedDifference).toFixed(this.precision);\n        return +newValue;\n      },\n\n      /**\n       * Hide element\n       *\n       * @param element\n       * @returns {jqLite} The jqLite wrapped DOM element\n       */\n      hideEl: function(element) {\n        return element.css({\n          visibility: 'hidden'\n        });\n      },\n\n      /**\n       * Show element\n       *\n       * @param element The jqLite wrapped DOM element\n       * @returns {jqLite} The jqLite\n       */\n      showEl: function(element) {\n        if (!!element.rzAlwaysHide) {\n          return element;\n        }\n\n        return element.css({\n          visibility: 'visible'\n        });\n      },\n\n      /**\n       * Set element left/top position depending on whether slider is horizontal or vertical\n       *\n       * @param {jqLite} elem The jqLite wrapped DOM element\n       * @param {number} pos\n       * @returns {number}\n       */\n      setPosition: function(elem, pos) {\n        elem.rzsp = pos;\n        var css = {};\n        css[this.positionProperty] = Math.round(pos) + 'px';\n        elem.css(css);\n        return pos;\n      },\n\n      /**\n       * Get element width/height depending on whether slider is horizontal or vertical\n       *\n       * @param {jqLite} elem The jqLite wrapped DOM element\n       * @returns {number}\n       */\n      getDimension: function(elem) {\n        var val = elem[0].getBoundingClientRect();\n        if (this.options.vertical)\n          elem.rzsd = (val.bottom - val.top) * this.options.scale;\n        else\n          elem.rzsd = (val.right - val.left) * this.options.scale;\n        return elem.rzsd;\n      },\n\n      /**\n       * Set element width/height depending on whether slider is horizontal or vertical\n       *\n       * @param {jqLite} elem  The jqLite wrapped DOM element\n       * @param {number} dim\n       * @returns {number}\n       */\n      setDimension: function(elem, dim) {\n        elem.rzsd = dim;\n        var css = {};\n        css[this.dimensionProperty] = Math.round(dim) + 'px';\n        elem.css(css);\n        return dim;\n      },\n\n      /**\n       * Returns a value that is within slider range\n       *\n       * @param {number} val\n       * @returns {number}\n       */\n      sanitizeValue: function(val) {\n        return Math.min(Math.max(val, this.minValue), this.maxValue);\n      },\n\n      /**\n       * Translate value to pixel position\n       *\n       * @param {number} val\n       * @returns {number}\n       */\n      valueToPosition: function(val) {\n        var fn = this.linearValueToPosition;\n        if (this.options.customValueToPosition)\n          fn = this.options.customValueToPosition;\n        else if (this.options.logScale)\n          fn = this.logValueToPosition;\n\n        val = this.sanitizeValue(val);\n        var percent = fn(val, this.minValue, this.maxValue) || 0;\n        if (this.options.rightToLeft)\n          percent = 1 - percent;\n        return percent * this.maxPos;\n      },\n\n      linearValueToPosition: function(val, minVal, maxVal) {\n        var range = maxVal - minVal;\n        return (val - minVal) / range;\n      },\n\n      logValueToPosition: function(val, minVal, maxVal) {\n        val = Math.log(val);\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        var range = maxVal - minVal;\n        return (val - minVal) / range;\n      },\n\n      /**\n       * Translate position to model value\n       *\n       * @param {number} position\n       * @returns {number}\n       */\n      positionToValue: function(position) {\n        var percent = position / this.maxPos;\n        if (this.options.rightToLeft)\n          percent = 1 - percent;\n        var fn = this.linearPositionToValue;\n        if (this.options.customPositionToValue)\n          fn = this.options.customPositionToValue;\n        else if (this.options.logScale)\n          fn = this.logPositionToValue;\n        return fn(percent, this.minValue, this.maxValue) || 0;\n      },\n\n      linearPositionToValue: function(percent, minVal, maxVal) {\n        return percent * (maxVal - minVal) + minVal;\n      },\n\n      logPositionToValue: function(percent, minVal, maxVal) {\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        var value = percent * (maxVal - minVal) + minVal;\n        return Math.exp(value);\n      },\n\n      getEventAttr: function(event, attr) {\n        return event.originalEvent === undefined ? event[attr] : event.originalEvent[attr]\n      },\n\n      // Events\n      /**\n       * Get the X-coordinate or Y-coordinate of an event\n       *\n       * @param {Object} event  The event\n       * @param targetTouchId The identifier of the touch with the X/Y coordinates\n       * @returns {number}\n       */\n      getEventXY: function(event, targetTouchId) {\n        /* http://stackoverflow.com/a/12336075/282882 */\n        //noinspection JSLint\n        var clientXY = this.options.vertical ? 'clientY' : 'clientX';\n        if (event[clientXY] !== undefined) {\n          return event[clientXY];\n        }\n\n        var touches = this.getEventAttr(event, 'touches');\n\n        if (targetTouchId !== undefined) {\n          for (var i = 0; i < touches.length; i++) {\n            if (touches[i].identifier === targetTouchId) {\n              return touches[i][clientXY];\n            }\n          }\n        }\n\n        // If no target touch or the target touch was not found in the event\n        // returns the coordinates of the first touch\n        return touches[0][clientXY];\n      },\n\n      /**\n       * Compute the event position depending on whether the slider is horizontal or vertical\n       * @param event\n       * @param targetTouchId If targetTouchId is provided it will be considered the position of that\n       * @returns {number}\n       */\n      getEventPosition: function(event, targetTouchId) {\n        var sliderPos = this.sliderElem.rzsp,\n          eventPos = 0;\n        if (this.options.vertical)\n          eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n        else\n          eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n        return eventPos * this.options.scale - this.handleHalfDim; // #346 handleHalfDim is already scaled\n      },\n\n      /**\n       * Get event names for move and event end\n       *\n       * @param {Event}    event    The event\n       *\n       * @return {{moveEvent: string, endEvent: string}}\n       */\n      getEventNames: function(event) {\n        var eventNames = {\n          moveEvent: '',\n          endEvent: ''\n        };\n\n        if (this.getEventAttr(event, 'touches')) {\n          eventNames.moveEvent = 'touchmove';\n          eventNames.endEvent = 'touchend';\n        } else {\n          eventNames.moveEvent = 'mousemove';\n          eventNames.endEvent = 'mouseup';\n        }\n\n        return eventNames;\n      },\n\n      /**\n       * Get the handle closest to an event.\n       *\n       * @param event {Event} The event\n       * @returns {jqLite} The handle closest to the event.\n       */\n      getNearestHandle: function(event) {\n        if (!this.range) {\n          return this.minH;\n        }\n        var position = this.getEventPosition(event),\n          distanceMin = Math.abs(position - this.minH.rzsp),\n          distanceMax = Math.abs(position - this.maxH.rzsp);\n        if (distanceMin < distanceMax)\n          return this.minH;\n        else if (distanceMin > distanceMax)\n          return this.maxH;\n        else if (!this.options.rightToLeft)\n        //if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n          return position < this.minH.rzsp ? this.minH : this.maxH;\n        else\n        //reverse in rtl\n          return position > this.minH.rzsp ? this.minH : this.maxH;\n      },\n\n      /**\n       * Wrapper function to focus an angular element\n       *\n       * @param el {AngularElement} the element to focus\n       */\n      focusElement: function(el) {\n        var DOM_ELEMENT = 0;\n        el[DOM_ELEMENT].focus();\n      },\n\n      /**\n       * Bind mouse and touch events to slider handles\n       *\n       * @returns {undefined}\n       */\n      bindEvents: function() {\n        var barTracking, barStart, barMove;\n\n        if (this.options.draggableRange) {\n          barTracking = 'rzSliderDrag';\n          barStart = this.onDragStart;\n          barMove = this.onDragMove;\n        } else {\n          barTracking = 'lowValue';\n          barStart = this.onStart;\n          barMove = this.onMove;\n        }\n\n        if (!this.options.onlyBindHandles) {\n          this.selBar.on('mousedown', angular.bind(this, barStart, null, barTracking));\n          this.selBar.on('mousedown', angular.bind(this, barMove, this.selBar));\n        }\n\n        if (this.options.draggableRangeOnly) {\n          this.minH.on('mousedown', angular.bind(this, barStart, null, barTracking));\n          this.maxH.on('mousedown', angular.bind(this, barStart, null, barTracking));\n        } else {\n          this.minH.on('mousedown', angular.bind(this, this.onStart, this.minH, 'lowValue'));\n          if (this.range) {\n            this.maxH.on('mousedown', angular.bind(this, this.onStart, this.maxH, 'highValue'));\n          }\n          if (!this.options.onlyBindHandles) {\n            this.fullBar.on('mousedown', angular.bind(this, this.onStart, null, null));\n            this.fullBar.on('mousedown', angular.bind(this, this.onMove, this.fullBar));\n            this.ticks.on('mousedown', angular.bind(this, this.onStart, null, null));\n            this.ticks.on('mousedown', angular.bind(this, this.onTickClick, this.ticks));\n          }\n        }\n\n        if (!this.options.onlyBindHandles) {\n          this.selBar.on('touchstart', angular.bind(this, barStart, null, barTracking));\n          this.selBar.on('touchstart', angular.bind(this, barMove, this.selBar));\n        }\n        if (this.options.draggableRangeOnly) {\n          this.minH.on('touchstart', angular.bind(this, barStart, null, barTracking));\n          this.maxH.on('touchstart', angular.bind(this, barStart, null, barTracking));\n        } else {\n          this.minH.on('touchstart', angular.bind(this, this.onStart, this.minH, 'lowValue'));\n          if (this.range) {\n            this.maxH.on('touchstart', angular.bind(this, this.onStart, this.maxH, 'highValue'));\n          }\n          if (!this.options.onlyBindHandles) {\n            this.fullBar.on('touchstart', angular.bind(this, this.onStart, null, null));\n            this.fullBar.on('touchstart', angular.bind(this, this.onMove, this.fullBar));\n            this.ticks.on('touchstart', angular.bind(this, this.onStart, null, null));\n            this.ticks.on('touchstart', angular.bind(this, this.onTickClick, this.ticks));\n          }\n        }\n\n        if (this.options.keyboardSupport) {\n          this.minH.on('focus', angular.bind(this, this.onPointerFocus, this.minH, 'lowValue'));\n          if (this.range) {\n            this.maxH.on('focus', angular.bind(this, this.onPointerFocus, this.maxH, 'highValue'));\n          }\n        }\n      },\n\n      /**\n       * Unbind mouse and touch events to slider handles\n       *\n       * @returns {undefined}\n       */\n      unbindEvents: function() {\n        this.minH.off();\n        this.maxH.off();\n        this.fullBar.off();\n        this.selBar.off();\n        this.ticks.off();\n      },\n\n      /**\n       * onStart event handler\n       *\n       * @param {?Object} pointer The jqLite wrapped DOM element; if null, the closest handle is used\n       * @param {?string} ref     The name of the handle being changed; if null, the closest handle's value is modified\n       * @param {Event}   event   The event\n       * @returns {undefined}\n       */\n      onStart: function(pointer, ref, event) {\n        var ehMove, ehEnd,\n          eventNames = this.getEventNames(event);\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        // We have to do this in case the HTML where the sliders are on\n        // have been animated into view.\n        this.calcViewDimensions();\n\n        if (pointer) {\n          this.tracking = ref;\n        } else {\n          pointer = this.getNearestHandle(event);\n          this.tracking = pointer === this.minH ? 'lowValue' : 'highValue';\n        }\n\n        pointer.addClass('rz-active');\n\n        if (this.options.keyboardSupport)\n          this.focusElement(pointer);\n\n        ehMove = angular.bind(this, this.dragging.active ? this.onDragMove : this.onMove, pointer);\n        ehEnd = angular.bind(this, this.onEnd, ehMove);\n\n        $document.on(eventNames.moveEvent, ehMove)\n        $document.on(eventNames.endEvent, ehEnd);\n        this.endHandlerToBeRemovedOnEnd = ehEnd;\n\n        this.callOnStart();\n\n        var changedTouches = this.getEventAttr(event, 'changedTouches');\n        if (changedTouches) {\n          // Store the touch identifier\n          if (!this.touchId) {\n            this.isDragging = true;\n            this.touchId = changedTouches[0].identifier;\n          }\n        }\n      },\n\n      /**\n       * onMove event handler\n       *\n       * @param {jqLite} pointer\n       * @param {Event}  event The event\n       * @param {boolean}  fromTick if the event occured on a tick or not\n       * @returns {undefined}\n       */\n      onMove: function(pointer, event, fromTick) {\n        var changedTouches = this.getEventAttr(event, 'changedTouches');\n        var touchForThisSlider;\n        if (changedTouches) {\n          for (var i = 0; i < changedTouches.length; i++) {\n            if (changedTouches[i].identifier === this.touchId) {\n              touchForThisSlider = changedTouches[i];\n              break;\n            }\n          }\n        }\n\n        if (changedTouches && !touchForThisSlider) {\n          return;\n        }\n\n        var newPos = this.getEventPosition(event, touchForThisSlider ? touchForThisSlider.identifier : undefined),\n          newValue,\n          ceilValue = this.options.rightToLeft ? this.minValue : this.maxValue,\n          flrValue = this.options.rightToLeft ? this.maxValue : this.minValue;\n\n        if (newPos <= 0) {\n          newValue = flrValue;\n        } else if (newPos >= this.maxPos) {\n          newValue = ceilValue;\n        } else {\n          newValue = this.positionToValue(newPos);\n          if (fromTick && angular.isNumber(this.options.showTicks))\n            newValue = this.roundStep(newValue, this.options.showTicks);\n          else\n            newValue = this.roundStep(newValue);\n        }\n        this.positionTrackingHandle(newValue);\n      },\n\n      /**\n       * onEnd event handler\n       *\n       * @param {Event}    event    The event\n       * @param {Function} ehMove   The bound move event handler\n       * @returns {undefined}\n       */\n      onEnd: function(ehMove, event) {\n        var changedTouches = this.getEventAttr(event, 'changedTouches');\n        if (changedTouches && changedTouches[0].identifier !== this.touchId) {\n          return;\n        }\n        this.isDragging = false;\n        this.touchId = null;\n\n        if (!this.options.keyboardSupport) {\n          this.minH.removeClass('rz-active');\n          this.maxH.removeClass('rz-active');\n          this.tracking = '';\n        }\n        this.dragging.active = false;\n\n        var eventName = this.getEventNames(event);\n        $document.off(eventName.moveEvent, ehMove);\n        $document.off(eventName.endEvent, this.endHandlerToBeRemovedOnEnd);\n        this.endHandlerToBeRemovedOnEnd = null;\n        this.callOnEnd();\n      },\n\n      onTickClick: function(pointer, event) {\n        this.onMove(pointer, event, true);\n      },\n\n      onPointerFocus: function(pointer, ref) {\n        this.tracking = ref;\n        pointer.one('blur', angular.bind(this, this.onPointerBlur, pointer));\n        pointer.on('keydown', angular.bind(this, this.onKeyboardEvent));\n        pointer.on('keyup', angular.bind(this, this.onKeyUp));\n        this.firstKeyDown = true;\n        pointer.addClass('rz-active');\n\n        this.currentFocusElement = {\n          pointer: pointer,\n          ref: ref\n        };\n      },\n\n      onKeyUp: function() {\n        this.firstKeyDown = true;\n        this.callOnEnd();\n      },\n\n      onPointerBlur: function(pointer) {\n        pointer.off('keydown');\n        pointer.off('keyup');\n        pointer.removeClass('rz-active');\n        if (!this.isDragging) {\n          this.tracking = '';\n          this.currentFocusElement = null\n        }\n      },\n\n      /**\n       * Key actions helper function\n       *\n       * @param {number} currentValue value of the slider\n       *\n       * @returns {?Object} action value mappings\n       */\n      getKeyActions: function(currentValue) {\n        var increaseStep = currentValue + this.step,\n          decreaseStep = currentValue - this.step,\n          increasePage = currentValue + this.valueRange / 10,\n          decreasePage = currentValue - this.valueRange / 10;\n\n        //Left to right default actions\n        var actions = {\n          'UP': increaseStep,\n          'DOWN': decreaseStep,\n          'LEFT': decreaseStep,\n          'RIGHT': increaseStep,\n          'PAGEUP': increasePage,\n          'PAGEDOWN': decreasePage,\n          'HOME': this.minValue,\n          'END': this.maxValue\n        };\n        //right to left means swapping right and left arrows\n        if (this.options.rightToLeft) {\n          actions.LEFT = increaseStep;\n          actions.RIGHT = decreaseStep;\n          // right to left and vertical means we also swap up and down\n          if (this.options.vertical) {\n            actions.UP = decreaseStep;\n            actions.DOWN = increaseStep;\n          }\n        }\n        return actions;\n      },\n\n      onKeyboardEvent: function(event) {\n        var currentValue = this[this.tracking],\n          keyCode = event.keyCode || event.which,\n          keys = {\n            38: 'UP',\n            40: 'DOWN',\n            37: 'LEFT',\n            39: 'RIGHT',\n            33: 'PAGEUP',\n            34: 'PAGEDOWN',\n            36: 'HOME',\n            35: 'END'\n          },\n          actions = this.getKeyActions(currentValue),\n          key = keys[keyCode],\n          action = actions[key];\n        if (action == null || this.tracking === '') return;\n        event.preventDefault();\n\n        if (this.firstKeyDown) {\n          this.firstKeyDown = false;\n          this.callOnStart();\n        }\n\n        var self = this;\n        $timeout(function() {\n          var newValue = self.roundStep(self.sanitizeValue(action));\n          if (!self.options.draggableRangeOnly) {\n            self.positionTrackingHandle(newValue);\n          }\n          else {\n            var difference = self.highValue - self.lowValue,\n              newMinValue, newMaxValue;\n            if (self.tracking === 'lowValue') {\n              newMinValue = newValue;\n              newMaxValue = newValue + difference;\n              if (newMaxValue > self.maxValue) {\n                newMaxValue = self.maxValue;\n                newMinValue = newMaxValue - difference;\n              }\n            } else {\n              newMaxValue = newValue;\n              newMinValue = newValue - difference;\n              if (newMinValue < self.minValue) {\n                newMinValue = self.minValue;\n                newMaxValue = newMinValue + difference;\n              }\n            }\n            self.positionTrackingBar(newMinValue, newMaxValue);\n          }\n        });\n      },\n\n      /**\n       * onDragStart event handler\n       *\n       * Handles dragging of the middle bar.\n       *\n       * @param {Object} pointer The jqLite wrapped DOM element\n       * @param {string} ref     One of the refLow, refHigh values\n       * @param {Event}  event   The event\n       * @returns {undefined}\n       */\n      onDragStart: function(pointer, ref, event) {\n        var position = this.getEventPosition(event);\n        this.dragging = {\n          active: true,\n          value: this.positionToValue(position),\n          difference: this.highValue - this.lowValue,\n          lowLimit: this.options.rightToLeft ? this.minH.rzsp - position : position - this.minH.rzsp,\n          highLimit: this.options.rightToLeft ? position - this.maxH.rzsp : this.maxH.rzsp - position\n        };\n\n        this.onStart(pointer, ref, event);\n      },\n\n      /**\n       * getValue helper function\n       *\n       * gets max or min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n       *\n       * @param {string} type 'max' || 'min' The value we are calculating\n       * @param {number} newPos  The new position\n       * @param {boolean} outOfBounds Is the new position above or below the max/min?\n       * @param {boolean} isAbove Is the new position above the bar if out of bounds?\n       *\n       * @returns {number}\n       */\n      getValue: function(type, newPos, outOfBounds, isAbove) {\n        var isRTL = this.options.rightToLeft,\n          value = null;\n\n        if (type === 'min') {\n          if (outOfBounds) {\n            if (isAbove) {\n              value = isRTL ? this.minValue : this.maxValue - this.dragging.difference;\n            } else {\n              value = isRTL ? this.maxValue - this.dragging.difference : this.minValue;\n            }\n          } else {\n            value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit)\n          }\n        } else {\n          if (outOfBounds) {\n            if (isAbove) {\n              value = isRTL ? this.minValue + this.dragging.difference : this.maxValue;\n            } else {\n              value = isRTL ? this.maxValue : this.minValue + this.dragging.difference;\n            }\n          } else {\n            if (isRTL) {\n              value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference\n            } else {\n              value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\n            }\n          }\n        }\n        return this.roundStep(value);\n      },\n\n      /**\n       * onDragMove event handler\n       *\n       * Handles dragging of the middle bar.\n       *\n       * @param {jqLite} pointer\n       * @param {Event}  event The event\n       * @returns {undefined}\n       */\n      onDragMove: function(pointer, event) {\n        var newPos = this.getEventPosition(event),\n          newMinValue, newMaxValue,\n          ceilLimit, flrLimit,\n          isUnderFlrLimit, isOverCeilLimit,\n          flrH, ceilH;\n\n        if (this.options.rightToLeft) {\n          ceilLimit = this.dragging.lowLimit;\n          flrLimit = this.dragging.highLimit;\n          flrH = this.maxH;\n          ceilH = this.minH;\n        } else {\n          ceilLimit = this.dragging.highLimit;\n          flrLimit = this.dragging.lowLimit;\n          flrH = this.minH;\n          ceilH = this.maxH;\n        }\n        isUnderFlrLimit = newPos <= flrLimit;\n        isOverCeilLimit = newPos >= this.maxPos - ceilLimit;\n\n        if (isUnderFlrLimit) {\n          if (flrH.rzsp === 0)\n            return;\n          newMinValue = this.getValue('min', newPos, true, false);\n          newMaxValue = this.getValue('max', newPos, true, false);\n        } else if (isOverCeilLimit) {\n          if (ceilH.rzsp === this.maxPos)\n            return;\n          newMaxValue = this.getValue('max', newPos, true, true);\n          newMinValue = this.getValue('min', newPos, true, true);\n        } else {\n          newMinValue = this.getValue('min', newPos, false);\n          newMaxValue = this.getValue('max', newPos, false);\n        }\n        this.positionTrackingBar(newMinValue, newMaxValue);\n      },\n\n      /**\n       * Set the new value and position for the entire bar\n       *\n       * @param {number} newMinValue   the new minimum value\n       * @param {number} newMaxValue   the new maximum value\n       */\n      positionTrackingBar: function(newMinValue, newMaxValue) {\n\n        if (this.options.minLimit != null && newMinValue < this.options.minLimit) {\n          newMinValue = this.options.minLimit;\n          newMaxValue = newMinValue + this.dragging.difference;\n        }\n        if (this.options.maxLimit != null && newMaxValue > this.options.maxLimit) {\n          newMaxValue = this.options.maxLimit;\n          newMinValue = newMaxValue - this.dragging.difference;\n        }\n\n        this.lowValue = newMinValue;\n        this.highValue = newMaxValue;\n        this.applyLowValue();\n        if (this.range)\n          this.applyHighValue();\n        this.applyModel(true);\n        this.updateHandles('lowValue', this.valueToPosition(newMinValue));\n        this.updateHandles('highValue', this.valueToPosition(newMaxValue));\n      },\n\n      /**\n       * Set the new value and position to the current tracking handle\n       *\n       * @param {number} newValue new model value\n       */\n      positionTrackingHandle: function(newValue) {\n        var valueChanged = false;\n        newValue = this.applyMinMaxLimit(newValue);\n        if (this.range) {\n          if (this.options.pushRange) {\n            newValue = this.applyPushRange(newValue);\n            valueChanged = true;\n          }\n          else {\n            if (this.options.noSwitching) {\n              if (this.tracking === 'lowValue' && newValue > this.highValue)\n                newValue = this.applyMinMaxRange(this.highValue);\n              else if (this.tracking === 'highValue' && newValue < this.lowValue)\n                newValue = this.applyMinMaxRange(this.lowValue);\n            }\n            newValue = this.applyMinMaxRange(newValue);\n            /* This is to check if we need to switch the min and max handles */\n            if (this.tracking === 'lowValue' && newValue > this.highValue) {\n              this.lowValue = this.highValue;\n              this.applyLowValue();\n              this.applyModel();\n              this.updateHandles(this.tracking, this.maxH.rzsp);\n              this.updateAriaAttributes();\n              this.tracking = 'highValue';\n              this.minH.removeClass('rz-active');\n              this.maxH.addClass('rz-active');\n              if (this.options.keyboardSupport)\n                this.focusElement(this.maxH);\n              valueChanged = true;\n            }\n            else if (this.tracking === 'highValue' && newValue < this.lowValue) {\n              this.highValue = this.lowValue;\n              this.applyHighValue();\n              this.applyModel();\n              this.updateHandles(this.tracking, this.minH.rzsp);\n              this.updateAriaAttributes();\n              this.tracking = 'lowValue';\n              this.maxH.removeClass('rz-active');\n              this.minH.addClass('rz-active');\n              if (this.options.keyboardSupport)\n                this.focusElement(this.minH);\n              valueChanged = true;\n            }\n          }\n        }\n\n        if (this[this.tracking] !== newValue) {\n          this[this.tracking] = newValue;\n          if (this.tracking === 'lowValue')\n            this.applyLowValue();\n          else\n            this.applyHighValue();\n          this.applyModel();\n          this.updateHandles(this.tracking, this.valueToPosition(newValue));\n          this.updateAriaAttributes();\n          valueChanged = true;\n        }\n\n        if (valueChanged)\n          this.applyModel(true);\n      },\n\n      applyMinMaxLimit: function(newValue) {\n        if (this.options.minLimit != null && newValue < this.options.minLimit)\n          return this.options.minLimit;\n        if (this.options.maxLimit != null && newValue > this.options.maxLimit)\n          return this.options.maxLimit;\n        return newValue;\n      },\n\n      applyMinMaxRange: function(newValue) {\n        var oppositeValue = this.tracking === 'lowValue' ? this.highValue : this.lowValue,\n          difference = Math.abs(newValue - oppositeValue);\n        if (this.options.minRange != null) {\n          if (difference < this.options.minRange) {\n            if (this.tracking === 'lowValue')\n              return this.highValue - this.options.minRange;\n            else\n              return this.lowValue + this.options.minRange;\n          }\n        }\n        if (this.options.maxRange != null) {\n          if (difference > this.options.maxRange) {\n            if (this.tracking === 'lowValue')\n              return this.highValue - this.options.maxRange;\n            else\n              return this.lowValue + this.options.maxRange;\n          }\n        }\n        return newValue;\n      },\n\n      applyPushRange: function(newValue) {\n        var difference = this.tracking === 'lowValue' ? this.highValue - newValue : newValue - this.lowValue,\n          minRange = this.options.minRange !== null ? this.options.minRange : this.options.step,\n          maxRange = this.options.maxRange;\n        // if smaller than minRange\n        if (difference < minRange) {\n          if (this.tracking === 'lowValue') {\n            this.highValue = Math.min(newValue + minRange, this.maxValue);\n            newValue = this.highValue - minRange;\n            this.applyHighValue();\n            this.updateHandles('highValue', this.valueToPosition(this.highValue));\n          }\n          else {\n            this.lowValue = Math.max(newValue - minRange, this.minValue);\n            newValue = this.lowValue + minRange;\n            this.applyLowValue();\n            this.updateHandles('lowValue', this.valueToPosition(this.lowValue));\n          }\n          this.updateAriaAttributes();\n        }\n        // if greater than maxRange\n        else if (maxRange !== null && difference > maxRange) {\n          if (this.tracking === 'lowValue') {\n            this.highValue = newValue + maxRange;\n            this.applyHighValue();\n            this.updateHandles('highValue', this.valueToPosition(this.highValue));\n          }\n          else {\n            this.lowValue = newValue - maxRange;\n            this.applyLowValue();\n            this.updateHandles('lowValue', this.valueToPosition(this.lowValue));\n          }\n          this.updateAriaAttributes();\n        }\n        return newValue;\n      },\n\n      /**\n       * Apply the model values using scope.$apply.\n       * We wrap it with the internalChange flag to avoid the watchers to be called\n       */\n      applyModel: function(callOnChange) {\n        this.internalChange = true;\n        this.scope.$apply();\n        callOnChange && this.callOnChange();\n        this.internalChange = false;\n      },\n\n      /**\n       * Call the onStart callback if defined\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\n       *\n       * @returns {undefined}\n       */\n      callOnStart: function() {\n        if (this.options.onStart) {\n          var self = this,\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\n          this.scope.$evalAsync(function() {\n            self.options.onStart(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\n          });\n        }\n      },\n\n      /**\n       * Call the onChange callback if defined\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\n       *\n       * @returns {undefined}\n       */\n      callOnChange: function() {\n        if (this.options.onChange) {\n          var self = this,\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\n          this.scope.$evalAsync(function() {\n            self.options.onChange(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\n          });\n        }\n      },\n\n      /**\n       * Call the onEnd callback if defined\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\n       *\n       * @returns {undefined}\n       */\n      callOnEnd: function() {\n        if (this.options.onEnd) {\n          var self = this,\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\n          this.scope.$evalAsync(function() {\n            self.options.onEnd(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\n          });\n        }\n        this.scope.$emit('slideEnded');\n      }\n    };\n\n    return Slider;\n  }])\n\n  .directive('rzslider', ['RzSlider', function(RzSlider) {\n    'use strict';\n\n    return {\n      restrict: 'AE',\n      replace: true,\n      scope: {\n        rzSliderModel: '=?',\n        rzSliderHigh: '=?',\n        rzSliderOptions: '&?',\n        rzSliderTplUrl: '@'\n      },\n\n      /**\n       * Return template URL\n       *\n       * @param {jqLite} elem\n       * @param {Object} attrs\n       * @return {string}\n       */\n      templateUrl: function(elem, attrs) {\n        //noinspection JSUnresolvedVariable\n        return attrs.rzSliderTplUrl || 'rzSliderTpl.html';\n      },\n\n      link: function(scope, elem) {\n        scope.slider = new RzSlider(scope, elem); //attach on scope so we can test it\n      }\n    };\n  }]);\n\n  // IDE assist\n\n  /**\n   * @name ngScope\n   *\n   * @property {number} rzSliderModel\n   * @property {number} rzSliderHigh\n   * @property {Object} rzSliderOptions\n   */\n\n  /**\n   * @name jqLite\n   *\n   * @property {number|undefined} rzsp rzslider label position position\n   * @property {number|undefined} rzsd rzslider element dimension\n   * @property {string|undefined} rzsv rzslider label value/text\n   * @property {Function} css\n   * @property {Function} text\n   */\n\n  /**\n   * @name Event\n   * @property {Array} touches\n   * @property {Event} originalEvent\n   */\n\n  /**\n   * @name ThrottleOptions\n   *\n   * @property {boolean} leading\n   * @property {boolean} trailing\n   */\n\n  module.run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('rzSliderTpl.html',\n    \"<div class=rzslider><span class=\\\"rz-bar-wrapper rz-left-out-selection\\\"><span class=rz-bar></span></span> <span class=\\\"rz-bar-wrapper rz-right-out-selection\\\"><span class=rz-bar></span></span> <span class=rz-bar-wrapper><span class=rz-bar></span></span> <span class=rz-bar-wrapper><span class=\\\"rz-bar rz-selection\\\" ng-style=barStyle></span></span> <span class=\\\"rz-pointer rz-pointer-min\\\" ng-style=minPointerStyle></span> <span class=\\\"rz-pointer rz-pointer-max\\\" ng-style=maxPointerStyle></span> <span class=\\\"rz-bubble rz-limit rz-floor\\\"></span> <span class=\\\"rz-bubble rz-limit rz-ceil\\\"></span> <span class=rz-bubble></span> <span class=rz-bubble></span> <span class=rz-bubble></span><ul ng-show=showTicks class=rz-ticks><li ng-repeat=\\\"t in ticks track by $index\\\" class=rz-tick ng-class=\\\"{'rz-selected': t.selected}\\\" ng-style=t.style ng-attr-uib-tooltip=\\\"{{ t.tooltip }}\\\" ng-attr-tooltip-placement={{t.tooltipPlacement}} ng-attr-tooltip-append-to-body=\\\"{{ t.tooltip ? true : undefined}}\\\"><span ng-if=\\\"t.value != null\\\" class=rz-tick-value ng-attr-uib-tooltip=\\\"{{ t.valueTooltip }}\\\" ng-attr-tooltip-placement={{t.valueTooltipPlacement}}>{{ t.value }}</span> <span ng-if=\\\"t.legend != null\\\" class=rz-tick-legend>{{ t.legend }}</span></li></ul></div>\"\n  );\n\n}]);\n\n  return module.name\n}));\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n/* ng-infinite-scroll - v1.3.0 - 2016-06-30 */\nangular.module('infinite-scroll', []).value('THROTTLE_MILLISECONDS', null).directive('infiniteScroll', [\n  '$rootScope', '$window', '$interval', 'THROTTLE_MILLISECONDS', function($rootScope, $window, $interval, THROTTLE_MILLISECONDS) {\n    return {\n      scope: {\n        infiniteScroll: '&',\n        infiniteScrollContainer: '=',\n        infiniteScrollDistance: '=',\n        infiniteScrollDisabled: '=',\n        infiniteScrollUseDocumentBottom: '=',\n        infiniteScrollListenForEvent: '@'\n      },\n      link: function(scope, elem, attrs) {\n        var changeContainer, checkInterval, checkWhenEnabled, container, handleInfiniteScrollContainer, handleInfiniteScrollDisabled, handleInfiniteScrollDistance, handleInfiniteScrollUseDocumentBottom, handler, height, immediateCheck, offsetTop, pageYOffset, scrollDistance, scrollEnabled, throttle, unregisterEventListener, useDocumentBottom, windowElement;\n        windowElement = angular.element($window);\n        scrollDistance = null;\n        scrollEnabled = null;\n        checkWhenEnabled = null;\n        container = null;\n        immediateCheck = true;\n        useDocumentBottom = false;\n        unregisterEventListener = null;\n        checkInterval = false;\n        height = function(elem) {\n          elem = elem[0] || elem;\n          if (isNaN(elem.offsetHeight)) {\n            return elem.document.documentElement.clientHeight;\n          } else {\n            return elem.offsetHeight;\n          }\n        };\n        offsetTop = function(elem) {\n          if (!elem[0].getBoundingClientRect || elem.css('none')) {\n            return;\n          }\n          return elem[0].getBoundingClientRect().top + pageYOffset(elem);\n        };\n        pageYOffset = function(elem) {\n          elem = elem[0] || elem;\n          if (isNaN(window.pageYOffset)) {\n            return elem.document.documentElement.scrollTop;\n          } else {\n            return elem.ownerDocument.defaultView.pageYOffset;\n          }\n        };\n        handler = function() {\n          var containerBottom, containerTopOffset, elementBottom, remaining, shouldScroll;\n          if (container === windowElement) {\n            containerBottom = height(container) + pageYOffset(container[0].document.documentElement);\n            elementBottom = offsetTop(elem) + height(elem);\n          } else {\n            containerBottom = height(container);\n            containerTopOffset = 0;\n            if (offsetTop(container) !== void 0) {\n              containerTopOffset = offsetTop(container);\n            }\n            elementBottom = offsetTop(elem) - containerTopOffset + height(elem);\n          }\n          if (useDocumentBottom) {\n            elementBottom = height((elem[0].ownerDocument || elem[0].document).documentElement);\n          }\n          remaining = elementBottom - containerBottom;\n          shouldScroll = remaining <= height(container) * scrollDistance + 1;\n          if (shouldScroll) {\n            checkWhenEnabled = true;\n            if (scrollEnabled) {\n              if (scope.$$phase || $rootScope.$$phase) {\n                return scope.infiniteScroll();\n              } else {\n                return scope.$apply(scope.infiniteScroll);\n              }\n            }\n          } else {\n            if (checkInterval) {\n              $interval.cancel(checkInterval);\n            }\n            return checkWhenEnabled = false;\n          }\n        };\n        throttle = function(func, wait) {\n          var later, previous, timeout;\n          timeout = null;\n          previous = 0;\n          later = function() {\n            previous = new Date().getTime();\n            $interval.cancel(timeout);\n            timeout = null;\n            return func.call();\n          };\n          return function() {\n            var now, remaining;\n            now = new Date().getTime();\n            remaining = wait - (now - previous);\n            if (remaining <= 0) {\n              $interval.cancel(timeout);\n              timeout = null;\n              previous = now;\n              return func.call();\n            } else {\n              if (!timeout) {\n                return timeout = $interval(later, remaining, 1);\n              }\n            }\n          };\n        };\n        if (THROTTLE_MILLISECONDS != null) {\n          handler = throttle(handler, THROTTLE_MILLISECONDS);\n        }\n        scope.$on('$destroy', function() {\n          container.unbind('scroll', handler);\n          if (unregisterEventListener != null) {\n            unregisterEventListener();\n            unregisterEventListener = null;\n          }\n          if (checkInterval) {\n            return $interval.cancel(checkInterval);\n          }\n        });\n        handleInfiniteScrollDistance = function(v) {\n          return scrollDistance = parseFloat(v) || 0;\n        };\n        scope.$watch('infiniteScrollDistance', handleInfiniteScrollDistance);\n        handleInfiniteScrollDistance(scope.infiniteScrollDistance);\n        handleInfiniteScrollDisabled = function(v) {\n          scrollEnabled = !v;\n          if (scrollEnabled && checkWhenEnabled) {\n            checkWhenEnabled = false;\n            return handler();\n          }\n        };\n        scope.$watch('infiniteScrollDisabled', handleInfiniteScrollDisabled);\n        handleInfiniteScrollDisabled(scope.infiniteScrollDisabled);\n        handleInfiniteScrollUseDocumentBottom = function(v) {\n          return useDocumentBottom = v;\n        };\n        scope.$watch('infiniteScrollUseDocumentBottom', handleInfiniteScrollUseDocumentBottom);\n        handleInfiniteScrollUseDocumentBottom(scope.infiniteScrollUseDocumentBottom);\n        changeContainer = function(newContainer) {\n          if (container != null) {\n            container.unbind('scroll', handler);\n          }\n          container = newContainer;\n          if (newContainer != null) {\n            return container.bind('scroll', handler);\n          }\n        };\n        changeContainer(windowElement);\n        if (scope.infiniteScrollListenForEvent) {\n          unregisterEventListener = $rootScope.$on(scope.infiniteScrollListenForEvent, handler);\n        }\n        handleInfiniteScrollContainer = function(newContainer) {\n          if ((newContainer == null) || newContainer.length === 0) {\n            return;\n          }\n          if (newContainer.nodeType && newContainer.nodeType === 1) {\n            newContainer = angular.element(newContainer);\n          } else if (typeof newContainer.append === 'function') {\n            newContainer = angular.element(newContainer[newContainer.length - 1]);\n          } else if (typeof newContainer === 'string') {\n            newContainer = angular.element(document.querySelector(newContainer));\n          }\n          if (newContainer != null) {\n            return changeContainer(newContainer);\n          } else {\n            throw new Error(\"invalid infinite-scroll-container attribute.\");\n          }\n        };\n        scope.$watch('infiniteScrollContainer', handleInfiniteScrollContainer);\n        handleInfiniteScrollContainer(scope.infiniteScrollContainer || []);\n        if (attrs.infiniteScrollParent != null) {\n          changeContainer(angular.element(elem.parent()));\n        }\n        if (attrs.infiniteScrollImmediateCheck != null) {\n          immediateCheck = scope.$eval(attrs.infiniteScrollImmediateCheck);\n        }\n        return checkInterval = $interval((function() {\n          if (immediateCheck) {\n            handler();\n          }\n          return $interval.cancel(checkInterval);\n        }));\n      }\n    };\n  }\n]);\n\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n  module.exports = 'infinite-scroll';\n}\n\n\n/***/ }),\n/* 58 */,\n/* 59 */\n/***/ (function(module, exports) {\n\nvar charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n\n\n/***/ }),\n/* 60 */,\n/* 61 */,\n/* 62 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 63 */,\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(65), __esModule: true };\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(66);\nvar $Object = __webpack_require__(2).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(5);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(9), 'Object', { defineProperty: __webpack_require__(6).f });\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(9) && !__webpack_require__(17)(function () {\n  return Object.defineProperty(__webpack_require__(39)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(11);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * State-based routing for AngularJS 1.x\n * This bundle requires the ui-router-core.js bundle from the @uirouter/core package.\n * @version v1.0.6\n * @link https://ui-router.github.io\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function (global, factory) {\n     true ? factory(exports, __webpack_require__(20), __webpack_require__(70)) :\n    typeof define === 'function' && define.amd ? define(['exports', 'angular', '@uirouter/core'], factory) :\n    (factory((global['@uirouter/angularjs'] = global['@uirouter/angularjs'] || {}),global.angular,global['@uirouter/core']));\n}(this, (function (exports,ng_from_import,_uirouter_core) { 'use strict';\n\nvar ng_from_global = angular;\nvar ng = (ng_from_import && ng_from_import.module) ? ng_from_import : ng_from_global;\n\nfunction getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || _uirouter_core.services.$injector.get(\"$templateFactory\");\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\nvar hasAnyKey = function (keys, obj) {\n    return keys.reduce(function (acc, key) { return acc || _uirouter_core.isDefined(obj[key]); }, false);\n};\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n */\nfunction ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (_uirouter_core.isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return _uirouter_core.isDefined(state[key]); }).join(\", \")));\n    }\n    var views = {}, viewsObject = state.views || { \"$default\": _uirouter_core.pick(state, allViewKeys) };\n    _uirouter_core.forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || \"$default\";\n        // Account for views: { header: \"headerComponent\" }\n        if (_uirouter_core.isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = _uirouter_core.extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join(\"|\") + \" with: \" + nonCompKeys.join(\"|\") + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = \"ng1\";\n        config.$context = state;\n        config.$name = name;\n        var normalized = _uirouter_core.ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\nvar id = 0;\nvar Ng1ViewConfig = (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings) : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = _uirouter_core.services.$q;\n        var context = new _uirouter_core.ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return _uirouter_core.extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context))\n        };\n        return $q.all(promises).then(function (results) {\n            _uirouter_core.trace.traceViewServiceEvent(\"Loaded\", _this);\n            _this.controller = results.controller;\n            _uirouter_core.extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!_uirouter_core.isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = _uirouter_core.services.$injector.annotate(provider);\n        var providerFn = _uirouter_core.isArray(provider) ? _uirouter_core.tail(provider) : provider;\n        var resolvable = new _uirouter_core.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\n\n/** @module view */\n/** for typedoc */\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = ng.version.minor < 3;\n        /** @hidden */ this.$get = ['$http', '$templateCache', '$injector', function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            }];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    \n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = \"<ui-view></ui-view>\";\n        var asTemplate = function (result) { return _uirouter_core.services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return _uirouter_core.services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return (_uirouter_core.isDefined(config.template) ? asTemplate(this.fromString(config.template, params)) :\n            _uirouter_core.isDefined(config.templateUrl) ? asTemplate(this.fromUrl(config.templateUrl, params)) :\n                _uirouter_core.isDefined(config.templateProvider) ? asTemplate(this.fromProvider(config.templateProvider, params, context)) :\n                    _uirouter_core.isDefined(config.component) ? asComponent(config.component) :\n                        _uirouter_core.isDefined(config.componentProvider) ? asComponent(this.fromComponentProvider(config.componentProvider, params, context)) :\n                            asTemplate(defaultTemplate));\n    };\n    \n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return _uirouter_core.isFunction(template) ? template(params) : template;\n    };\n    \n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (_uirouter_core.isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http.get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    \n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = _uirouter_core.services.$injector.annotate(provider);\n        var providerFn = _uirouter_core.isArray(provider) ? _uirouter_core.tail(provider) : provider;\n        var resolvable = new _uirouter_core.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    \n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = _uirouter_core.services.$injector.annotate(provider);\n        var providerFn = _uirouter_core.isArray(provider) ? _uirouter_core.tail(provider) : provider;\n        var resolvable = new _uirouter_core.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    \n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = ng.version.minor >= 3 ? \"::\" : \"\";\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = _uirouter_core.kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = fn && _uirouter_core.services.$injector.annotate(fn) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = _uirouter_core.isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(\",\") + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component).map(attributeTpl).join(\" \");\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    \n    return TemplateFactory;\n}());\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = _uirouter_core.services.$injector.get(name + \"Directive\"); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(_uirouter_core.unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (_uirouter_core.isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) { return Object.keys(bindingsObj || {})\n    .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n    .filter(function (tuple) { return _uirouter_core.isDefined(tuple) && _uirouter_core.isArray(tuple[1]); })\n    .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); }); };\n\n/** @module ng1 */ /** for typedoc */\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        _uirouter_core.createProxyFunctions(_uirouter_core.val(StateProvider.prototype), this, _uirouter_core.val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (_uirouter_core.isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\n\n/** @module ng1 */ /** */\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n */\nvar getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(state, parentFn) {\n        var hook = state[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new _uirouter_core.ResolveContext(trans.treeChanges(pathname));\n            var locals = _uirouter_core.extend(getLocals(resolveContext), { $state$: state, $transition$: trans });\n            return _uirouter_core.services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n */\nvar Ng1LocationServices = (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = _uirouter_core.val($locationProvider);\n        _uirouter_core.createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return _uirouter_core.removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = _uirouter_core.isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (newUrl)\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on(\"$locationChangeSuccess\", function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = _uirouter_core.val($location);\n        var _browser = _uirouter_core.val($browser);\n        // Bind these LocationService functions to $location\n        _uirouter_core.createProxyFunctions(_loc, this, _loc, [\"replace\", \"path\", \"search\", \"hash\"]);\n        // Bind these LocationConfig functions to $location\n        _uirouter_core.createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n        // Bind these LocationConfig functions to $browser\n        _uirouter_core.createProxyFunctions(_browser, this, _browser, ['baseHref']);\n    };\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (val$$1) {\n            return val$$1 != null ? val$$1.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val$$1;\n        };\n        pathType.decode = function (val$$1) {\n            return val$$1 != null ? val$$1.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val$$1;\n        };\n    };\n    return Ng1LocationServices;\n}());\n\n/** @module url */ /** */\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @deprecated\n */\nvar UrlRouterProvider = (function () {\n    /** @hidden */\n    function UrlRouterProvider(router) {\n        this._router = router;\n        this._urlRouter = router.urlRouter;\n    }\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlRouter = this._urlRouter;\n        urlRouter.update(true);\n        if (!urlRouter.interceptDeferred)\n            urlRouter.listen();\n        return urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!_uirouter_core.isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () {\n            return ruleFn(_uirouter_core.services.$injector, _this._router.locationService);\n        };\n        var rule = new _uirouter_core.BaseUrlRule(match, _uirouter_core.identity);\n        this._urlRouter.rule(rule);\n        return this;\n    };\n    \n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRouter = this._urlRouter;\n        if (_uirouter_core.isString(rule)) {\n            urlRouter.otherwise(rule);\n        }\n        else if (_uirouter_core.isFunction(rule)) {\n            urlRouter.otherwise(function () { return rule(_uirouter_core.services.$injector, _this._router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    \n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (_uirouter_core.isArray(handler) || _uirouter_core.isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this._router, handler);\n        }\n        this._urlRouter.when(what, handler);\n        return this;\n    };\n    \n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) {\n            return _uirouter_core.services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params });\n        };\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this._urlRouter.deferIntercept(defer);\n    };\n    \n    return UrlRouterProvider;\n}());\n\n/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @module ng1\n * @preferred\n */\n/** for typedoc */\nng.module(\"ui.router.angular1\", []);\nvar mod_init = ng.module('ui.router.init', []);\nvar mod_util = ng.module('ui.router.util', ['ng', 'ui.router.init']);\nvar mod_rtr = ng.module('ui.router.router', ['ui.router.util']);\nvar mod_state = ng.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = ng.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = ng.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouter.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouter($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new _uirouter_core.UIRouter();\n    router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator(\"views\", ng1ViewsBuilder);\n    router.stateRegistry.decorator(\"onExit\", getStateHookBuilder(\"onExit\"));\n    router.stateRegistry.decorator(\"onRetain\", getStateHookBuilder(\"onRetain\"));\n    router.stateRegistry.decorator(\"onEnter\", getStateHookBuilder(\"onEnter\"));\n    router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n    var ng1LocationService = router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider);\n    Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return ['$uiRouterProvider', function ($urp) {\n        var service = $urp.router[serviceName];\n        service[\"$get\"] = function () { return service; };\n        return service;\n    }]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    _uirouter_core.services.$injector = $injector;\n    _uirouter_core.services.$q = $q;\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry.get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(_uirouter_core.unnestR, [])\n        .filter(function (x) { return x.deps === \"deferred\"; })\n        .forEach(function (resolvable) { return resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) {\n    return uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter);\n};\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () {\n    return _uirouter_core.extend(router.stateProvider, { $get: function () { return router.stateService; } });\n};\nwatchDigests.$inject = ['$rootScope'];\nfunction watchDigests($rootScope) {\n    $rootScope.$watch(function () { _uirouter_core.trace.approximateDigests++; });\n}\nmod_init.provider(\"$uiRouter\", $uiRouter);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service(\"$trace\", function () { return _uirouter_core.trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nvar getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(_uirouter_core.isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(_uirouter_core.applyPairs, {});\n};\n\n/**\n * # Angular 1 injectable services\n *\n * This is a list of the objects which can be injected using angular's injector.\n *\n * There are three different kind of injectable objects:\n *\n * ## **Provider** objects\n * #### injectable into a `.config()` block during configtime\n *\n * - [[$uiRouterProvider]]: The UI-Router instance\n * - [[$stateProvider]]: State registration\n * - [[$transitionsProvider]]: Transition hooks\n * - [[$urlServiceProvider]]: All URL related public APIs\n *\n * - [[$uiViewScrollProvider]]: Disable ui-router view scrolling\n * - [[$urlRouterProvider]]: (deprecated) Url matching rules\n * - [[$urlMatcherFactoryProvider]]: (deprecated) Url parsing config\n *\n * ## **Service** objects\n * #### injectable globally during runtime\n *\n * - [[$uiRouter]]: The UI-Router instance\n * - [[$trace]]: Enable transition trace/debug\n * - [[$transitions]]: Transition hooks\n * - [[$state]]: Imperative state related APIs\n * - [[$stateRegistry]]: State registration\n * - [[$urlService]]: All URL related public APIs\n * - [[$uiRouterGlobals]]: Global variables\n * - [[$uiViewScroll]]: Scroll an element into view\n *\n * - [[$stateParams]]: (deprecated) Global state param values\n * - [[$urlRouter]]: (deprecated) URL synchronization\n * - [[$urlMatcherFactory]]: (deprecated) URL parsing config\n *\n * ## **Per-Transition** objects\n *\n * - These kind of objects are injectable into:\n *   - Resolves ([[Ng1StateDeclaration.resolve]]),\n *   - Transition Hooks ([[TransitionService.onStart]], etc),\n *   - Routed Controllers ([[Ng1ViewDeclaration.controller]])\n *\n * #### Different instances are injected based on the [[Transition]]\n *\n * - [[$transition$]]: The current Transition object\n * - [[$stateParams]]: State param values for pending Transition (deprecated)\n * - Any resolve data defined using [[Ng1StateDeclaration.resolve]]\n *\n * @ng1api\n * @preferred\n * @module injectables\n */ /** */\n/**\n * The current (or pending) State Parameters\n *\n * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n *\n * The values are not updated until *after* a `Transition` successfully completes.\n *\n * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n *\n * ### Deprecation warning:\n *\n * The value injected for `$stateParams` is different depending on where it is injected.\n *\n * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * ### Instead of using the global `$stateParams` service object,\n * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n *\n * ```js\n * MyService.$inject = ['$uiRouterGlobals'];\n * function MyService($uiRouterGlobals) {\n *   return {\n *     paramValues: function () {\n *       return $uiRouterGlobals.params;\n *     }\n *   }\n * }\n * ```\n *\n * ### Instead of using the per-transition `$stateParams` object,\n * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n *\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n *\n * ---\n *\n * This object can be injected into other services.\n *\n * #### Deprecated Example:\n * ```js\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n * @deprecated\n */\n\n/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @ng1api\n * @preferred\n * @module directives\n */ /** for typedoc */\n/** @hidden */\nfunction parseStateRef(ref) {\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, \" \").match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = _uirouter_core.parse('$cfg.path')($uiView);\n    return path ? _uirouter_core.tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = _uirouter_core.extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === \"FORM\";\n    return {\n        attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n        isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n        clickable: !isForm\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition = $timeout(function () {\n                $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount-- <= 0)\n                    $timeout.cancel(transition);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: \"sref\"\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!_uirouter_core.isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSref;\nuiSref = ['$uiRouter', '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val$$1) {\n                        rawDef.uiStateParams = _uirouter_core.extend({}, val$$1);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = _uirouter_core.extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiState;\nuiState = ['$uiRouter', '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return (acc[attr] = _uirouter_core.noop, acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the <div> and <a> elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActive;\nuiSrefActive = ['$state', '$stateParams', '$interpolate', '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: \"A\",\n            controller: ['$scope', '$element', '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [], activeEqClass, uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    if (_uirouter_core.isObject(uiSrefActive)) {\n                        _uirouter_core.forEach(uiSrefActive, function (stateOrName, activeClass) {\n                            if (_uirouter_core.isString(stateOrName)) {\n                                var ref = parseStateRef(stateOrName);\n                                addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                            }\n                        });\n                    }\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (_uirouter_core.isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, _uirouter_core.noop);\n                    }\n                    $scope.$on('$stateChangeSuccess', update);\n                    $scope.$on('$destroy', $uiRouter.transitionService.onStart({}, updateAfterTransition));\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            _uirouter_core.removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) {\n                            return str.split(/\\s/).filter(_uirouter_core.identity);\n                        };\n                        var getClasses = function (stateList) {\n                            return stateList.map(function (x) { return x.activeClass; }).map(splitClasses).reduce(_uirouter_core.unnestR, []);\n                        };\n                        var allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(_uirouter_core.uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(_uirouter_core.uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !_uirouter_core.inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                }]\n        };\n    }];\nng.module('ui.router.state')\n    .directive('uiSref', uiSref)\n    .directive('uiSrefActive', uiSrefActive)\n    .directive('uiSrefActiveEq', uiSrefActive)\n    .directive('uiState', uiState);\n\n/** @module ng1 */ /** for typedoc */\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nng.module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\n\n/**\n * @ng1api\n * @module directives\n */ /** for typedoc */\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * ### Attributes\n *\n * - `name`: (Optional) A view name.\n *   The name should be unique amongst the other views in the same state.\n *   You can have views of the same name that live in different states.\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n *\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n *   Uses [[$uiViewScroll]] to do the scrolling.\n *\n * - `onload`: Expression to evaluate whenever the view updates.\n *\n * #### Example:\n * A view can be unnamed or named.\n * ```html\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n *\n * <!-- Named (different style) -->\n * <ui-view name=\"viewName\"></ui-view>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n *\n * ```html\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n *\n * ```html\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * #### Examples for `autoscroll`:\n * ```html\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * #### Example:\n * ```js\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nvar uiView;\nuiView = ['$view', '$animate', '$uiViewScroll', '$interpolate', '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (ng.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (ng.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                }\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {}\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var previousEl, currentEl, currentScope, unregister, onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), viewConfig = undefined, inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + \".\" + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            var fromParentTagConfig = _uirouter_core.parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = _uirouter_core.parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        }\n                    };\n                    _uirouter_core.trace.traceUIViewEvent(\"Linking\", activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        _uirouter_core.trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on(\"$destroy\", function () {\n                        _uirouter_core.trace.traceUIViewEvent(\"Destroying/Unregistering\", activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            _uirouter_core.trace.traceUIViewEvent(\"Removing (previous) el\", previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            _uirouter_core.trace.traceUIViewEvent(\"Destroying scope\", activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            _uirouter_core.trace.traceUIViewEvent(\"Animate out\", _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if (_uirouter_core.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            }\n        };\n        return directive;\n    }];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = _uirouter_core.parse('viewDecl.controllerAs');\n    var getResolveAs = _uirouter_core.parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: ng_from_import.noop };\n                var resolveCtx = cfg.path && new _uirouter_core.ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                _uirouter_core.trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = $controller(controller, _uirouter_core.extend({}, locals, { $scope: scope, $element: $element }));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (_uirouter_core.isString(cfg.viewDecl.component)) {\n                    var cmp_1 = cfg.viewDecl.component;\n                    var kebobName = _uirouter_core.kebobString(cmp_1);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", \"i\");\n                    var getComponentController = function () {\n                        var directiveEl = [].slice.call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && ng.element(directiveEl).data(\"$\" + cmp_1 + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        }\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof ng.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (_uirouter_core.isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = _uirouter_core.tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onParamsChange\n    if (_uirouter_core.isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new _uirouter_core.ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params(\"to\");\n            var fromParams = $transition$.params(\"from\");\n            var toSchema = $transition$.treeChanges().to.map(function (node) { return node.paramSchema; }).reduce(_uirouter_core.unnestR, []);\n            var fromSchema = $transition$.treeChanges().from.map(function (node) { return node.paramSchema; }).reduce(_uirouter_core.unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = _uirouter_core.filter(toParams, function (val$$1, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (_uirouter_core.isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && (trans[cacheProp_1] && trans[cacheProp_1][id_1] === true || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise, ids = trans[cacheProp_1] = trans[cacheProp_1] || {};\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val$$1) { return ids[id_1] = (val$$1 !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nng.module('ui.router.state').directive('uiView', uiView);\nng.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\n/** @module ng1 */ /** */\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        }];\n}\nng.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * Main entry point for angular 1.x build\n * @module ng1\n */ /** */\nvar index = \"ui.router\";\n\nexports['default'] = index;\nexports.core = _uirouter_core;\nexports.watchDigests = watchDigests;\nexports.getLocals = getLocals;\nexports.getNg1ViewConfigFactory = getNg1ViewConfigFactory;\nexports.ng1ViewsBuilder = ng1ViewsBuilder;\nexports.Ng1ViewConfig = Ng1ViewConfig;\nexports.StateProvider = StateProvider;\nexports.UrlRouterProvider = UrlRouterProvider;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ui-router-angularjs.js.map\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * UI-Router Core: Framework agnostic, State-based routing for JavaScript Single Page Apps\n * @version v5.0.6\n * @link https://ui-router.github.io\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global['@uirouter/core'] = global['@uirouter/core'] || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nfunction curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nfunction compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nfunction pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nvar prop = function (name) {\n    return function (obj) { return obj && obj[name]; };\n};\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nvar propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nvar parse = function (name) {\n    return pipe.apply(null, name.split(\".\").map(prop));\n};\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nvar not = function (fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    };\n};\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nfunction and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nfunction or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nvar all = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n};\nvar any = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n};\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nvar is = function (ctor) {\n    return function (obj) {\n        return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n    };\n};\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nvar eq = function (val) { return function (other) {\n    return val === other;\n}; };\n/** Given a value, returns a function which returns the value */\nvar val = function (v) { return function () { return v; }; };\nfunction invoke(fnName, args) {\n    return function (obj) {\n        return obj[fnName].apply(obj, args);\n    };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nfunction pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n\n/**\n * @coreapi\n * @module core\n */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text.split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        }).join('');\n        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n    }\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    return Glob;\n}());\n\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name) // might return null\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + \".\" + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return this.parent && this.parent.root() || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n        return inherited.concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (this.url && this.url.parameter(id, opts) ||\n            find(values(this.params), propEq('id', id)) ||\n            opts.inherit && this.parent && this.parent.parameter(id));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) {\n        return isObject(obj['__stateObjectCache']);\n    };\n    return StateObject;\n}());\n\n/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */\n/** */\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\nvar isUndefined = tis('undefined');\nvar isDefined = not(isUndefined);\nvar isNull = function (o) { return o === null; };\nvar isNullOrUndefined = or(isNull, isUndefined);\nvar isFunction = tis('function');\nvar isNumber = tis('number');\nvar isString = tis('string');\nvar isObject = function (x) { return x !== null && typeof x === 'object'; };\nvar isArray = Array.isArray;\nvar isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nvar isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\nvar isState = StateObject.isState;\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nfunction isInjectable(val$$1) {\n    if (isArray(val$$1) && val$$1.length) {\n        var head = val$$1.slice(0, -1), tail = val$$1.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val$$1);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nvar isPromise = and(isObject, pipe(prop('then'), isFunction));\n\nvar notImplemented = function (fnname) { return function () {\n    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded.\");\n}; };\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\n\n/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred\n * @module common\n */\n/** for typedoc */\nvar w = typeof window === 'undefined' ? {} : window;\nvar angular = w.angular || {};\nvar fromJson = angular.fromJson || JSON.parse.bind(JSON);\nvar toJson = angular.toJson || JSON.stringify.bind(JSON);\nvar copy = angular.copy || _copy;\nvar forEach = angular.forEach || _forEach;\nvar extend = Object.assign || _extend;\nvar equals = angular.equals || _equals;\nfunction identity(x) { return x; }\nfunction noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nfunction createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) {\n        return source()[fnName].bind(bind());\n    };\n    var makeLateRebindFn = function (fnName) { return function lateRebindFunction() {\n        target[fnName] = bindFunction(fnName);\n        return target[fnName].apply(null, arguments);\n    }; };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nvar inherit = function (parent, extra) {\n    return extend(Object.create(parent), extra);\n};\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nvar inArray = curry(_inArray);\nfunction _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nvar removeFrom = curry(_removeFrom);\nfunction _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nvar pushTo = curry(_pushTo);\nfunction _pushTo(arr, val$$1) {\n    return (arr.push(val$$1), val$$1);\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nvar deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nfunction defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var _defaultsList = defaultsList.concat({}).reverse();\n    var defaultVals = extend.apply(null, _defaultsList);\n    return extend({}, defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nvar mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n    var path = [];\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nfunction pick(obj, propNames) {\n    var objCopy = {};\n    for (var prop_1 in obj) {\n        if (propNames.indexOf(prop_1) !== -1) {\n            objCopy[prop_1] = obj[prop_1];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nfunction omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return (acc[key] = obj[key], acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nfunction pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nfunction filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nfunction find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nvar mapObj = map;\n/** Maps an array or object properties using a callback function */\nfunction map(collection, callback) {\n    var result = isArray(collection) ? [] : {};\n    forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n    return result;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nvar values = function (obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n};\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nvar allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nvar anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nvar unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nvar flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nfunction pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nvar uniqR = function (acc, token) {\n    return inArray(acc, token) ? acc : pushR(acc, token);\n};\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nvar unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nvar flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nvar assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nvar assertMap = assertFn;\nfunction assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nvar pairs = function (obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n};\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nfunction arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var i, result = [];\n    for (i = 0; i < maxArrayLen; i++) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nfunction applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error(\"invalid parameters to applyPairs\");\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nfunction tail(arr) {\n    return arr.length && arr[arr.length - 1] || undefined;\n}\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nfunction _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var key, keys = {};\n    for (key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nvar silenceUncaughtInPromise = function (promise) {\n    return promise.catch(function (e) { return 0; }) && promise;\n};\nvar silentRejection = function (error) {\n    return silenceUncaughtInPromise(services.$q.reject(error));\n};\n\n/**\n * @module common\n */ /** for typedoc */\nvar Queue = (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            items.shift();\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n\n(function (RejectType) {\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(exports.RejectType || (exports.RejectType = {}));\n/** @hidden */ var id = 0;\nvar Rejection = (function () {\n    function Rejection(type, message, detail) {\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) {\n            return d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d);\n        };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && (typeof obj.then === 'function') && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = \"The transition has been superseded by a different transition\";\n        var rejection = new Rejection(exports.RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = \"This transition is invalid\";\n        return new Rejection(exports.RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = \"The transition was ignored\";\n        return new Rejection(exports.RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = \"The transition has been aborted\";\n        return new Rejection(exports.RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = \"The transition errored\";\n        return new Rejection(exports.RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    return Rejection;\n}());\n\n/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @coreapi\n * @module trace\n */ /** for typedoc */\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? exports.Category[input] : exports.Category[exports.Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\n\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(exports.Category || (exports.Category = {}));\n/** @hidden */ var _tid = parse(\"$id\");\n/** @hidden */ var _rid = parse(\"router.$id\");\n/** @hidden */ var transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(exports.Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return exports.Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(exports.Category.HOOK))\n            return;\n        var event = parse(\"traceData.hookType\")(options) || \"internal\", context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\", name = functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(exports.Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(exports.Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(exports.Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = \"\"; }\n        if (!this.enabled(exports.Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(exports.Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(exports.Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(exports.Category.VIEWCONFIG))\n            return;\n        var mapping = pairs.map(function (_a) {\n            var uiViewData = _a[0], config = _a[1];\n            var uiView = uiViewData.$type + \":\" + uiViewData.fqn;\n            var view = config && config.viewDecl.$context.name + \": \" + config.viewDecl.$name + \" (\" + config.viewDecl.$type + \")\";\n            return { 'ui-view fqn': uiView, 'state: view name': view };\n        }).sort(function (a, b) { return a['ui-view fqn'].localeCompare(b['ui-view fqn']); });\n        console.table(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(exports.Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(exports.Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\n\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(exports.TransitionHookPhase || (exports.TransitionHookPhase = {}));\n\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(exports.TransitionHookScope || (exports.TransitionHookScope = {}));\n\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _definition The internal state representation, if exists.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_identifier, _definition, _params, _options) {\n        if (_options === void 0) { _options = {}; }\n        this._identifier = _identifier;\n        this._definition = _definition;\n        this._options = _options;\n        this._params = _params || {};\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return this._definition && this._definition.name || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + toJson(this.params());\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) {\n        return obj && obj.state && (isString(obj.state) || isString(obj.state.name));\n    };\n    return TargetState;\n}());\n\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () {\n            return _this.type.hookPhase === exports.TransitionHookPhase.RUN && !_this.options.transition.isActive();\n        };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () {\n            return hook.callback.call(options.bind, _this.transition, _this.stateContext);\n        };\n        var normalizeErr = function (err) {\n            return Rejection.normalize(err).toPromise();\n        };\n        var handleError = function (err) {\n            return hook.eventType.getErrorHandler(_this)(err);\n        };\n        var handleResult = function (result) {\n            return hook.eventType.getResultHandler(_this)(result);\n        };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr)\n                    .then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val$$1) { return _this.handleHookResult(val$$1); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted(\"Hook aborted transition\").toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse(\"traceData.hookType\")(options) || \"internal\", context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\", name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) {\n            return prev.then(function () { return nextHook.invokeHook(); });\n        };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult)\n                    .then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) {\n            return hook.logError(Rejection.normalize(err));\n        });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) {\n        return hook.logError(error);\n    }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) {\n        return silentRejection(error);\n    }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nfunction matchState(state, criterion) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this._deregistered = false;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return map(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === exports.TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name]);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges) {\n        var matches = this._getMatchingNodes(treeChanges);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    return RegisteredHook;\n}());\n/** @hidden Return a registration function of the requested type. */\nfunction makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = registry._registeredHooks = (registry._registeredHooks || {});\n    var hooks = _registeredHooks[eventType.name] = [];\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, options);\n        hooks.push(registeredHook);\n        return function deregisterEventHook() {\n            registeredHook._deregistered = true;\n            removeFrom(hooks)(registeredHook);\n        };\n    }\n    return hookRegistrationFn;\n}\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node }\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === exports.TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks.map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges) {\n        var isCreate = hookType.hookPhase === exports.TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries.map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n\n/**\n * @coreapi\n * @module params\n */\n/** */\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) { return true; };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) { return a == b; };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === \"auto\" && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : (isDefined(val) ? [val] : []);\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0: return undefined;\n            case 1: return mode === \"auto\" ? val[0] : val;\n            default: return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return (allTruthyMode === true) ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode\n    });\n}\n\n/**\n * @coreapi\n * @module params\n */ /** for typedoc */\n/** @hidden */ var hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */ var isShorthand = function (cfg) {\n    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\n\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(exports.DefType || (exports.DefType = {}));\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    return extend(cfg, {\n        $$fn: isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue,\n    });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === exports.DefType.CONFIG ? \"any\" :\n            location === exports.DefType.PATH ? \"path\" :\n                location === exports.DefType.SEARCH ? \"query\" : \"string\";\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var replace, configuredKeys, defaultPolicy = [\n        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") },\n    ];\n    replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    configuredKeys = map(replace, prop(\"from\"));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = (function () {\n    function Param(id, type, config, location, urlMatcherFactory) {\n        config = unwrapShorthand(config);\n        type = getType(config, type, location, id, urlMatcherFactory.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === exports.DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === exports.DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlMatcherFactory.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit$$1 = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: (location === exports.DefType.SEARCH ? \"auto\" : false) };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit$$1, array: arrayMode, config: config });\n    }\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error(\"Injectable functions cannot be called at configuration time\");\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val$$1) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val$$1)\n                    return tuple.to;\n            }\n            return val$$1;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === exports.DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    Param.values = function (params, values$$1) {\n        if (values$$1 === void 0) { values$$1 = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values$$1[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values$$1) {\n        if (values$$1 === void 0) { values$$1 = {}; }\n        return params.map(function (param) { return param.validates(values$$1[param.id]); }).reduce(allTrueR, true);\n    };\n    return Param;\n}());\n\n/** @module path */ /** for typedoc */\n/**\n * @internalapi\n *\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq(\"id\", name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /** Returns a clone of the PathNode */\n    PathNode.clone = function (node) {\n        return new PathNode(node);\n    };\n    return PathNode;\n}());\n\n/** @module path */ /** for typedoc */\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (path) {\n        var state = tail(path).state;\n        return new TargetState(state, state, path.map(prop(\"paramValues\")).reduce(mergeR, {}));\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath.map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n        var nodesMatch = function (node1, node2) {\n            return node1.equals(node2, PathUtils.nonDynamicParams);\n        };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = PathNode.clone(retainedNode);\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = (retainedWithToParams).concat(entering);\n        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length &&\n            PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false })\n            .filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) {\n        return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {});\n    };\n    return PathUtils;\n}());\n\n/**\n * @coreapi\n * @module resolve\n */ /** for typedoc */\n// TODO: explicitly make this user configurable\nvar defaultResolvePolicy = {\n    when: \"LAZY\",\n    async: \"WAIT\"\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error(\"new Resolvable(): token argument is required\");\n            if (!isFunction(resolveFn))\n                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && isFunction(arg1.resolveFn)) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = state && state.resolvePolicy || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) {\n                return resolvable.get(resolveContext, trans);\n            }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) {\n            return _this.resolveFn.apply(null, resolvedDeps);\n        };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached.take(1).toPromise().then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return this.promise = $q.when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue);\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) {\n        return new Resolvable(token, function () { return data; }, null, null, data);\n    };\n    return Resolvable;\n}());\n\n/** @internalapi */\nvar resolvePolicies = {\n    when: {\n        LAZY: \"LAZY\",\n        EAGER: \"EAGER\"\n    },\n    async: {\n        WAIT: \"WAIT\",\n        NOWAIT: \"NOWAIT\",\n        RXWAIT: \"RXWAIT\"\n    }\n};\n\n/** @module resolve */\n/** for typedoc */\nvar when = resolvePolicies.when;\nvar ALL_WHENS = [when.EAGER, when.LAZY];\nvar EAGER_WHENS = [when.EAGER];\nvar NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path.map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = \"LAZY\"; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : \"LAZY\";\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) {\n            return function (resolvable) {\n                return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n            };\n        };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) { return r.get(subContext, trans)\n                .then(function (value) { return ({ token: r.token, value: value }); }); };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (!fromInjector) {\n                throw new Error(\"Could not find Dependency Injection token: \" + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nvar UIInjectorImpl = (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error(\"Resolvable async .get() not complete:\" + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.native && this.native.get(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\n/** @hidden */\nvar stateSelf = prop(\"self\");\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () {\n            return _this.router.globals.transition === _this;\n        };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(exports.TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) { return; };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi._getEvents()\n            .filter(function (type) { return type.hookPhase !== exports.TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to)) ||\n            (compare.from && !matchState(this.$from(), compare.from)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return Object.freeze(this._treeChanges[pathname].map(prop(\"paramValues\")).reduce(mergeR, {}));\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `data` resolve\n     *   // even though `foo.bar` also has a `data` resolve\n     *   var fooData = trans.injector('foo').get('data');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `data` from the exiting state.\n     *   var fooData = trans.injector(null, 'foo.bar').get('data');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = \"to\"; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = \"\"; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = (typeof state === \"string\") ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state')).map(stateSelf).reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = \"entering\"; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path.map(prop(\"views\")).filter(identity).reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: \"redirect\" };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = new TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams)\n            .filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return \"SameAsPending\";\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return \"SameAsCurrent\";\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) {\n            return _this._hookBuilder.buildHooksForPhase(phase);\n        };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(exports.TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(exports.TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(exports.TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(exports.TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract)\n            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n        var paramDefs = state.parameters(), values$$1 = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values$$1[param.id]); });\n        if (invalidParams.length) {\n            return \"Param values not valid for state '\" + state.name + \"'. Invalid params: [ \" + invalidParams.map(function (param) { return param.id; }).join(', ') + \" ]\";\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : omit(params, [\"#\"]);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = toJson(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = toJson(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\n\n/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nfunction maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + \"...\";\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nfunction padString(length, str) {\n    while (str.length < length)\n        str += \" \";\n    return str;\n}\nfunction kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n}\nfunction functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || \"\";\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nfunction fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return _fn && _fn.toString() || \"undefined\";\n}\nvar stringifyPatternFn = null;\nvar stringifyPattern = function (value) {\n    var isRejection = Rejection.isRejectionPromise;\n    stringifyPatternFn = stringifyPatternFn || pattern([\n        [not(isDefined), val(\"undefined\")],\n        [isNull, val(\"null\")],\n        [isPromise, val(\"[Promise]\")],\n        [isRejection, function (x) { return x._transitionRejection.toString(); }],\n        [is(Rejection), invoke(\"toString\")],\n        [is(Transition), invoke(\"toString\")],\n        [is(Resolvable), invoke(\"toString\")],\n        [isInjectable, functionToString],\n        [val(true), identity]\n    ]);\n    return stringifyPatternFn(value);\n};\nfunction stringify(o) {\n    var seen = [];\n    function format(val$$1) {\n        if (isObject(val$$1)) {\n            if (seen.indexOf(val$$1) !== -1)\n                return '[circular ref]';\n            seen.push(val$$1);\n        }\n        return stringifyPattern(val$$1);\n    }\n    return JSON.stringify(o, function (key, val$$1) { return format(val$$1); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nvar beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nfunction splitOnDelim(delim) {\n    var re = new RegExp(\"(\" + delim + \")\", \"g\");\n    return function (str) {\n        return str.split(re).filter(identity);\n    };\n}\n\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nfunction joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n\n/** @module common */ /** for typedoc */\n\n/**\n * @coreapi\n * @module params\n */\n/** */\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n */\nvar ParamTypes = (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\"hash\", \"string\", \"query\", \"path\", \"int\", \"bool\", \"date\", \"json\", \"any\"]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) {\n            return new ParamType(extend({ name: name }, definition));\n        };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val$$1) {\n            return val$$1 != null ? val$$1.toString() : val$$1;\n        };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val$$1) { return parseInt(val$$1, 10); },\n            is: function (val$$1) {\n                return !isNullOrUndefined(val$$1) && this.decode(val$$1.toString()) === val$$1;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val$$1) { return val$$1 && 1 || 0; },\n            decode: function (val$$1) { return parseInt(val$$1, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/\n        }),\n        date: makeDefaultType({\n            encode: function (val$$1) {\n                return !this.is(val$$1) ? undefined : [\n                    val$$1.getFullYear(),\n                    ('0' + (val$$1.getMonth() + 1)).slice(-2),\n                    ('0' + val$$1.getDate()).slice(-2)\n                ].join(\"-\");\n            },\n            decode: function (val$$1) {\n                if (this.is(val$$1))\n                    return val$$1;\n                var match = this.capture.exec(val$$1);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val$$1) { return val$$1 instanceof Date && !isNaN(val$$1.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate']\n                    .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n\n/**\n * @coreapi\n * @module params\n */\n/** */\n/** @internalapi */\nvar StateParams = (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    \n    return StateParams;\n}());\n\n/** @module path */ /** for typedoc */\n\n/** @module resolve */ /** for typedoc */\n\n/** @module state */ /** for typedoc */\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(state) {\n        var stateDec = state;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n        }\n        var parsed = parseUrl(stateDec.url), parent = state.parent;\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n            params: state.params || {},\n            paramMap: function (paramConfig, isSearch) {\n                if (stateDec.reloadOnSearch === false && isSearch)\n                    paramConfig = extend(paramConfig || {}, { dynamic: true });\n                return paramConfig;\n            }\n        });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, config); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nfunction resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || \"deferred\";\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val))); };\n    /** extracts the token from a Provider or provide literal */\n    var token = function (p) { return p.provide || p.token; };\n    /** Given a literal resolve or provider object, returns a Resolvable */\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(token(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    var tuple2Resolvable = pattern([\n        [pipe(prop(\"val\"), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop(\"val\"), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop(\"val\"), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + stringify(obj)); }]\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(\"\"); };\n        var isRoot = function (state) { return state.name === \"\"; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder]\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || \"\";\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join(\".\");\n        }\n        if (!state.parent)\n            return \"\";\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + \".\" + name : name;\n    };\n    return StateBuilder;\n}());\n\n/** @module state */ /** for typedoc */\nvar StateMatcher = (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || \"\";\n        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== \"\")\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (state) {\n                return state.__stateObjectCache.nameGlob &&\n                    state.__stateObjectCache.nameGlob.matches(name);\n            });\n            if (matches.length > 1) {\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === \"\" && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === \"^\") {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join(\".\");\n        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n    };\n    return StateMatcher;\n}());\n\n/** @module state */ /** for typedoc */\n/** @internalapi */\nvar StateQueueManager = (function () {\n    function StateQueueManager($registry, $urlRouter, states, builder, listeners) {\n        this.$registry = $registry;\n        this.$urlRouter = $urlRouter;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n        this.matcher = $registry.matcher;\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error(\"State must have a valid name\");\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) {\n            return _this.states.hasOwnProperty(name) && _this.states[name];\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + \".**\");\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.$registry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        if (registered.length) {\n            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n        }\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        this.$urlRouter.rule(this.$urlRouter.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\n\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\nvar StateRegistry = (function () {\n    /** @internalapi */\n    function StateRegistry(_router) {\n        this._router = _router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, _router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(this, _router.urlRouter, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true }\n            },\n            abstract: true\n        };\n        var _root = this._root = this.stateQueue.register(rootStateDef);\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all$$1 = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var children = all$$1.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return children.length === 0 ? children : children.concat(getChildren(children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (state) {\n            var $ur = _this._router.urlRouter;\n            // Remove URL rule\n            $ur.rules().filter(propEq(\"state\", state)).forEach($ur.removeRule.bind($ur));\n            // Remove state from registry\n            delete _this.states[state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return found && found.self || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\n\n/**\n * @coreapi\n * @module url\n */\n/** for typedoc */\n/** @hidden */\nfunction quoteRegExp(string, param) {\n    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, prop$$1, fn) {\n    return obj[prop$$1] = obj[prop$$1] || fn();\n};\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param config  A configuration object\n     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n     */\n    function UrlMatcher(pattern$$1, paramTypes, paramFactory, config) {\n        var _this = this;\n        this.config = config;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.pattern = pattern$$1;\n        this.config = defaults(this.config, {\n            params: {},\n            strict: true,\n            caseInsensitive: false,\n            paramMap: identity\n        });\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern$$1 + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern$$1 + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (regexp) { return inherit(paramTypes.type(isSearch ? \"query\" : \"path\"), {\n                pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n            }); };\n            return {\n                id: id,\n                regexp: regexp,\n                cfg: _this.config.params[id],\n                segment: pattern$$1.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp)\n            };\n        };\n        var p, segment;\n        while ((m = placeholder.exec(pattern$$1))) {\n            p = matchDetails(m, false);\n            if (p.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(p.id);\n            this._params.push(paramFactory.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false)));\n            this._segments.push(p.segment);\n            patterns.push([p.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern$$1.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                while ((m = searchPlaceholder.exec(search))) {\n                    p = matchDetails(m, true);\n                    checkParamErrors(p.id);\n                    this._params.push(paramFactory.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true)));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (pattern$$1) { return quoteRegExp.apply(null, pattern$$1); }).concat(quoteRegExp(segment));\n    }\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '\\/?' : '',\n                '$'\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        //options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values$$1 = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(string) {\n            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n            var split = reverseString(string).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values$$1[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values$$1[param.id] = param.value(value);\n        });\n        if (hash)\n            values$$1[\"#\"] = hash;\n        return values$$1;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val$$1) {\n            return !param || param.validates(val$$1);\n        };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values$$1) {\n        if (values$$1 === void 0) { values$$1 = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return isString(x) ? x : getDetails(x); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers.map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values$$1[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, \"\");\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams.map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val$$1) { return param.id + \"=\" + val$$1; });\n        }).filter(identity).reduce(unnestR, []).join(\"&\");\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : \"\") + (values$$1[\"#\"] ? \"#\" + values$$1[\"#\"] : \"\");\n    };\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        return encodeURIComponent(str).replace(/-/g, function (c) { return \"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase(); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === exports.DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== \"\" && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === exports.DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return matcher._cache.segments = matcher._cache.segments ||\n                matcher._cache.path.map(UrlMatcher.pathSegmentsAndParams)\n                    .reduce(unnestR, [])\n                    .reduce(joinNeighborsR, [])\n                    .map(function (x) { return isString(x) ? splitOnSlash(x) : x; })\n                    .reduce(unnestR, []);\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return matcher._cache.weights = matcher._cache.weights ||\n                segments(matcher).map(function (segment) {\n                    // Sort slashes first, then static strings, the Params\n                    if (segment === '/')\n                        return 1;\n                    if (isString(segment))\n                        return 2;\n                    if (segment instanceof Param)\n                        return 3;\n                });\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var cmp, i, pairs$$1 = arrayTuples(weightsA, weightsB);\n        for (i = 0; i < pairs$$1.length; i++) {\n            cmp = pairs$$1[i][0] - pairs$$1[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\n\n/**\n * @internalapi\n * @module url\n */ /** for typedoc */\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nvar UrlMatcherFactory = (function () {\n    function UrlMatcherFactory() {\n        var _this = this;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @hidden */\n        this._getConfig = function (config) {\n            return extend({ strict: _this._isStrictMode, caseInsensitive: _this._isCaseInsensitive }, config);\n        };\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = {\n            /** Creates a new [[Param]] from a CONFIG block */\n            fromConfig: function (id, type, config) {\n                return new Param(id, type, config, exports.DefType.CONFIG, _this);\n            },\n            /** Creates a new [[Param]] from a url PATH */\n            fromPath: function (id, type, config) {\n                return new Param(id, type, config, exports.DefType.PATH, _this);\n            },\n            /** Creates a new [[Param]] from a url SEARCH */\n            fromSearch: function (id, type, config) {\n                return new Param(id, type, config, exports.DefType.SEARCH, _this);\n            },\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n        return this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.strictMode = function (value) {\n        return this._isStrictMode = isDefined(value) ? value : this._isStrictMode;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy;\n    };\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        return new UrlMatcher(pattern, this.paramTypes, this.paramFactory, this._getConfig(config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    \n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A [[ParamType]] can be used to generate URLs with typed parameters.\n     *\n     * @param name  The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     *\n     * Note: Register custom types *before using them* in a state definition.\n     *\n     * See [[ParamTypeDefinition]] for examples\n     */\n    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    \n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        this.paramTypes.enqueue = false;\n        this.paramTypes._flushTypeQueue();\n        return this;\n    };\n    \n    /** @internalapi */\n    UrlMatcherFactory.prototype.dispose = function () {\n        this.paramTypes.dispose();\n    };\n    return UrlMatcherFactory;\n}());\n\n/**\n * @coreapi\n * @module url\n */ /** */\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function match(url) {\n            var match = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(match) && match;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: \"URLMATCHER\" };\n        return extend(new BaseUrlRule(match, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: \"url\" });\n            }\n        };\n        var details = { state: state, type: \"STATE\" };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error(\"Rule RegExp must not be global or sticky\");\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n                return match[what === '$' ? 0 : Number(what)];\n            });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var match = function (url) {\n            return regexp.exec(url.path);\n        };\n        var details = { regexp: regexp, type: \"REGEXP\" };\n        return extend(new BaseUrlRule(match, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) {\n        return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); });\n    };\n    return UrlRuleFactory;\n}());\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = \"RAW\";\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\n\n/**\n * @internalapi\n * @module url\n */\n/** for typedoc */\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return baseHref.slice(0, -1) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/** @hidden */\nvar prioritySort = function (a, b) {\n    return (b.priority || 0) - (a.priority || 0);\n};\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { \"STATE\": 4, \"URLMATCHER\": 4, \"REGEXP\": 3, \"RAW\": 2, \"OTHER\": 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRulesApi.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @coreapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class updates the URL when the state changes.\n * It also responds to changes in the URL.\n */\nvar UrlRouter = (function () {\n    /** @hidden */\n    function UrlRouter(router) {\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this.interceptDeferred = false;\n        /** @hidden */ this._id = 0;\n        /** @hidden */ this._sorted = false;\n        this._router = router;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n        createProxyFunctions(val(UrlRouter.prototype), this, val(this));\n    }\n    /** @internalapi */\n    UrlRouter.prototype.dispose = function () {\n        this.listen(false);\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sort = function (compareFn) {\n        this._rules = this.stableSort(this._rules, this._sortFn = compareFn || this._sortFn);\n        this._sorted = true;\n    };\n    UrlRouter.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    UrlRouter.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0\n                ? wrapperA.idx - wrapperB.idx\n                : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Given a URL, check all rules and return the best [[MatchResult]]\n     * @param url\n     * @returns {MatchResult}\n     */\n    UrlRouter.prototype.match = function (url) {\n        var _this = this;\n        this.ensureSorted();\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules();\n        if (this._otherwiseFn)\n            rules.push(this._otherwiseFn);\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this._router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && this._sortFn(rules[i], best.rule) !== 0)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = (!best || current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var router = this._router, $url = router.urlService, $state = router.stateService;\n        var url = {\n            path: $url.path(), search: $url.search(), hash: $url.hash(),\n        };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return $url.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return $state.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return $state.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, router));\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopFn && this._stopFn();\n            delete this._stopFn;\n        }\n        else {\n            return this._stopFn = this._stopFn || this._router.urlService.onChange(function (evt) { return _this.sync(evt); });\n        }\n    };\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this._router.locationService;\n        if (read) {\n            this.location = $url.path();\n            return;\n        }\n        if ($url.path() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this._router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this._router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = \"#\" + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[UrlRouter.urlRuleFactory]], or create manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRouter.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error(\"invalid rule\");\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.slice();\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    \n    /** @inheritdoc */\n    UrlRouter.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    \n    /** @inheritdoc */\n    UrlRouter.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    \n    /** @inheritdoc */\n    UrlRouter.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    \n    return UrlRouter;\n}());\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n\n/**\n * @coreapi\n * @module view\n */ /** for typedoc */\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = (function () {\n    function ViewService() {\n        var _this = this;\n        this._uiViews = [];\n        this._viewConfigs = [];\n        this._viewConfigFactories = {};\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n        };\n    }\n    ViewService.prototype._rootViewContext = function (context) {\n        return this._rootContext = context || this._rootContext;\n    };\n    \n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) {\n                return context && context.parent ? stateDepth(context.parent) + 1 : 1;\n            };\n            return (uiView.fqn.split(\".\").length * 10000) + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return [uiView, matchingConfigs[0]];\n        };\n        var configureUIView = function (_a) {\n            var uiView = _a[0], viewConfig = _a[1];\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(uiView) !== -1)\n                uiView.configUpdated(viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var pairs$$1 = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        trace.traceViewSync(pairs$$1);\n        pairs$$1.forEach(configureUIView);\n    };\n    \n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    \n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop(\"fqn\"));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop(\"$config\")).map(prop(\"name\"));\n    };\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = \"\"; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split(\"@\");\n        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = \"\"; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n            uiViewContextAnchor = anchor.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split(\".\");\n        var uivSegments = uiView.fqn.split(\".\");\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = (1 - vcSegments.length) || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\n\n/**\n * @coreapi\n * @module core\n */ /** */\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\n\n/**\n * @coreapi\n * @module url\n */ /** */\n/** @hidden */\nvar makeStub = function (keys) {\n    return keys.reduce(function (acc, key) { return (acc[key] = notImplemented(key), acc); }, { dispose: noop });\n};\n/** @hidden */ var locationServicesFns = [\"url\", \"path\", \"search\", \"hash\", \"onChange\"];\n/** @hidden */ var locationConfigFns = [\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"];\n/** @hidden */ var umfFns = [\"type\", \"caseInsensitive\", \"strictMode\", \"defaultSquashPolicy\"];\n/** @hidden */ var rulesFns = [\"sort\", \"when\", \"initial\", \"otherwise\", \"rules\", \"rule\", \"removeRule\"];\n/** @hidden */ var syncFns = [\"deferIntercept\", \"listen\", \"sync\", \"match\"];\n/**\n * API for URL management\n */\nvar UrlService = (function () {\n    /** @hidden */\n    function UrlService(router, lateBind) {\n        if (lateBind === void 0) { lateBind = true; }\n        this.router = router;\n        this.rules = {};\n        this.config = {};\n        // proxy function calls from UrlService to the LocationService/LocationConfig\n        var locationServices = function () { return router.locationService; };\n        createProxyFunctions(locationServices, this, locationServices, locationServicesFns, lateBind);\n        var locationConfig = function () { return router.locationConfig; };\n        createProxyFunctions(locationConfig, this.config, locationConfig, locationConfigFns, lateBind);\n        var umf = function () { return router.urlMatcherFactory; };\n        createProxyFunctions(umf, this.config, umf, umfFns);\n        var urlRouter = function () { return router.urlRouter; };\n        createProxyFunctions(urlRouter, this.rules, urlRouter, rulesFns);\n        createProxyFunctions(urlRouter, this, urlRouter, syncFns);\n    }\n    UrlService.prototype.url = function (newurl, replace, state) { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.path = function () { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.search = function () { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.hash = function () { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.onChange = function (callback) { return; };\n    \n    /**\n     * Returns the current URL parts\n     *\n     * This method returns the current URL components as a [[UrlParts]] object.\n     *\n     * @returns the current url parts\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    UrlService.prototype.dispose = function () { };\n    /** @inheritdoc */\n    UrlService.prototype.sync = function (evt) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.listen = function (enabled) { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.deferIntercept = function (defer) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.match = function (urlParts) { return; };\n    /** @hidden */\n    UrlService.locationServiceStub = makeStub(locationServicesFns);\n    /** @hidden */\n    UrlService.locationConfigStub = makeStub(locationConfigFns);\n    return UrlService;\n}());\n\n/**\n * @coreapi\n * @module core\n */ /** */\n/** @hidden */\nvar _routerInstance = 0;\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = UrlService.locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = UrlService.locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** @hidden */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlRouter);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error(\"Required property `name` missing on plugin: \" + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return this._plugins[pluginInstance.name] = pluginInstance;\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\n\n/** @module hooks */ /** */\nfunction addCoreResolvables(trans) {\n    trans.addResolvable({ token: UIRouter, deps: [], resolveFn: function () { return trans.router; }, data: trans.router }, \"\");\n    trans.addResolvable({ token: Transition, deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$transition$', deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$stateParams', deps: [], resolveFn: function () { return trans.params(); }, data: trans.params() }, \"\");\n    trans.entering().forEach(function (state) {\n        trans.addResolvable({ token: '$state$', deps: [], resolveFn: function () { return state; }, data: state }, state);\n    });\n}\nvar registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\n\n/** @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nvar registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nvar registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nvar registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nvar registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n\n/** @module hooks */\n/** for typedoc */\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(noop);\n};\nvar registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath(\"LAZY\", trans)\n        .then(noop);\n};\nvar registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: 1000 });\n};\n\n/** @module hooks */ /** for typedoc */\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views(\"entering\");\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nvar registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    var exitingViews = transition.views(\"exiting\");\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nvar registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nvar registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n\n/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nvar registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === \"STATE\") {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition.entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nvar registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nfunction lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] =\n            services.$q.when(lazyLoadFn(transition, state))\n                .then(updateStateRegistry)\n                .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (state) { return transition.router.stateRegistry.register(state); });\n        }\n        return result;\n    }\n    return promise;\n}\n\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = (function () {\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\n\n/** @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nvar registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n\n/** @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error());\n    }\n}\nvar registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nvar defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: \"unknown\"\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]);\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) { return; };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) { return hooksArray.forEach(function (hook) {\n            hook._deregistered = true;\n            removeFrom(hooksArray, hook);\n        }); });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = exports.TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var ASYNCHRONOUS = false, SYNCHRONOUS = true;\n        this._defineEvent(\"onCreate\", Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onBefore\", Phase.BEFORE, 0, paths.to);\n        this._defineEvent(\"onStart\", Phase.RUN, 0, paths.to);\n        this._defineEvent(\"onExit\", Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent(\"onRetain\", Phase.RUN, 200, paths.retained);\n        this._defineEvent(\"onEnter\", Phase.RUN, 300, paths.entering);\n        this._defineEvent(\"onFinish\", Phase.RUN, 400, paths.to);\n        this._defineEvent(\"onSuccess\", Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onError\", Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = exports.TransitionHookScope.STATE, TRANSITION = exports.TransitionHookScope.TRANSITION;\n        this._definePathType(\"to\", TRANSITION);\n        this._definePathType(\"from\", TRANSITION);\n        this._definePathType(\"exiting\", STATE);\n        this._definePathType(\"retained\", STATE);\n        this._definePathType(\"entering\", STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    \n    /** @hidden */\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase) ?\n            this._eventTypes.filter(function (type) { return type.hookPhase === phase; }) :\n            this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\n\n/**\n * @coreapi\n * @module state\n */\n/** */\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = (function () {\n    /** @internalapi */\n    function StateService(router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () { return this.router.globals.transition; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () { return this.router.globals.params; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () { return this.router.globals.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () { return this.router.globals.$current; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    \n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    \n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        var stateDefinition = reg.matcher.find(identifier, options.relative);\n        return new TargetState(identifier, stateDefinition, params, options);\n    };\n    \n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () {\n            return globals.transition;\n        };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (transition) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId === transition.$id;\n                if (error.type === exports.RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === exports.RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = transition.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === exports.RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    \n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    \n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    \n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = (state && options.lossy) ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, {\n            absolute: options.absolute,\n        });\n    };\n    \n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error(\"Can not lazy load \" + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\n\n/**\n * # Transition subsystem\n *\n * This module contains APIs related to a Transition.\n *\n * See:\n * - [[TransitionService]]\n * - [[Transition]]\n * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n *\n * @coreapi\n * @preferred\n * @module transition\n */ /** for typedoc */\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nvar $q = {\n    /** Normalizes a value as a promise */\n    when: function (val$$1) { return new Promise(function (resolve, reject) { return resolve(val$$1); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val$$1) { return new Promise(function (resolve, reject) { reject(val$$1); }); },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises)\n                .map(function (key) { return promises[key].then(function (val$$1) { return ({ key: key, val: val$$1 }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values$$1) {\n                return values$$1.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n            });\n        }\n    }\n};\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nvar $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all$$1 = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all$$1.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all$$1[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    }\n};\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar beforeAfterSubstr$1 = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nvar splitHash = beforeAfterSubstr$1(\"#\");\nvar splitQuery = beforeAfterSubstr$1(\"?\");\nvar splitEqual = beforeAfterSubstr$1(\"=\");\nvar trimHashVal = function (str) { return str ? str.replace(/^#/, \"\") : \"\"; };\nvar keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val$$1 = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val$$1;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val$$1);\n    }\n    else {\n        accum[key] = [accum[key], val$$1];\n    }\n    return accum;\n};\nvar getParams = function (queryString) {\n    return queryString.split(\"&\").filter(identity).map(splitEqual).reduce(keyValsToObjectR, {});\n};\nfunction parseUrl$1(url) {\n    var orEmptyString = function (x) { return x || \"\"; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nvar buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject).map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val$$1) { return key + \"=\" + val$$1; });\n    }).reduce(unnestR, []).join(\"&\");\n    return path + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\n};\nfunction locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (router) {\n        var service = router.locationService = new serviceClass(router);\n        var configuration = router.locationConfig = new configurationClass(router, isHtml5);\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n\n/**\n * @internalapi\n * @module vanilla\n */ /** */\n/** A base `LocationServices` */\nvar BaseLocationServices = (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this._listeners = [];\n        this.hash = function () { return parseUrl$1(_this._get()).hash; };\n        this.path = function () { return parseUrl$1(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl$1(_this._get()).search); };\n        this._location = window && window.location;\n        this._history = window && window.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                var evt_1 = extend(new Event(\"locationchange\"), { url: url });\n                this._listeners.forEach(function (cb) { return cb(evt_1); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        window.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\n\nvar __extends$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = (function (_super) {\n    __extends$1(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\n\nvar __extends$2 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = (function (_super) {\n    __extends$2(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        window.addEventListener(\"popstate\", _this._listener, false);\n        return _this;\n    }\n    \n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        return pathname + (search ? \"?\" + search : \"\") + (hash ? \"$\" + search : \"\");\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var _a = this, _config = _a._config, _history = _a._history;\n        var fullUrl = _config.baseHref() + url;\n        if (replace) {\n            _history.replaceState(state, title, fullUrl);\n        }\n        else {\n            _history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener(\"popstate\", this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\n\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = \"http\";\n        this._host = \"localhost\";\n        this._hashPrefix = \"\";\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return isDefined(newval) ? _this._hashPrefix = newval : _this._hashPrefix; };\n        this.dispose = noop;\n    }\n    return MemoryLocationConfig;\n}());\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = \"\";\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? this._hashPrefix = newprefix : this._hashPrefix;\n    };\n    \n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        return isDefined(href) ? this._baseHref = href : this._baseHref || this.applyDocumentBaseHref();\n    };\n    BrowserLocationConfig.prototype.applyDocumentBaseHref = function () {\n        var baseTags = document.getElementsByTagName(\"base\");\n        return this._baseHref = baseTags.length ? baseTags[0].href.substr(location.origin.length) : \"\";\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nfunction servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: \"vanilla.services\", $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nvar hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nvar pushStateLocationPlugin = locationPluginFactory(\"vanilla.pushStateLocation\", true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nvar memoryLocationPlugin = locationPluginFactory(\"vanilla.memoryLocation\", false, MemoryLocationService, MemoryLocationConfig);\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n\n/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @coreapi\n * @preferred\n * @module core\n */ /** for typedoc */\n/** @internalapi */\nvar UIRouterPluginBase = (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\n\n/**\n * @coreapi\n * @module common\n */ /** */\n\nexports.fromJson = fromJson;\nexports.toJson = toJson;\nexports.copy = copy;\nexports.forEach = forEach;\nexports.extend = extend;\nexports.equals = equals;\nexports.identity = identity;\nexports.noop = noop;\nexports.createProxyFunctions = createProxyFunctions;\nexports.inherit = inherit;\nexports.inArray = inArray;\nexports._inArray = _inArray;\nexports.removeFrom = removeFrom;\nexports._removeFrom = _removeFrom;\nexports.pushTo = pushTo;\nexports._pushTo = _pushTo;\nexports.deregAll = deregAll;\nexports.defaults = defaults;\nexports.mergeR = mergeR;\nexports.ancestors = ancestors;\nexports.pick = pick;\nexports.omit = omit;\nexports.pluck = pluck;\nexports.filter = filter;\nexports.find = find;\nexports.mapObj = mapObj;\nexports.map = map;\nexports.values = values;\nexports.allTrueR = allTrueR;\nexports.anyTrueR = anyTrueR;\nexports.unnestR = unnestR;\nexports.flattenR = flattenR;\nexports.pushR = pushR;\nexports.uniqR = uniqR;\nexports.unnest = unnest;\nexports.flatten = flatten;\nexports.assertPredicate = assertPredicate;\nexports.assertMap = assertMap;\nexports.assertFn = assertFn;\nexports.pairs = pairs;\nexports.arrayTuples = arrayTuples;\nexports.applyPairs = applyPairs;\nexports.tail = tail;\nexports._extend = _extend;\nexports.silenceUncaughtInPromise = silenceUncaughtInPromise;\nexports.silentRejection = silentRejection;\nexports.notImplemented = notImplemented;\nexports.services = services;\nexports.Glob = Glob;\nexports.curry = curry;\nexports.compose = compose;\nexports.pipe = pipe;\nexports.prop = prop;\nexports.propEq = propEq;\nexports.parse = parse;\nexports.not = not;\nexports.and = and;\nexports.or = or;\nexports.all = all;\nexports.any = any;\nexports.is = is;\nexports.eq = eq;\nexports.val = val;\nexports.invoke = invoke;\nexports.pattern = pattern;\nexports.isUndefined = isUndefined;\nexports.isDefined = isDefined;\nexports.isNull = isNull;\nexports.isNullOrUndefined = isNullOrUndefined;\nexports.isFunction = isFunction;\nexports.isNumber = isNumber;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isArray = isArray;\nexports.isDate = isDate;\nexports.isRegExp = isRegExp;\nexports.isState = isState;\nexports.isInjectable = isInjectable;\nexports.isPromise = isPromise;\nexports.Queue = Queue;\nexports.maxLength = maxLength;\nexports.padString = padString;\nexports.kebobString = kebobString;\nexports.functionToString = functionToString;\nexports.fnToString = fnToString;\nexports.stringify = stringify;\nexports.beforeAfterSubstr = beforeAfterSubstr;\nexports.splitOnDelim = splitOnDelim;\nexports.joinNeighborsR = joinNeighborsR;\nexports.Trace = Trace;\nexports.trace = trace;\nexports.Param = Param;\nexports.ParamTypes = ParamTypes;\nexports.StateParams = StateParams;\nexports.ParamType = ParamType;\nexports.PathNode = PathNode;\nexports.PathUtils = PathUtils;\nexports.resolvePolicies = resolvePolicies;\nexports.defaultResolvePolicy = defaultResolvePolicy;\nexports.Resolvable = Resolvable;\nexports.NATIVE_INJECTOR_TOKEN = NATIVE_INJECTOR_TOKEN;\nexports.ResolveContext = ResolveContext;\nexports.resolvablesBuilder = resolvablesBuilder;\nexports.StateBuilder = StateBuilder;\nexports.StateObject = StateObject;\nexports.StateMatcher = StateMatcher;\nexports.StateQueueManager = StateQueueManager;\nexports.StateRegistry = StateRegistry;\nexports.StateService = StateService;\nexports.TargetState = TargetState;\nexports.HookBuilder = HookBuilder;\nexports.matchState = matchState;\nexports.RegisteredHook = RegisteredHook;\nexports.makeEvent = makeEvent;\nexports.Rejection = Rejection;\nexports.Transition = Transition;\nexports.TransitionHook = TransitionHook;\nexports.TransitionEventType = TransitionEventType;\nexports.defaultTransOpts = defaultTransOpts;\nexports.TransitionService = TransitionService;\nexports.UrlMatcher = UrlMatcher;\nexports.UrlMatcherFactory = UrlMatcherFactory;\nexports.UrlRouter = UrlRouter;\nexports.UrlRuleFactory = UrlRuleFactory;\nexports.BaseUrlRule = BaseUrlRule;\nexports.UrlService = UrlService;\nexports.ViewService = ViewService;\nexports.UIRouterGlobals = UIRouterGlobals;\nexports.UIRouter = UIRouter;\nexports.$q = $q;\nexports.$injector = $injector;\nexports.BaseLocationServices = BaseLocationServices;\nexports.HashLocationService = HashLocationService;\nexports.MemoryLocationService = MemoryLocationService;\nexports.PushStateLocationService = PushStateLocationService;\nexports.MemoryLocationConfig = MemoryLocationConfig;\nexports.BrowserLocationConfig = BrowserLocationConfig;\nexports.splitHash = splitHash;\nexports.splitQuery = splitQuery;\nexports.splitEqual = splitEqual;\nexports.trimHashVal = trimHashVal;\nexports.keyValsToObjectR = keyValsToObjectR;\nexports.getParams = getParams;\nexports.parseUrl = parseUrl$1;\nexports.buildUrl = buildUrl;\nexports.locationPluginFactory = locationPluginFactory;\nexports.servicesPlugin = servicesPlugin;\nexports.hashLocationPlugin = hashLocationPlugin;\nexports.pushStateLocationPlugin = pushStateLocationPlugin;\nexports.memoryLocationPlugin = memoryLocationPlugin;\nexports.UIRouterPluginBase = UIRouterPluginBase;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ui-router-core.js.map\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(20));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\")) : factory(root[\"angular\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!********************************!*\\\n  !*** ./src/angular-spinner.ts ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar SpinJSSpinner_1 = __webpack_require__(/*! ./Constants/SpinJSSpinner */ 1);\n\tvar UsSpinnerService_1 = __webpack_require__(/*! ./Services/UsSpinnerService */ 3);\n\tvar AngularSpinner_1 = __webpack_require__(/*! ./Directives/AngularSpinner */ 4);\n\tvar UsSpinnerConfig_1 = __webpack_require__(/*! ./Config/UsSpinnerConfig */ 6);\n\tvar angular = __webpack_require__(/*! angular */ 5);\n\texports.angularSpinner = angular\n\t    .module('angularSpinner', [])\n\t    .provider('usSpinnerConfig', UsSpinnerConfig_1.UsSpinnerConfig)\n\t    .constant('SpinJSSpinner', SpinJSSpinner_1.SpinJSSpinner)\n\t    .service('usSpinnerService', UsSpinnerService_1.UsSpinnerService)\n\t    .directive('usSpinner', AngularSpinner_1.usSpinner);\n\n\n/***/ },\n/* 1 */\n/*!****************************************!*\\\n  !*** ./src/Constants/SpinJSSpinner.ts ***!\n  \\****************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Spinner = __webpack_require__(/*! spin.js */ 2);\n\t/**\n\t * Exporting the Spinner prototype from spin.js library\n\t */\n\texports.SpinJSSpinner = Spinner;\n\n\n/***/ },\n/* 2 */\n/*!***************************!*\\\n  !*** ./~/spin.js/spin.js ***!\n  \\***************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Copyright (c) 2011-2014 Felix Gnass\n\t * Licensed under the MIT license\n\t * http://spin.js.org/\n\t *\n\t * Example:\n\t    var opts = {\n\t      lines: 12             // The number of lines to draw\n\t    , length: 7             // The length of each line\n\t    , width: 5              // The line thickness\n\t    , radius: 10            // The radius of the inner circle\n\t    , scale: 1.0            // Scales overall size of the spinner\n\t    , corners: 1            // Roundness (0..1)\n\t    , color: '#000'         // #rgb or #rrggbb\n\t    , opacity: 1/4          // Opacity of the lines\n\t    , rotate: 0             // Rotation offset\n\t    , direction: 1          // 1: clockwise, -1: counterclockwise\n\t    , speed: 1              // Rounds per second\n\t    , trail: 100            // Afterglow percentage\n\t    , fps: 20               // Frames per second when using setTimeout()\n\t    , zIndex: 2e9           // Use a high z-index by default\n\t    , className: 'spinner'  // CSS class to assign to the element\n\t    , top: '50%'            // center vertically\n\t    , left: '50%'           // center horizontally\n\t    , shadow: false         // Whether to render a shadow\n\t    , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n\t    , position: 'absolute'  // Element positioning\n\t    }\n\t    var target = document.getElementById('foo')\n\t    var spinner = new Spinner(opts).spin(target)\n\t */\n\t;(function (root, factory) {\n\t\n\t  /* CommonJS */\n\t  if (typeof module == 'object' && module.exports) module.exports = factory()\n\t\n\t  /* AMD module */\n\t  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t\n\t  /* Browser global */\n\t  else root.Spinner = factory()\n\t}(this, function () {\n\t  \"use strict\"\n\t\n\t  var prefixes = ['webkit', 'Moz', 'ms', 'O'] /* Vendor prefixes */\n\t    , animations = {} /* Animation rules keyed by their name */\n\t    , useCssAnimations /* Whether to use CSS animations or setTimeout */\n\t    , sheet /* A stylesheet to hold the @keyframe or VML rules. */\n\t\n\t  /**\n\t   * Utility function to create elements. If no tag name is given,\n\t   * a DIV is created. Optionally properties can be passed.\n\t   */\n\t  function createEl (tag, prop) {\n\t    var el = document.createElement(tag || 'div')\n\t      , n\n\t\n\t    for (n in prop) el[n] = prop[n]\n\t    return el\n\t  }\n\t\n\t  /**\n\t   * Appends children and returns the parent.\n\t   */\n\t  function ins (parent /* child1, child2, ...*/) {\n\t    for (var i = 1, n = arguments.length; i < n; i++) {\n\t      parent.appendChild(arguments[i])\n\t    }\n\t\n\t    return parent\n\t  }\n\t\n\t  /**\n\t   * Creates an opacity keyframe animation rule and returns its name.\n\t   * Since most mobile Webkits have timing issues with animation-delay,\n\t   * we create separate rules for each line/segment.\n\t   */\n\t  function addAnimation (alpha, trail, i, lines) {\n\t    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-')\n\t      , start = 0.01 + i/lines * 100\n\t      , z = Math.max(1 - (1-alpha) / trail * (100-start), alpha)\n\t      , prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase()\n\t      , pre = prefix && '-' + prefix + '-' || ''\n\t\n\t    if (!animations[name]) {\n\t      sheet.insertRule(\n\t        '@' + pre + 'keyframes ' + name + '{' +\n\t        '0%{opacity:' + z + '}' +\n\t        start + '%{opacity:' + alpha + '}' +\n\t        (start+0.01) + '%{opacity:1}' +\n\t        (start+trail) % 100 + '%{opacity:' + alpha + '}' +\n\t        '100%{opacity:' + z + '}' +\n\t        '}', sheet.cssRules.length)\n\t\n\t      animations[name] = 1\n\t    }\n\t\n\t    return name\n\t  }\n\t\n\t  /**\n\t   * Tries various vendor prefixes and returns the first supported property.\n\t   */\n\t  function vendor (el, prop) {\n\t    var s = el.style\n\t      , pp\n\t      , i\n\t\n\t    prop = prop.charAt(0).toUpperCase() + prop.slice(1)\n\t    if (s[prop] !== undefined) return prop\n\t    for (i = 0; i < prefixes.length; i++) {\n\t      pp = prefixes[i]+prop\n\t      if (s[pp] !== undefined) return pp\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Sets multiple style properties at once.\n\t   */\n\t  function css (el, prop) {\n\t    for (var n in prop) {\n\t      el.style[vendor(el, n) || n] = prop[n]\n\t    }\n\t\n\t    return el\n\t  }\n\t\n\t  /**\n\t   * Fills in default values.\n\t   */\n\t  function merge (obj) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      var def = arguments[i]\n\t      for (var n in def) {\n\t        if (obj[n] === undefined) obj[n] = def[n]\n\t      }\n\t    }\n\t    return obj\n\t  }\n\t\n\t  /**\n\t   * Returns the line color from the given string or array.\n\t   */\n\t  function getColor (color, idx) {\n\t    return typeof color == 'string' ? color : color[idx % color.length]\n\t  }\n\t\n\t  // Built-in defaults\n\t\n\t  var defaults = {\n\t    lines: 12             // The number of lines to draw\n\t  , length: 7             // The length of each line\n\t  , width: 5              // The line thickness\n\t  , radius: 10            // The radius of the inner circle\n\t  , scale: 1.0            // Scales overall size of the spinner\n\t  , corners: 1            // Roundness (0..1)\n\t  , color: '#000'         // #rgb or #rrggbb\n\t  , opacity: 1/4          // Opacity of the lines\n\t  , rotate: 0             // Rotation offset\n\t  , direction: 1          // 1: clockwise, -1: counterclockwise\n\t  , speed: 1              // Rounds per second\n\t  , trail: 100            // Afterglow percentage\n\t  , fps: 20               // Frames per second when using setTimeout()\n\t  , zIndex: 2e9           // Use a high z-index by default\n\t  , className: 'spinner'  // CSS class to assign to the element\n\t  , top: '50%'            // center vertically\n\t  , left: '50%'           // center horizontally\n\t  , shadow: false         // Whether to render a shadow\n\t  , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n\t  , position: 'absolute'  // Element positioning\n\t  }\n\t\n\t  /** The constructor */\n\t  function Spinner (o) {\n\t    this.opts = merge(o || {}, Spinner.defaults, defaults)\n\t  }\n\t\n\t  // Global defaults that override the built-ins:\n\t  Spinner.defaults = {}\n\t\n\t  merge(Spinner.prototype, {\n\t    /**\n\t     * Adds the spinner to the given target element. If this instance is already\n\t     * spinning, it is automatically removed from its previous target b calling\n\t     * stop() internally.\n\t     */\n\t    spin: function (target) {\n\t      this.stop()\n\t\n\t      var self = this\n\t        , o = self.opts\n\t        , el = self.el = createEl(null, {className: o.className})\n\t\n\t      css(el, {\n\t        position: o.position\n\t      , width: 0\n\t      , zIndex: o.zIndex\n\t      , left: o.left\n\t      , top: o.top\n\t      })\n\t\n\t      if (target) {\n\t        target.insertBefore(el, target.firstChild || null)\n\t      }\n\t\n\t      el.setAttribute('role', 'progressbar')\n\t      self.lines(el, self.opts)\n\t\n\t      if (!useCssAnimations) {\n\t        // No CSS animation support, use setTimeout() instead\n\t        var i = 0\n\t          , start = (o.lines - 1) * (1 - o.direction) / 2\n\t          , alpha\n\t          , fps = o.fps\n\t          , f = fps / o.speed\n\t          , ostep = (1 - o.opacity) / (f * o.trail / 100)\n\t          , astep = f / o.lines\n\t\n\t        ;(function anim () {\n\t          i++\n\t          for (var j = 0; j < o.lines; j++) {\n\t            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity)\n\t\n\t            self.opacity(el, j * o.direction + start, alpha, o)\n\t          }\n\t          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps))\n\t        })()\n\t      }\n\t      return self\n\t    }\n\t\n\t    /**\n\t     * Stops and removes the Spinner.\n\t     */\n\t  , stop: function () {\n\t      var el = this.el\n\t      if (el) {\n\t        clearTimeout(this.timeout)\n\t        if (el.parentNode) el.parentNode.removeChild(el)\n\t        this.el = undefined\n\t      }\n\t      return this\n\t    }\n\t\n\t    /**\n\t     * Internal method that draws the individual lines. Will be overwritten\n\t     * in VML fallback mode below.\n\t     */\n\t  , lines: function (el, o) {\n\t      var i = 0\n\t        , start = (o.lines - 1) * (1 - o.direction) / 2\n\t        , seg\n\t\n\t      function fill (color, shadow) {\n\t        return css(createEl(), {\n\t          position: 'absolute'\n\t        , width: o.scale * (o.length + o.width) + 'px'\n\t        , height: o.scale * o.width + 'px'\n\t        , background: color\n\t        , boxShadow: shadow\n\t        , transformOrigin: 'left'\n\t        , transform: 'rotate(' + ~~(360/o.lines*i + o.rotate) + 'deg) translate(' + o.scale*o.radius + 'px' + ',0)'\n\t        , borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'\n\t        })\n\t      }\n\t\n\t      for (; i < o.lines; i++) {\n\t        seg = css(createEl(), {\n\t          position: 'absolute'\n\t        , top: 1 + ~(o.scale * o.width / 2) + 'px'\n\t        , transform: o.hwaccel ? 'translate3d(0,0,0)' : ''\n\t        , opacity: o.opacity\n\t        , animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'\n\t        })\n\t\n\t        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {top: '2px'}))\n\t        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')))\n\t      }\n\t      return el\n\t    }\n\t\n\t    /**\n\t     * Internal method that adjusts the opacity of a single line.\n\t     * Will be overwritten in VML fallback mode below.\n\t     */\n\t  , opacity: function (el, i, val) {\n\t      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val\n\t    }\n\t\n\t  })\n\t\n\t\n\t  function initVML () {\n\t\n\t    /* Utility function to create a VML tag */\n\t    function vml (tag, attr) {\n\t      return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr)\n\t    }\n\t\n\t    // No CSS transforms but VML support, add a CSS rule for VML elements:\n\t    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)')\n\t\n\t    Spinner.prototype.lines = function (el, o) {\n\t      var r = o.scale * (o.length + o.width)\n\t        , s = o.scale * 2 * r\n\t\n\t      function grp () {\n\t        return css(\n\t          vml('group', {\n\t            coordsize: s + ' ' + s\n\t          , coordorigin: -r + ' ' + -r\n\t          })\n\t        , { width: s, height: s }\n\t        )\n\t      }\n\t\n\t      var margin = -(o.width + o.length) * o.scale * 2 + 'px'\n\t        , g = css(grp(), {position: 'absolute', top: margin, left: margin})\n\t        , i\n\t\n\t      function seg (i, dx, filter) {\n\t        ins(\n\t          g\n\t        , ins(\n\t            css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx})\n\t          , ins(\n\t              css(\n\t                vml('roundrect', {arcsize: o.corners})\n\t              , { width: r\n\t                , height: o.scale * o.width\n\t                , left: o.scale * o.radius\n\t                , top: -o.scale * o.width >> 1\n\t                , filter: filter\n\t                }\n\t              )\n\t            , vml('fill', {color: getColor(o.color, i), opacity: o.opacity})\n\t            , vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n\t            )\n\t          )\n\t        )\n\t      }\n\t\n\t      if (o.shadow)\n\t        for (i = 1; i <= o.lines; i++) {\n\t          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')\n\t        }\n\t\n\t      for (i = 1; i <= o.lines; i++) seg(i)\n\t      return ins(el, g)\n\t    }\n\t\n\t    Spinner.prototype.opacity = function (el, i, val, o) {\n\t      var c = el.firstChild\n\t      o = o.shadow && o.lines || 0\n\t      if (c && i + o < c.childNodes.length) {\n\t        c = c.childNodes[i + o]; c = c && c.firstChild; c = c && c.firstChild\n\t        if (c) c.opacity = val\n\t      }\n\t    }\n\t  }\n\t\n\t  if (typeof document !== 'undefined') {\n\t    sheet = (function () {\n\t      var el = createEl('style', {type : 'text/css'})\n\t      ins(document.getElementsByTagName('head')[0], el)\n\t      return el.sheet || el.styleSheet\n\t    }())\n\t\n\t    var probe = css(createEl('group'), {behavior: 'url(#default#VML)'})\n\t\n\t    if (!vendor(probe, 'transform') && probe.adj) initVML()\n\t    else useCssAnimations = vendor(probe, 'animation')\n\t  }\n\t\n\t  return Spinner\n\t\n\t}));\n\n\n/***/ },\n/* 3 */\n/*!******************************************!*\\\n  !*** ./src/Services/UsSpinnerService.ts ***!\n  \\******************************************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * UsSpinnerService\n\t * This service let you control spin, start and stop\n\t */\n\tvar UsSpinnerService = (function () {\n\t    function UsSpinnerService($rootScope) {\n\t        this.$rootScope = $rootScope;\n\t    }\n\t    UsSpinnerService.prototype.spin = function (key) {\n\t        this.$rootScope.$broadcast('us-spinner:spin', key);\n\t    };\n\t    UsSpinnerService.prototype.stop = function (key) {\n\t        this.$rootScope.$broadcast('us-spinner:stop', key);\n\t    };\n\t    return UsSpinnerService;\n\t}());\n\tUsSpinnerService.$inject = ['$rootScope'];\n\texports.UsSpinnerService = UsSpinnerService;\n\n\n/***/ },\n/* 4 */\n/*!******************************************!*\\\n  !*** ./src/Directives/AngularSpinner.ts ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(/*! angular */ 5);\n\texports.usSpinner = function (SpinJSSpinner, usSpinnerConfig) {\n\t    return {\n\t        scope: true,\n\t        link: function (scope, element, attr) {\n\t            scope.spinner = null;\n\t            scope.key = angular.isDefined(attr.spinnerKey) ? attr.spinnerKey : false;\n\t            scope.startActive = (attr.spinnerStartActive) ?\n\t                scope.$eval(attr.spinnerStartActive) : scope.key ?\n\t                false : true;\n\t            function stopSpinner() {\n\t                if (scope.spinner) {\n\t                    scope.spinner.stop();\n\t                }\n\t            }\n\t            scope.spin = function () {\n\t                if (scope.spinner) {\n\t                    scope.spinner.spin(element[0]);\n\t                }\n\t            };\n\t            scope.stop = function () {\n\t                scope.startActive = false;\n\t                stopSpinner();\n\t            };\n\t            scope.$watch(attr.usSpinner, function (options) {\n\t                stopSpinner();\n\t                // order of precedence: element options, theme, defaults.\n\t                options = angular.extend({}, usSpinnerConfig.config, attr.spinnerTheme ? usSpinnerConfig.themes[attr.spinnerTheme] : undefined, options);\n\t                scope.spinner = new SpinJSSpinner(options);\n\t                if ((!scope.key || scope.startActive) && !attr.spinnerOn) {\n\t                    scope.spinner.spin(element[0]);\n\t                }\n\t            }, true);\n\t            if (attr.spinnerOn) {\n\t                scope.$watch(attr.spinnerOn, function (spin) {\n\t                    if (spin) {\n\t                        scope.spin();\n\t                    }\n\t                    else {\n\t                        scope.stop();\n\t                    }\n\t                });\n\t            }\n\t            scope.$on('us-spinner:spin', function (event, key) {\n\t                if (!key || key === scope.key) {\n\t                    scope.spin();\n\t                }\n\t            });\n\t            scope.$on('us-spinner:stop', function (event, key) {\n\t                if (!key || key === scope.key) {\n\t                    scope.stop();\n\t                }\n\t            });\n\t            scope.$on('$destroy', function () {\n\t                scope.stop();\n\t                scope.spinner = null;\n\t            });\n\t        }\n\t    };\n\t};\n\texports.usSpinner.$inject = ['SpinJSSpinner', 'usSpinnerConfig'];\n\n\n/***/ },\n/* 5 */\n/*!**************************!*\\\n  !*** external \"angular\" ***!\n  \\**************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/*!***************************************!*\\\n  !*** ./src/Config/UsSpinnerConfig.ts ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * UsSpinnerConfig\n\t */\n\tvar UsSpinnerConfig = (function () {\n\t    function UsSpinnerConfig() {\n\t        this.config = {};\n\t        this.themes = {};\n\t    }\n\t    UsSpinnerConfig.prototype.setDefaults = function (config) {\n\t        this.config = config || this.config;\n\t    };\n\t    UsSpinnerConfig.prototype.setTheme = function (name, config) {\n\t        this.themes[name] = config;\n\t    };\n\t    UsSpinnerConfig.prototype.$get = function () {\n\t        var _a = this, config = _a.config, themes = _a.themes;\n\t        return {\n\t            config: config,\n\t            themes: themes\n\t        };\n\t    };\n\t    return UsSpinnerConfig;\n\t}());\n\texports.UsSpinnerConfig = UsSpinnerConfig;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=angular-spinner.js.map\n\n/***/ }),\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n/*\n * DEPENDENCIES\n */\n\nvar convert = __webpack_require__(76);\n\n\n/*\n * CONSTRUCTOR\n */\n\nfunction Colr () {\n  if ((this instanceof Colr) === false) { return new Colr(); }\n  this._ = {};\n}\n\n\n/*\n * STATIC METHODS\n */\n\nColr.fromHex = function (hex) {\n  return (new Colr()).fromHex(hex);\n};\n\nColr.fromGrayscale = function (value) {\n  return (new Colr()).fromGrayscale(value);\n};\n\nColr.fromRgb = function (r, g, b) {\n  return (new Colr()).fromRgb(r, g, b);\n};\n\nColr.fromRgbArray = function (arr) {\n  return (new Colr()).fromRgb(arr[0], arr[1], arr[2]);\n};\n\nColr.fromRgbObject = function (obj) {\n  return (new Colr()).fromRgb(obj.r, obj.g, obj.b);\n};\nColr.fromHsl = function (h, s, l) {\n  return (new Colr()).fromHsl(h, s, l);\n};\n\nColr.fromHslArray = function (arr) {\n  return (new Colr()).fromHsl(arr[0], arr[1], arr[2]);\n};\n\nColr.fromHslObject = function (obj) {\n  return (new Colr()).fromHsl(obj.h, obj.s, obj.l);\n};\n\nColr.fromHsv = function (h, s, v) {\n  return (new Colr()).fromHsv(h, s, v);\n};\n\nColr.fromHsvArray = function (arr) {\n  return (new Colr()).fromHsv(arr[0], arr[1], arr[2]);\n};\n\nColr.fromHsvObject = function (obj) {\n  return (new Colr()).fromHsv(obj.h, obj.s, obj.v);\n};\n\n\n/*\n * IMPORTERS\n */\n\n// HEX\n\nColr.prototype.fromHex = function (input) {\n  var value = convert.hex.rgb(input);\n  this._ = { rgb: value };\n  return this;\n};\n\n// GRAYSCALE\n\nColr.prototype.fromGrayscale = function (input) {\n  input = clampByte(input);\n  var value = convert.grayscale.rgb(input);\n  this._ = { rgb: value };\n  return this;\n};\n\n// RGB\n\nColr.prototype.fromRgb = function (r, g, b) {\n  if (typeof(r) !== 'number' || typeof(g) !== 'number' || typeof(b) !== 'number') {\n    throw new Error('Arguments must be numbers');\n  }\n  var value = clampRgb(r, g, b);\n  this._ = { rgb: value };\n  return this;\n};\n\nColr.prototype.fromRgbArray = function (arr) {\n  return this.fromRgb(arr[0], arr[1], arr[2]);\n};\n\nColr.prototype.fromRgbObject = function (obj) {\n  return this.fromRgb(obj.r, obj.g, obj.b);\n};\n\n// HSL\n\nColr.prototype.fromHsl = function (h, s, l) {\n  if (typeof(h) !== 'number' || typeof(s) !== 'number' || typeof(l) !== 'number') {\n    throw new Error('Arguments must be numbers');\n  }\n  this._ = { hsl: clampHsx(h, s, l) };\n  return this;\n};\n\nColr.prototype.fromHslArray = function (arr) {\n  return this.fromHsl(arr[0], arr[1], arr[2]);\n};\n\nColr.prototype.fromHslObject = function (obj) {\n  return this.fromHsl(obj.h, obj.s, obj.l);\n};\n\n// HSV\n\nColr.prototype.fromHsv = function (h, s, v) {\n  if (typeof(h) !== 'number' || typeof(s) !== 'number' || typeof(v) !== 'number') {\n    throw new Error('Arguments must be numbers');\n  }\n  this._ = { hsv: clampHsx(h, s, v) };\n  return this;\n};\n\nColr.prototype.fromHsvArray = function (arr) {\n  return this.fromHsv(arr[0], arr[1], arr[2]);\n};\n\nColr.prototype.fromHsvObject = function (obj) {\n  return this.fromHsv(obj.h, obj.s, obj.v);\n};\n\n\n/*\n * EXPORTERS\n */\n\n// HEX\n\nColr.prototype.toHex = function () {\n  var cached = this._.hex;\n  if (cached !== undefined) { return cached; }\n\n  var input;\n  var cachedFrom = this._.rgb;\n\n  if (cachedFrom !== undefined) { input = cachedFrom; }\n  else { input = this.toRawRgbArray(); }\n\n  input[0] = Math.round(input[0]);\n  input[1] = Math.round(input[1]);\n  input[2] = Math.round(input[2]);\n\n  var value = convert.rgb.hex(input);\n  this._.hex = value;\n\n  return value;\n};\n\n// GRAYSCALE\n\nColr.prototype.toGrayscale = function () {\n  var cached = this._.grayscale;\n  if (cached !== undefined) { return cached; }\n\n  var input;\n  var cachedFrom = this._.rgb;\n\n  if (cachedFrom !== undefined) { input = cachedFrom; }\n  else { input = this.toRawRgbArray(); }\n\n  var value = convert.rgb.grayscale(input);\n  this._.grayscale = value;\n  return value;\n};\n\n// RGB\n\nColr.prototype.toRawRgbArray = function () {\n  var cached = this._.rgb;\n  if (cached !== undefined) { return cached; }\n\n  var value;\n\n  if ((value = this._.hsv) !== undefined) {\n    value = convert.hsv.rgb(value);\n  } else if ((value = this._.hsl) !== undefined) {\n    value = convert.hsl.rgb(value);\n  } else {\n    throw new Error('No data to convert');\n  }\n\n  this._.rgb = value;\n  return value;\n};\n\nColr.prototype.toRawRgbObject = function () {\n  var arr = this.toRawRgbArray();\n  return { r: arr[0], g: arr[1], b: arr[2] };\n};\n\nColr.prototype.toRgbArray = function () {\n  var arr = this.toRawRgbArray();\n  return [ Math.round(arr[0]), Math.round(arr[1]), Math.round(arr[2]) ];\n};\n\nColr.prototype.toRgbObject = function () {\n  var arr = this.toRgbArray();\n  return { r: arr[0], g: arr[1], b: arr[2] };\n};\n\n// HSL\n\nColr.prototype.toRawHslArray = function () {\n  var cached = this._.hsl;\n  if (cached !== undefined) { return cached; }\n\n  var value;\n\n  if ((value = this._.hsv) !== undefined) {\n    value = convert.hsv.hsl(value);\n  } else if ((value = this._.rgb) !== undefined) {\n    value = convert.rgb.hsl(value);\n  } else {\n    throw new Error('No data to convert');\n  }\n\n  this._.hsl = value;\n  return value;\n};\n\nColr.prototype.toRawHslObject = function () {\n  var arr = this.toRawHslArray();\n  return { h: arr[0], s: arr[1], l: arr[2] };\n};\n\nColr.prototype.toHslArray = function () {\n  var arr = this.toRawHslArray();\n  return [ Math.round(arr[0]), Math.round(arr[1]), Math.round(arr[2]) ];\n};\n\nColr.prototype.toHslObject = function () {\n  var arr = this.toHslArray();\n  return { h: arr[0], s: arr[1], l: arr[2] };\n};\n\n// HSV\n\nColr.prototype.toRawHsvArray = function () {\n  var cached = this._.hsv;\n  if (cached !== undefined) { return cached; }\n\n  var value;\n\n  if ((value = this._.hsl) !== undefined) {\n    value = convert.hsl.hsv(value);\n  } else if ((value = this._.rgb) !== undefined) {\n    value = convert.rgb.hsv(value);\n  } else {\n    throw new Error('No data to convert');\n  }\n\n  this._.hsv = value;\n  return value;\n};\n\nColr.prototype.toRawHsvObject = function () {\n  var arr = this.toRawHsvArray();\n  return { h: arr[0], s: arr[1], v: arr[2] };\n};\n\nColr.prototype.toHsvArray = function () {\n  var arr = this.toRawHsvArray();\n  return [ Math.round(arr[0]), Math.round(arr[1]), Math.round(arr[2]) ];\n};\n\nColr.prototype.toHsvObject = function () {\n  var arr = this.toHsvArray();\n  return { h: arr[0], s: arr[1], v: arr[2] };\n};\n\n\n/*\n * MODIFIERS\n */\n\nColr.prototype.lighten = function (amount) {\n  var hsl = this.toRawHslArray();\n  hsl[2] = clampPercentage(hsl[2] + amount);\n  this._ = { hsl: hsl };\n  return this;\n};\n\nColr.prototype.darken = function (amount) {\n  var hsl = this.toRawHslArray();\n  hsl[2] = clampPercentage(hsl[2] - amount);\n  this._ = { hsl: hsl };\n  return this;\n};\n\n/*\n * MISC\n */\n\nColr.prototype.clone = function () {\n  var colr = new Colr();\n  colr._.hex = this._.hex;\n  colr._.grayscale = this._.grayscale;\n\n  if (this._.rgb !== undefined) {\n    colr._.rgb = this._.rgb.slice(0);\n  }\n  if (this._.hsv !== undefined) {\n    colr._.hsv = this._.hsv.slice(0);\n  }\n  if (this._.hsl !== undefined) {\n    colr._.hsl = this._.hsl.slice(0);\n  }\n\n  return colr;\n};\n\n/*\n * UTILS\n */\n\nfunction clampPercentage (val) {\n  return Math.max(Math.min(val, 100), 0);\n}\n\nfunction clampByte (byte) {\n  return Math.max(Math.min(byte, 255), 0);\n}\n\nfunction clampRgb (r, g, b) {\n  return [\n    Math.max(Math.min(r, 255), 0),\n    Math.max(Math.min(g, 255), 0),\n    Math.max(Math.min(b, 255), 0),\n  ];\n}\n\nfunction clampHsx (h, s, x) {\n  return [\n    Math.max(Math.min(h, 360), 0),\n    Math.max(Math.min(s, 100), 0),\n    Math.max(Math.min(x, 100), 0),\n  ];\n}\n\n\nmodule.exports = Colr;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  grayscale: {\n    rgb: grayscale2rgb\n  },\n  hex: {\n    rgb: hex2rgb,\n  },\n  rgb: {\n    hsl: rgb2hsl,\n    hsv: rgb2hsv,\n    hex: rgb2hex,\n    grayscale: rgb2grayscale\n  },\n  hsl: {\n    rgb: hsl2rgb,\n    hsv: hsl2hsv,\n  },\n  hsv: {\n    rgb: hsv2rgb,\n    hsl: hsv2hsl,\n  },\n};\n\n// convert a charcode to a hex val\nfunction hexVal (c) {\n  return (\n    c < 58 ? c - 48 : // 0 - 9\n    c < 71 ? c - 55 : // A - F\n    c - 87            // a - f\n  );\n}\n\nfunction hex2rgb (hex) {\n  var i = hex[0] === '#' ? 1 : 0;\n  var len = hex.length;\n\n  if (len - i < 3) {\n    throw new Error('hex input must be at least three chars long');\n  }\n\n  var r, g, b;\n\n  var h1 = hexVal(hex.charCodeAt(0+i));\n  var h2 = hexVal(hex.charCodeAt(1+i));\n  var h3 = hexVal(hex.charCodeAt(2+i));\n\n  if (len - i >= 6) {\n    r = (h1 << 4) + h2;\n    g = (h3 << 4) + hexVal(hex.charCodeAt(3+i));\n    b = (hexVal(hex.charCodeAt(4+i)) << 4) + hexVal(hex.charCodeAt(5+i));\n  } else {\n    r = (h1 << 4) + h1;\n    g = (h2 << 4) + h2;\n    b = (h3 << 4) + h3;\n  }\n\n  if (r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255) {\n    throw new Error('hex input is invalid');\n  }\n\n  return [r, g, b];\n}\n\n\nfunction rgb2hex (rgb) {\n  return '#' + (\n    '000000' +\n    ((rgb[0] << 16) +\n     (rgb[1] << 8) +\n      rgb[2]\n    ).toString(16)\n  ).slice(-6);\n}\n\nfunction rgb2hsl (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h, s, l;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0];\n  var g = rgb[1];\n  var b = rgb[2];\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h, s, v;\n\n  if (max === 0) {\n    s = 0;\n  } else {\n    s = delta / max * 100;\n  }\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  v = (max / 255) * 100;\n\n  return [h, s, v];\n}\n\nfunction hsl2rgb (hsl) {\n  var h = hsl[0] / 360;\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n\n  var r, g, b;\n\n  if (s === 0) { // monochrome\n    r = g = b = l;\n\n  } else {\n    var q = l < 0.5 ? l * (s + 1) : l + s - l * s;\n    var p = 2 * l - q;\n    var t;\n\n    // red\n    t = h + 1/3;\n    if      (t < 0) { t += 1; }\n    else if (t > 1) { t -= 1; }\n    if      (t < 1/6)  { r = p + (q - p) * t * 6; }\n    else if (t < 1/2 ) { r = q; }\n    else if (t < 2/3 ) { r = p + (q - p) * (2/3 - t) * 6; }\n    else               { r = p; }\n\n    // green\n    t = h;\n    if      (t < 0) { t += 1; }\n    else if (t > 1) { t -= 1; }\n    if      (t < 1/6)  { g = p + (q - p) * t * 6; }\n    else if (t < 1/2 ) { g = q; }\n    else if (t < 2/3 ) { g = p + (q - p) * (2/3 - t) * 6; }\n    else               { g = p; }\n\n    // blue\n    t = h - 1/3;\n    if      (t < 0) { t += 1; }\n    else if (t > 1) { t -= 1; }\n    if      (t < 1/6)  { b = p + (q - p) * t * 6; }\n    else if (t < 1/2 ) { b = q; }\n    else if (t < 2/3 ) { b = p + (q - p) * (2/3 - t) * 6; }\n    else               { b = p; }\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0];\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var sv, v;\n\n  if (s === 0) {\n    return [h, 0, l * 100];\n  }\n\n  if (l === 0) {\n    return [h, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60;\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n\n  var hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h);\n  var p = 255 * v * (1 - s);\n  var q = 255 * v * (1 - (s * f));\n  var t = 255 * v * (1 - (s * (1 - f)));\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0];\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var sl, l;\n\n  if (s === 0) {\n    return [h, 0, v * 100];\n  }\n\n  if (v === 0) {\n    return [h, 0, 0];\n  }\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction grayscale2rgb (value) {\n  return [value, value, value];\n}\n\nfunction rgb2grayscale (rgb) {\n  return (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n}\n\n\n/***/ }),\n/* 77 */,\n/* 78 */,\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(80), __esModule: true };\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(14);\n__webpack_require__(91);\nmodule.exports = __webpack_require__(2).Array.from;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(27);\nvar defined = __webpack_require__(28);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(10);\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create = __webpack_require__(40);\nvar descriptor = __webpack_require__(25);\nvar setToStringTag = __webpack_require__(34);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(10)(IteratorPrototype, __webpack_require__(3)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(6);\nvar anObject = __webpack_require__(13);\nvar getKeys = __webpack_require__(30);\n\nmodule.exports = __webpack_require__(9) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(18);\nvar toIObject = __webpack_require__(21);\nvar arrayIndexOf = __webpack_require__(87)(false);\nvar IE_PROTO = __webpack_require__(32)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(21);\nvar toLength = __webpack_require__(22);\nvar toAbsoluteIndex = __webpack_require__(88);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(27);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(8).document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(18);\nvar toObject = __webpack_require__(23);\nvar IE_PROTO = __webpack_require__(32)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ctx = __webpack_require__(12);\nvar $export = __webpack_require__(5);\nvar toObject = __webpack_require__(23);\nvar call = __webpack_require__(44);\nvar isArrayIter = __webpack_require__(45);\nvar toLength = __webpack_require__(22);\nvar createProperty = __webpack_require__(92);\nvar getIterFn = __webpack_require__(35);\n\n$export($export.S + $export.F * !__webpack_require__(93)(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $defineProperty = __webpack_require__(6);\nvar createDesc = __webpack_require__(25);\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ITERATOR = __webpack_require__(3)('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(95), __esModule: true };\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(14);\n__webpack_require__(19);\nmodule.exports = __webpack_require__(98).f('iterator');\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(97);\nvar step = __webpack_require__(46);\nvar Iterators = __webpack_require__(15);\nvar toIObject = __webpack_require__(21);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(29)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\nmodule.exports = function () { /* empty */ };\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.f = __webpack_require__(3);\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(47);\n__webpack_require__(14);\n__webpack_require__(19);\n__webpack_require__(100);\n__webpack_require__(106);\n__webpack_require__(108);\n__webpack_require__(109);\nmodule.exports = __webpack_require__(2).Map;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar strong = __webpack_require__(48);\nvar validate = __webpack_require__(37);\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = __webpack_require__(52)(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global = __webpack_require__(8);\nvar core = __webpack_require__(2);\nvar dP = __webpack_require__(6);\nvar DESCRIPTORS = __webpack_require__(9);\nvar SPECIES = __webpack_require__(3)('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = __webpack_require__(12);\nvar IObject = __webpack_require__(41);\nvar toObject = __webpack_require__(23);\nvar toLength = __webpack_require__(22);\nvar asc = __webpack_require__(103);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = __webpack_require__(104);\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\nvar isArray = __webpack_require__(105);\nvar SPECIES = __webpack_require__(3)('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(31);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = __webpack_require__(5);\n\n$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(53)('Map') });\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar forOf = __webpack_require__(24);\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\n__webpack_require__(54)('Map');\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\n__webpack_require__(55)('Map');\n\n\n/***/ }),\n/* 110 */,\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(112), __esModule: true };\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(19);\n__webpack_require__(14);\nmodule.exports = __webpack_require__(113);\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(36);\nvar ITERATOR = __webpack_require__(3)('iterator');\nvar Iterators = __webpack_require__(15);\nmodule.exports = __webpack_require__(2).isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(19);\n__webpack_require__(14);\nmodule.exports = __webpack_require__(115);\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(13);\nvar get = __webpack_require__(35);\nmodule.exports = __webpack_require__(2).getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/***/ }),\n/* 116 */,\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(118), __esModule: true };\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(119);\nmodule.exports = __webpack_require__(2).Object.keys;\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(23);\nvar $keys = __webpack_require__(30);\n\n__webpack_require__(120)('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(5);\nvar core = __webpack_require__(2);\nvar fails = __webpack_require__(17);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n/***/ }),\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory(__webpack_require__(20), __webpack_require__(127)) :\n\ttypeof define === 'function' && define.amd ? define(['angular', 'chartist'], factory) :\n\t(global['angular-chartist'] = factory(global.angular,global.Chartist));\n}(this, (function (angular,Chartist) { 'use strict';\n\nangular = angular && angular.hasOwnProperty('default') ? angular['default'] : angular;\nChartist = Chartist && Chartist.hasOwnProperty('default') ? Chartist['default'] : Chartist;\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar angularChartistModule = angular.module('angular-chartist', []);\n\nvar AngularChartistCtrl = function () {\n  AngularChartistCtrl.$inject = [\"$scope\", \"$element\"];\n  function AngularChartistCtrl($scope, $element) {\n    'ngInject';\n\n    var _this = this;\n\n    classCallCheck(this, AngularChartistCtrl);\n    this.data = $scope.data;\n    this.chartType = $scope.chartType;\n\n    this.events = $scope.events() || {};\n    this.options = $scope.chartOptions() || null;\n    this.responsiveOptions = $scope.responsiveOptions() || null;\n\n    this.element = $element[0];\n\n    this.renderChart();\n\n    $scope.$watch(function () {\n      return {\n        data: $scope.data,\n        chartType: $scope.chartType,\n        chartOptions: $scope.chartOptions() || null,\n        responsiveOptions: $scope.responsiveOptions() || null,\n        events: $scope.events() || {}\n      };\n    }, this.update.bind(this), true);\n\n    $scope.$on('$destroy', function () {\n      if (_this.chart) {\n        _this.chart.detach();\n      }\n    });\n  }\n\n  createClass(AngularChartistCtrl, [{\n    key: 'bindEvents',\n    value: function bindEvents() {\n      var _this2 = this;\n\n      Object.keys(this.events).forEach(function (eventName) {\n        _this2.chart.on(eventName, _this2.events[eventName]);\n      });\n    }\n  }, {\n    key: 'unbindEvents',\n    value: function unbindEvents(events) {\n      var _this3 = this;\n\n      Object.keys(events).forEach(function (eventName) {\n        _this3.chart.off(eventName, events[eventName]);\n      });\n    }\n  }, {\n    key: 'renderChart',\n    value: function renderChart() {\n      // ensure that the chart does not get created without data\n      if (this.data) {\n        this.chart = Chartist[this.chartType](this.element, this.data, this.options, this.responsiveOptions);\n\n        this.bindEvents();\n\n        return this.chart;\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update(newConfig, oldConfig) {\n      // Update controller with new configuration\n      this.chartType = newConfig.chartType;\n      this.data = newConfig.data;\n      this.options = newConfig.chartOptions;\n      this.responsiveOptions = newConfig.responsiveOptions;\n      this.events = newConfig.events;\n\n      // If chart type changed we need to recreate whole chart, otherwise we can update\n      if (!this.chart || newConfig.chartType !== oldConfig.chartType) {\n        this.renderChart();\n      } else {\n        if (!angular.equals(newConfig.events, oldConfig.events)) {\n          this.unbindEvents(oldConfig.events);\n          this.bindEvents();\n        }\n        this.chart.update(this.data, this.options);\n      }\n    }\n  }]);\n  return AngularChartistCtrl;\n}();\n\nangularChartistModule.controller('AngularChartistCtrl', AngularChartistCtrl).directive('chartist', function () {\n  'ngInject';\n\n  return {\n    restrict: 'EA',\n    scope: {\n      // mandatory\n      data: '=chartistData',\n      chartType: '@chartistChartType',\n      // optional\n      events: '&chartistEvents',\n      chartOptions: '&chartistChartOptions',\n      responsiveOptions: '&chartistResponsiveOptions'\n    },\n    controller: 'AngularChartistCtrl'\n  };\n});\n\nvar angularChartist = angularChartistModule.name;\n\nreturn angularChartist;\n\n})));\n//# sourceMappingURL=angular-chartist.js.map\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return (root['Chartist'] = factory());\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.0\n * Copyright © 2017 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.0'\n};\n\n(function (window, document, Chartist) {\n  'use strict';\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(window, document, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(window, document, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(window, document, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(window, document, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(window, document, Chartist));\n;/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(window, document, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(window, document, Chartist));\n\nreturn Chartist;\n\n}));\n\n\n/***/ }),\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(132), __esModule: true };\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(47);\n__webpack_require__(14);\n__webpack_require__(19);\n__webpack_require__(133);\n__webpack_require__(134);\n__webpack_require__(135);\n__webpack_require__(136);\nmodule.exports = __webpack_require__(2).Set;\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar strong = __webpack_require__(48);\nvar validate = __webpack_require__(37);\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = __webpack_require__(52)(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = __webpack_require__(5);\n\n$export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(53)('Set') });\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\n__webpack_require__(54)('Set');\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\n__webpack_require__(55)('Set');\n\n\n/***/ }),\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar require;var require;(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.XRegExp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*!\r\n * XRegExp.build 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2012-2017 MIT License\r\n * Inspired by Lea Verou's RegExp.create <lea.verou.me>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    var REGEX_DATA = 'xregexp';\r\n    var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\r\n    var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g', {\r\n        conjunction: 'or'\r\n    });\r\n\r\n    /**\r\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\r\n     *\r\n     * @private\r\n     * @param {String} pattern Pattern to process.\r\n     * @returns {String} Pattern with edge anchors removed.\r\n     */\r\n    function deanchor(pattern) {\r\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\r\n        // built/generated by XRegExp sometimes include them\r\n        var leadingAnchor = /^(?:\\(\\?:\\))*\\^/;\r\n        var trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\r\n\r\n        if (\r\n            leadingAnchor.test(pattern) &&\r\n            trailingAnchor.test(pattern) &&\r\n            // Ensure that the trailing `$` isn't escaped\r\n            trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))\r\n        ) {\r\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\r\n        }\r\n\r\n        return pattern;\r\n    }\r\n\r\n    /**\r\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\r\n     *\r\n     * @private\r\n     * @param {String|RegExp} value Value to convert.\r\n     * @param {Boolean} [addFlagX] Whether to apply the `x` flag in cases when `value` is not\r\n     *   already a regex generated by XRegExp\r\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\r\n     */\r\n    function asXRegExp(value, addFlagX) {\r\n        var flags = addFlagX ? 'x' : '';\r\n        return XRegExp.isRegExp(value) ?\r\n            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\r\n                // Don't recompile, to preserve capture names\r\n                value :\r\n                // Recompile as XRegExp\r\n                XRegExp(value.source, flags)\r\n            ) :\r\n            // Compile string as XRegExp\r\n            XRegExp(value, flags);\r\n    }\r\n\r\n    /**\r\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\r\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\r\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\r\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\r\n     *   character classes.\r\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\r\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\r\n     * @param {String} [flags] Any combination of XRegExp flags.\r\n     * @returns {RegExp} Regex with interpolated subpatterns.\r\n     * @example\r\n     *\r\n     * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\r\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\r\n     *     h12: /1[0-2]|0?[1-9]/,\r\n     *     h24: /2[0-3]|[01][0-9]/\r\n     *   }, 'x'),\r\n     *   minutes: /^[0-5][0-9]$/\r\n     * });\r\n     * time.test('10:59'); // -> true\r\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\r\n     */\r\n    XRegExp.build = function(pattern, subs, flags) {\r\n        flags = flags || '';\r\n        // Used with `asXRegExp` calls for `pattern` and subpatterns in `subs`, to work around how\r\n        // some browsers convert `RegExp('\\n')` to a regex that contains the literal characters `\\`\r\n        // and `n`. See more details at <https://github.com/slevithan/xregexp/pull/163>.\r\n        var addFlagX = flags.indexOf('x') > -1;\r\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern);\r\n        // Add flags within a leading mode modifier to the overall pattern's flags\r\n        if (inlineFlags) {\r\n            flags = XRegExp._clipDuplicates(flags + inlineFlags[1]);\r\n        }\r\n\r\n        var data = {};\r\n        for (var p in subs) {\r\n            if (subs.hasOwnProperty(p)) {\r\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\r\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\r\n                // subpatterns provided as native regexes, it dies on octals and adds the property\r\n                // used to hold extended regex instance data, for simplicity.\r\n                var sub = asXRegExp(subs[p], addFlagX);\r\n                data[p] = {\r\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\r\n                    // really need to keep your anchors, double them (i.e., `^^...$$`).\r\n                    pattern: deanchor(sub.source),\r\n                    names: sub[REGEX_DATA].captureNames || []\r\n                };\r\n            }\r\n        }\r\n\r\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\r\n        // helps keep this simple. Named captures will be put back.\r\n        var patternAsRegex = asXRegExp(pattern, addFlagX);\r\n\r\n        // 'Caps' is short for 'captures'\r\n        var numCaps = 0;\r\n        var numPriorCaps;\r\n        var numOuterCaps = 0;\r\n        var outerCapsMap = [0];\r\n        var outerCapNames = patternAsRegex[REGEX_DATA].captureNames || [];\r\n        var output = patternAsRegex.source.replace(parts, function($0, $1, $2, $3, $4) {\r\n            var subName = $1 || $2;\r\n            var capName;\r\n            var intro;\r\n            var localCapIndex;\r\n            // Named subpattern\r\n            if (subName) {\r\n                if (!data.hasOwnProperty(subName)) {\r\n                    throw new ReferenceError('Undefined property ' + $0);\r\n                }\r\n                // Named subpattern was wrapped in a capturing group\r\n                if ($1) {\r\n                    capName = outerCapNames[numOuterCaps];\r\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\r\n                    // as the capture name\r\n                    intro = '(?<' + (capName || subName) + '>';\r\n                } else {\r\n                    intro = '(?:';\r\n                }\r\n                numPriorCaps = numCaps;\r\n                return intro + data[subName].pattern.replace(subParts, function(match, paren, backref) {\r\n                    // Capturing group\r\n                    if (paren) {\r\n                        capName = data[subName].names[numCaps - numPriorCaps];\r\n                        ++numCaps;\r\n                        // If the current capture has a name, preserve the name\r\n                        if (capName) {\r\n                            return '(?<' + capName + '>';\r\n                        }\r\n                    // Backreference\r\n                    } else if (backref) {\r\n                        localCapIndex = +backref - 1;\r\n                        // Rewrite the backreference\r\n                        return data[subName].names[localCapIndex] ?\r\n                            // Need to preserve the backreference name in case using flag `n`\r\n                            '\\\\k<' + data[subName].names[localCapIndex] + '>' :\r\n                            '\\\\' + (+backref + numPriorCaps);\r\n                    }\r\n                    return match;\r\n                }) + ')';\r\n            }\r\n            // Capturing group\r\n            if ($3) {\r\n                capName = outerCapNames[numOuterCaps];\r\n                outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                // If the current capture has a name, preserve the name\r\n                if (capName) {\r\n                    return '(?<' + capName + '>';\r\n                }\r\n            // Backreference\r\n            } else if ($4) {\r\n                localCapIndex = +$4 - 1;\r\n                // Rewrite the backreference\r\n                return outerCapNames[localCapIndex] ?\r\n                    // Need to preserve the backreference name in case using flag `n`\r\n                    '\\\\k<' + outerCapNames[localCapIndex] + '>' :\r\n                    '\\\\' + outerCapsMap[+$4];\r\n            }\r\n            return $0;\r\n        });\r\n\r\n        return XRegExp(output, flags);\r\n    };\r\n\r\n};\r\n\n},{}],2:[function(require,module,exports){\n/*!\r\n * XRegExp.matchRecursive 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2009-2017 MIT License\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns a match detail object composed of the provided values.\r\n     *\r\n     * @private\r\n     */\r\n    function row(name, value, start, end) {\r\n        return {\r\n            name: name,\r\n            value: value,\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\r\n     * objects with detailed match parts and position data. An error is thrown if delimiters are\r\n     * unbalanced within the data.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {String} str String to search.\r\n     * @param {String} left Left delimiter as an XRegExp pattern.\r\n     * @param {String} right Right delimiter as an XRegExp pattern.\r\n     * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.\r\n     * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\r\n     * @returns {Array} Array of matches, or an empty array.\r\n     * @example\r\n     *\r\n     * // Basic usage\r\n     * var str = '(t((e))s)t()(ing)';\r\n     * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\r\n     * // -> ['t((e))s', '', 'ing']\r\n     *\r\n     * // Extended information mode with valueNames\r\n     * str = 'Here is <div> <div>an</div></div> example';\r\n     * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\r\n     *   valueNames: ['between', 'left', 'match', 'right']\r\n     * });\r\n     * // -> [\r\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\r\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\r\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\r\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\r\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\r\n     * // ]\r\n     *\r\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\r\n     * str = '...{1}.\\\\{{function(x,y){return {y:x}}}';\r\n     * XRegExp.matchRecursive(str, '{', '}', 'g', {\r\n     *   valueNames: ['literal', null, 'value', null],\r\n     *   escapeChar: '\\\\'\r\n     * });\r\n     * // -> [\r\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\r\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\r\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\r\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\r\n     * // ]\r\n     *\r\n     * // Sticky mode via flag y\r\n     * str = '<1><<<2>>><3>4<5>';\r\n     * XRegExp.matchRecursive(str, '<', '>', 'gy');\r\n     * // -> ['1', '<<2>>', '3']\r\n     */\r\n    XRegExp.matchRecursive = function(str, left, right, flags, options) {\r\n        flags = flags || '';\r\n        options = options || {};\r\n        var global = flags.indexOf('g') > -1;\r\n        var sticky = flags.indexOf('y') > -1;\r\n        // Flag `y` is controlled internally\r\n        var basicFlags = flags.replace(/y/g, '');\r\n        var escapeChar = options.escapeChar;\r\n        var vN = options.valueNames;\r\n        var output = [];\r\n        var openTokens = 0;\r\n        var delimStart = 0;\r\n        var delimEnd = 0;\r\n        var lastOuterEnd = 0;\r\n        var outerStart;\r\n        var innerStart;\r\n        var leftMatch;\r\n        var rightMatch;\r\n        var esc;\r\n        left = XRegExp(left, basicFlags);\r\n        right = XRegExp(right, basicFlags);\r\n\r\n        if (escapeChar) {\r\n            if (escapeChar.length > 1) {\r\n                throw new Error('Cannot use more than one escape character');\r\n            }\r\n            escapeChar = XRegExp.escape(escapeChar);\r\n            // Example of concatenated `esc` regex:\r\n            // `escapeChar`: '%'\r\n            // `left`: '<'\r\n            // `right`: '>'\r\n            // Regex is: /(?:%[\\S\\s]|(?:(?!<|>)[^%])+)+/\r\n            esc = new RegExp(\r\n                '(?:' + escapeChar + '[\\\\S\\\\s]|(?:(?!' +\r\n                    // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`.\r\n                    // Intentionally not passing `basicFlags` to `XRegExp.union` since any syntax\r\n                    // transformation resulting from those flags was already applied to `left` and\r\n                    // `right` when they were passed through the XRegExp constructor above.\r\n                    XRegExp.union([left, right], '', {conjunction: 'or'}).source +\r\n                    ')[^' + escapeChar + '])+)+',\r\n                // Flags `gy` not needed here\r\n                flags.replace(/[^imu]+/g, '')\r\n            );\r\n        }\r\n\r\n        while (true) {\r\n            // If using an escape character, advance to the delimiter's next starting position,\r\n            // skipping any escaped characters in between\r\n            if (escapeChar) {\r\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\r\n            }\r\n            leftMatch = XRegExp.exec(str, left, delimEnd);\r\n            rightMatch = XRegExp.exec(str, right, delimEnd);\r\n            // Keep the leftmost match only\r\n            if (leftMatch && rightMatch) {\r\n                if (leftMatch.index <= rightMatch.index) {\r\n                    rightMatch = null;\r\n                } else {\r\n                    leftMatch = null;\r\n                }\r\n            }\r\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n            // LM | RM | OT | Result\r\n            // 1  | 0  | 1  | loop\r\n            // 1  | 0  | 0  | loop\r\n            // 0  | 1  | 1  | loop\r\n            // 0  | 1  | 0  | throw\r\n            // 0  | 0  | 1  | throw\r\n            // 0  | 0  | 0  | break\r\n            // The paths above don't include the sticky mode special case. The loop ends after the\r\n            // first completed match if not `global`.\r\n            if (leftMatch || rightMatch) {\r\n                delimStart = (leftMatch || rightMatch).index;\r\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n            } else if (!openTokens) {\r\n                break;\r\n            }\r\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n                break;\r\n            }\r\n            if (leftMatch) {\r\n                if (!openTokens) {\r\n                    outerStart = delimStart;\r\n                    innerStart = delimEnd;\r\n                }\r\n                ++openTokens;\r\n            } else if (rightMatch && openTokens) {\r\n                if (!--openTokens) {\r\n                    if (vN) {\r\n                        if (vN[0] && outerStart > lastOuterEnd) {\r\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\r\n                        }\r\n                        if (vN[1]) {\r\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\r\n                        }\r\n                        if (vN[2]) {\r\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\r\n                        }\r\n                        if (vN[3]) {\r\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\r\n                        }\r\n                    } else {\r\n                        output.push(str.slice(innerStart, delimStart));\r\n                    }\r\n                    lastOuterEnd = delimEnd;\r\n                    if (!global) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('Unbalanced delimiter found in string');\r\n            }\r\n            // If the delimiter matched an empty string, avoid an infinite loop\r\n            if (delimStart === delimEnd) {\r\n                ++delimEnd;\r\n            }\r\n        }\r\n\r\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\r\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n};\r\n\n},{}],3:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Base 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2008-2017 MIT License\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds base support for Unicode matching:\r\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\r\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\r\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\r\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\r\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\r\n     *\r\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\r\n     * available to provide data for Unicode categories, scripts, blocks, and properties.\r\n     *\r\n     * @requires XRegExp\r\n     */\r\n\r\n    // ==--------------------------==\r\n    // Private stuff\r\n    // ==--------------------------==\r\n\r\n    // Storage for Unicode data\r\n    var unicode = {};\r\n\r\n    // Reuse utils\r\n    var dec = XRegExp._dec;\r\n    var hex = XRegExp._hex;\r\n    var pad4 = XRegExp._pad4;\r\n\r\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\r\n    function normalize(name) {\r\n        return name.replace(/[- _]+/g, '').toLowerCase();\r\n    }\r\n\r\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\r\n    function charCode(chr) {\r\n        var esc = /^\\\\[xu](.+)/.exec(chr);\r\n        return esc ?\r\n            dec(esc[1]) :\r\n            chr.charCodeAt(chr.charAt(0) === '\\\\' ? 1 : 0);\r\n    }\r\n\r\n    // Inverts a list of ordered BMP characters and ranges\r\n    function invertBmp(range) {\r\n        var output = '';\r\n        var lastEnd = -1;\r\n\r\n        XRegExp.forEach(\r\n            range,\r\n            /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/,\r\n            function(m) {\r\n                var start = charCode(m[1]);\r\n                if (start > (lastEnd + 1)) {\r\n                    output += '\\\\u' + pad4(hex(lastEnd + 1));\r\n                    if (start > (lastEnd + 2)) {\r\n                        output += '-\\\\u' + pad4(hex(start - 1));\r\n                    }\r\n                }\r\n                lastEnd = charCode(m[2] || m[1]);\r\n            }\r\n        );\r\n\r\n        if (lastEnd < 0xFFFF) {\r\n            output += '\\\\u' + pad4(hex(lastEnd + 1));\r\n            if (lastEnd < 0xFFFE) {\r\n                output += '-\\\\uFFFF';\r\n            }\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // Generates an inverted BMP range on first use\r\n    function cacheInvertedBmp(slug) {\r\n        var prop = 'b!';\r\n        return (\r\n            unicode[slug][prop] ||\r\n            (unicode[slug][prop] = invertBmp(unicode[slug].bmp))\r\n        );\r\n    }\r\n\r\n    // Combines and optionally negates BMP and astral data\r\n    function buildAstral(slug, isNegated) {\r\n        var item = unicode[slug];\r\n        var combined = '';\r\n\r\n        if (item.bmp && !item.isBmpLast) {\r\n            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');\r\n        }\r\n        if (item.astral) {\r\n            combined += item.astral;\r\n        }\r\n        if (item.isBmpLast && item.bmp) {\r\n            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';\r\n        }\r\n\r\n        // Astral Unicode tokens always match a code point, never a code unit\r\n        return isNegated ?\r\n            '(?:(?!' + combined + ')(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))' :\r\n            '(?:' + combined + ')';\r\n    }\r\n\r\n    // Builds a complete astral pattern on first use\r\n    function cacheAstral(slug, isNegated) {\r\n        var prop = isNegated ? 'a!' : 'a=';\r\n        return (\r\n            unicode[slug][prop] ||\r\n            (unicode[slug][prop] = buildAstral(slug, isNegated))\r\n        );\r\n    }\r\n\r\n    // ==--------------------------==\r\n    // Core functionality\r\n    // ==--------------------------==\r\n\r\n    /*\r\n     * Add astral mode (flag A) and Unicode token syntax: `\\p{..}`, `\\P{..}`, `\\p{^..}`, `\\pC`.\r\n     */\r\n    XRegExp.addToken(\r\n        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\r\n        /\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))/,\r\n        function(match, scope, flags) {\r\n            var ERR_DOUBLE_NEG = 'Invalid double negation ';\r\n            var ERR_UNKNOWN_NAME = 'Unknown Unicode token ';\r\n            var ERR_UNKNOWN_REF = 'Unicode token missing data ';\r\n            var ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ';\r\n            var ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes';\r\n            // Negated via \\P{..} or \\p{^..}\r\n            var isNegated = match[1] === 'P' || !!match[2];\r\n            // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\r\n            var isAstralMode = flags.indexOf('A') > -1;\r\n            // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\\p{}`\r\n            var slug = normalize(match[4] || match[3]);\r\n            // Token data object\r\n            var item = unicode[slug];\r\n\r\n            if (match[1] === 'P' && match[2]) {\r\n                throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);\r\n            }\r\n            if (!unicode.hasOwnProperty(slug)) {\r\n                throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);\r\n            }\r\n\r\n            // Switch to the negated form of the referenced Unicode token\r\n            if (item.inverseOf) {\r\n                slug = normalize(item.inverseOf);\r\n                if (!unicode.hasOwnProperty(slug)) {\r\n                    throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);\r\n                }\r\n                item = unicode[slug];\r\n                isNegated = !isNegated;\r\n            }\r\n\r\n            if (!(item.bmp || isAstralMode)) {\r\n                throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);\r\n            }\r\n            if (isAstralMode) {\r\n                if (scope === 'class') {\r\n                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\r\n                }\r\n\r\n                return cacheAstral(slug, isNegated);\r\n            }\r\n\r\n            return scope === 'class' ?\r\n                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :\r\n                (isNegated ? '[^' : '[') + item.bmp + ']';\r\n        },\r\n        {\r\n            scope: 'all',\r\n            optionalFlags: 'A',\r\n            leadChar: '\\\\'\r\n        }\r\n    );\r\n\r\n    /**\r\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {Array} data Objects with named character ranges. Each object may have properties\r\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\r\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\r\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\r\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\r\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\r\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\r\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\r\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\r\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\r\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\r\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\r\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\r\n     *   defined as the exact inverse of another token.\r\n     * @example\r\n     *\r\n     * // Basic use\r\n     * XRegExp.addUnicodeData([{\r\n     *   name: 'XDigit',\r\n     *   alias: 'Hexadecimal',\r\n     *   bmp: '0-9A-Fa-f'\r\n     * }]);\r\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\r\n     */\r\n    XRegExp.addUnicodeData = function(data) {\r\n        var ERR_NO_NAME = 'Unicode token requires name';\r\n        var ERR_NO_DATA = 'Unicode token has no character data ';\r\n        var item;\r\n\r\n        for (var i = 0; i < data.length; ++i) {\r\n            item = data[i];\r\n            if (!item.name) {\r\n                throw new Error(ERR_NO_NAME);\r\n            }\r\n            if (!(item.inverseOf || item.bmp || item.astral)) {\r\n                throw new Error(ERR_NO_DATA + item.name);\r\n            }\r\n            unicode[normalize(item.name)] = item;\r\n            if (item.alias) {\r\n                unicode[normalize(item.alias)] = item;\r\n            }\r\n        }\r\n\r\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\r\n        // flags might now produce different results\r\n        XRegExp.cache.flush('patterns');\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Return a reference to the internal Unicode definition structure for the given Unicode\r\n     * Property if the given name is a legal Unicode Property for use in XRegExp `\\p` or `\\P` regex\r\n     * constructs.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {String} name Name by which the Unicode Property may be recognized (case-insensitive),\r\n     *   e.g. `'N'` or `'Number'`. The given name is matched against all registered Unicode\r\n     *   Properties and Property Aliases.\r\n     * @returns {Object} Reference to definition structure when the name matches a Unicode Property.\r\n     *\r\n     * @note\r\n     * For more info on Unicode Properties, see also http://unicode.org/reports/tr18/#Categories.\r\n     *\r\n     * @note\r\n     * This method is *not* part of the officially documented API and may change or be removed in\r\n     * the future. It is meant for userland code that wishes to reuse the (large) internal Unicode\r\n     * structures set up by XRegExp.\r\n     */\r\n    XRegExp._getUnicodeProperty = function(name) {\r\n        var slug = normalize(name);\r\n        return unicode[slug];\r\n    };\r\n\r\n};\r\n\n},{}],4:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Blocks 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2010-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g.,\r\n     * `\\p{InBasicLatin}`. Token names are case insensitive, and any spaces, hyphens, and\r\n     * underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');\r\n    }\r\n\r\n    XRegExp.addUnicodeData([\r\n        {\r\n            name: 'InAdlam',\r\n            astral: '\\uD83A[\\uDD00-\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'InAegean_Numbers',\r\n            astral: '\\uD800[\\uDD00-\\uDD3F]'\r\n        },\r\n        {\r\n            name: 'InAhom',\r\n            astral: '\\uD805[\\uDF00-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'InAlchemical_Symbols',\r\n            astral: '\\uD83D[\\uDF00-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InAlphabetic_Presentation_Forms',\r\n            bmp: '\\uFB00-\\uFB4F'\r\n        },\r\n        {\r\n            name: 'InAnatolian_Hieroglyphs',\r\n            astral: '\\uD811[\\uDC00-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InAncient_Greek_Musical_Notation',\r\n            astral: '\\uD834[\\uDE00-\\uDE4F]'\r\n        },\r\n        {\r\n            name: 'InAncient_Greek_Numbers',\r\n            astral: '\\uD800[\\uDD40-\\uDD8F]'\r\n        },\r\n        {\r\n            name: 'InAncient_Symbols',\r\n            astral: '\\uD800[\\uDD90-\\uDDCF]'\r\n        },\r\n        {\r\n            name: 'InArabic',\r\n            bmp: '\\u0600-\\u06FF'\r\n        },\r\n        {\r\n            name: 'InArabic_Extended_A',\r\n            bmp: '\\u08A0-\\u08FF'\r\n        },\r\n        {\r\n            name: 'InArabic_Mathematical_Alphabetic_Symbols',\r\n            astral: '\\uD83B[\\uDE00-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InArabic_Presentation_Forms_A',\r\n            bmp: '\\uFB50-\\uFDFF'\r\n        },\r\n        {\r\n            name: 'InArabic_Presentation_Forms_B',\r\n            bmp: '\\uFE70-\\uFEFF'\r\n        },\r\n        {\r\n            name: 'InArabic_Supplement',\r\n            bmp: '\\u0750-\\u077F'\r\n        },\r\n        {\r\n            name: 'InArmenian',\r\n            bmp: '\\u0530-\\u058F'\r\n        },\r\n        {\r\n            name: 'InArrows',\r\n            bmp: '\\u2190-\\u21FF'\r\n        },\r\n        {\r\n            name: 'InAvestan',\r\n            astral: '\\uD802[\\uDF00-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'InBalinese',\r\n            bmp: '\\u1B00-\\u1B7F'\r\n        },\r\n        {\r\n            name: 'InBamum',\r\n            bmp: '\\uA6A0-\\uA6FF'\r\n        },\r\n        {\r\n            name: 'InBamum_Supplement',\r\n            astral: '\\uD81A[\\uDC00-\\uDE3F]'\r\n        },\r\n        {\r\n            name: 'InBasic_Latin',\r\n            bmp: '\\0-\\x7F'\r\n        },\r\n        {\r\n            name: 'InBassa_Vah',\r\n            astral: '\\uD81A[\\uDED0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InBatak',\r\n            bmp: '\\u1BC0-\\u1BFF'\r\n        },\r\n        {\r\n            name: 'InBengali',\r\n            bmp: '\\u0980-\\u09FF'\r\n        },\r\n        {\r\n            name: 'InBhaiksuki',\r\n            astral: '\\uD807[\\uDC00-\\uDC6F]'\r\n        },\r\n        {\r\n            name: 'InBlock_Elements',\r\n            bmp: '\\u2580-\\u259F'\r\n        },\r\n        {\r\n            name: 'InBopomofo',\r\n            bmp: '\\u3100-\\u312F'\r\n        },\r\n        {\r\n            name: 'InBopomofo_Extended',\r\n            bmp: '\\u31A0-\\u31BF'\r\n        },\r\n        {\r\n            name: 'InBox_Drawing',\r\n            bmp: '\\u2500-\\u257F'\r\n        },\r\n        {\r\n            name: 'InBrahmi',\r\n            astral: '\\uD804[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InBraille_Patterns',\r\n            bmp: '\\u2800-\\u28FF'\r\n        },\r\n        {\r\n            name: 'InBuginese',\r\n            bmp: '\\u1A00-\\u1A1F'\r\n        },\r\n        {\r\n            name: 'InBuhid',\r\n            bmp: '\\u1740-\\u175F'\r\n        },\r\n        {\r\n            name: 'InByzantine_Musical_Symbols',\r\n            astral: '\\uD834[\\uDC00-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility',\r\n            bmp: '\\u3300-\\u33FF'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility_Forms',\r\n            bmp: '\\uFE30-\\uFE4F'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility_Ideographs',\r\n            bmp: '\\uF900-\\uFAFF'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility_Ideographs_Supplement',\r\n            astral: '\\uD87E[\\uDC00-\\uDE1F]'\r\n        },\r\n        {\r\n            name: 'InCJK_Radicals_Supplement',\r\n            bmp: '\\u2E80-\\u2EFF'\r\n        },\r\n        {\r\n            name: 'InCJK_Strokes',\r\n            bmp: '\\u31C0-\\u31EF'\r\n        },\r\n        {\r\n            name: 'InCJK_Symbols_and_Punctuation',\r\n            bmp: '\\u3000-\\u303F'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs',\r\n            bmp: '\\u4E00-\\u9FFF'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_A',\r\n            bmp: '\\u3400-\\u4DBF'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_B',\r\n            astral: '[\\uD840-\\uD868][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF]'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_C',\r\n            astral: '\\uD869[\\uDF00-\\uDFFF]|[\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_D',\r\n            astral: '\\uD86D[\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1F]'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_E',\r\n            astral: '\\uD86E[\\uDC20-\\uDFFF]|[\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'InCarian',\r\n            astral: '\\uD800[\\uDEA0-\\uDEDF]'\r\n        },\r\n        {\r\n            name: 'InCaucasian_Albanian',\r\n            astral: '\\uD801[\\uDD30-\\uDD6F]'\r\n        },\r\n        {\r\n            name: 'InChakma',\r\n            astral: '\\uD804[\\uDD00-\\uDD4F]'\r\n        },\r\n        {\r\n            name: 'InCham',\r\n            bmp: '\\uAA00-\\uAA5F'\r\n        },\r\n        {\r\n            name: 'InCherokee',\r\n            bmp: '\\u13A0-\\u13FF'\r\n        },\r\n        {\r\n            name: 'InCherokee_Supplement',\r\n            bmp: '\\uAB70-\\uABBF'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks',\r\n            bmp: '\\u0300-\\u036F'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks_Extended',\r\n            bmp: '\\u1AB0-\\u1AFF'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks_Supplement',\r\n            bmp: '\\u1DC0-\\u1DFF'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks_for_Symbols',\r\n            bmp: '\\u20D0-\\u20FF'\r\n        },\r\n        {\r\n            name: 'InCombining_Half_Marks',\r\n            bmp: '\\uFE20-\\uFE2F'\r\n        },\r\n        {\r\n            name: 'InCommon_Indic_Number_Forms',\r\n            bmp: '\\uA830-\\uA83F'\r\n        },\r\n        {\r\n            name: 'InControl_Pictures',\r\n            bmp: '\\u2400-\\u243F'\r\n        },\r\n        {\r\n            name: 'InCoptic',\r\n            bmp: '\\u2C80-\\u2CFF'\r\n        },\r\n        {\r\n            name: 'InCoptic_Epact_Numbers',\r\n            astral: '\\uD800[\\uDEE0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InCounting_Rod_Numerals',\r\n            astral: '\\uD834[\\uDF60-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InCuneiform',\r\n            astral: '\\uD808[\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InCuneiform_Numbers_and_Punctuation',\r\n            astral: '\\uD809[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InCurrency_Symbols',\r\n            bmp: '\\u20A0-\\u20CF'\r\n        },\r\n        {\r\n            name: 'InCypriot_Syllabary',\r\n            astral: '\\uD802[\\uDC00-\\uDC3F]'\r\n        },\r\n        {\r\n            name: 'InCyrillic',\r\n            bmp: '\\u0400-\\u04FF'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Extended_A',\r\n            bmp: '\\u2DE0-\\u2DFF'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Extended_B',\r\n            bmp: '\\uA640-\\uA69F'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Extended_C',\r\n            bmp: '\\u1C80-\\u1C8F'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Supplement',\r\n            bmp: '\\u0500-\\u052F'\r\n        },\r\n        {\r\n            name: 'InDeseret',\r\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\r\n        },\r\n        {\r\n            name: 'InDevanagari',\r\n            bmp: '\\u0900-\\u097F'\r\n        },\r\n        {\r\n            name: 'InDevanagari_Extended',\r\n            bmp: '\\uA8E0-\\uA8FF'\r\n        },\r\n        {\r\n            name: 'InDingbats',\r\n            bmp: '\\u2700-\\u27BF'\r\n        },\r\n        {\r\n            name: 'InDomino_Tiles',\r\n            astral: '\\uD83C[\\uDC30-\\uDC9F]'\r\n        },\r\n        {\r\n            name: 'InDuployan',\r\n            astral: '\\uD82F[\\uDC00-\\uDC9F]'\r\n        },\r\n        {\r\n            name: 'InEarly_Dynastic_Cuneiform',\r\n            astral: '\\uD809[\\uDC80-\\uDD4F]'\r\n        },\r\n        {\r\n            name: 'InEgyptian_Hieroglyphs',\r\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F]'\r\n        },\r\n        {\r\n            name: 'InElbasan',\r\n            astral: '\\uD801[\\uDD00-\\uDD2F]'\r\n        },\r\n        {\r\n            name: 'InEmoticons',\r\n            astral: '\\uD83D[\\uDE00-\\uDE4F]'\r\n        },\r\n        {\r\n            name: 'InEnclosed_Alphanumeric_Supplement',\r\n            astral: '\\uD83C[\\uDD00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InEnclosed_Alphanumerics',\r\n            bmp: '\\u2460-\\u24FF'\r\n        },\r\n        {\r\n            name: 'InEnclosed_CJK_Letters_and_Months',\r\n            bmp: '\\u3200-\\u32FF'\r\n        },\r\n        {\r\n            name: 'InEnclosed_Ideographic_Supplement',\r\n            astral: '\\uD83C[\\uDE00-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InEthiopic',\r\n            bmp: '\\u1200-\\u137F'\r\n        },\r\n        {\r\n            name: 'InEthiopic_Extended',\r\n            bmp: '\\u2D80-\\u2DDF'\r\n        },\r\n        {\r\n            name: 'InEthiopic_Extended_A',\r\n            bmp: '\\uAB00-\\uAB2F'\r\n        },\r\n        {\r\n            name: 'InEthiopic_Supplement',\r\n            bmp: '\\u1380-\\u139F'\r\n        },\r\n        {\r\n            name: 'InGeneral_Punctuation',\r\n            bmp: '\\u2000-\\u206F'\r\n        },\r\n        {\r\n            name: 'InGeometric_Shapes',\r\n            bmp: '\\u25A0-\\u25FF'\r\n        },\r\n        {\r\n            name: 'InGeometric_Shapes_Extended',\r\n            astral: '\\uD83D[\\uDF80-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InGeorgian',\r\n            bmp: '\\u10A0-\\u10FF'\r\n        },\r\n        {\r\n            name: 'InGeorgian_Supplement',\r\n            bmp: '\\u2D00-\\u2D2F'\r\n        },\r\n        {\r\n            name: 'InGlagolitic',\r\n            bmp: '\\u2C00-\\u2C5F'\r\n        },\r\n        {\r\n            name: 'InGlagolitic_Supplement',\r\n            astral: '\\uD838[\\uDC00-\\uDC2F]'\r\n        },\r\n        {\r\n            name: 'InGothic',\r\n            astral: '\\uD800[\\uDF30-\\uDF4F]'\r\n        },\r\n        {\r\n            name: 'InGrantha',\r\n            astral: '\\uD804[\\uDF00-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InGreek_Extended',\r\n            bmp: '\\u1F00-\\u1FFF'\r\n        },\r\n        {\r\n            name: 'InGreek_and_Coptic',\r\n            bmp: '\\u0370-\\u03FF'\r\n        },\r\n        {\r\n            name: 'InGujarati',\r\n            bmp: '\\u0A80-\\u0AFF'\r\n        },\r\n        {\r\n            name: 'InGurmukhi',\r\n            bmp: '\\u0A00-\\u0A7F'\r\n        },\r\n        {\r\n            name: 'InHalfwidth_and_Fullwidth_Forms',\r\n            bmp: '\\uFF00-\\uFFEF'\r\n        },\r\n        {\r\n            name: 'InHangul_Compatibility_Jamo',\r\n            bmp: '\\u3130-\\u318F'\r\n        },\r\n        {\r\n            name: 'InHangul_Jamo',\r\n            bmp: '\\u1100-\\u11FF'\r\n        },\r\n        {\r\n            name: 'InHangul_Jamo_Extended_A',\r\n            bmp: '\\uA960-\\uA97F'\r\n        },\r\n        {\r\n            name: 'InHangul_Jamo_Extended_B',\r\n            bmp: '\\uD7B0-\\uD7FF'\r\n        },\r\n        {\r\n            name: 'InHangul_Syllables',\r\n            bmp: '\\uAC00-\\uD7AF'\r\n        },\r\n        {\r\n            name: 'InHanunoo',\r\n            bmp: '\\u1720-\\u173F'\r\n        },\r\n        {\r\n            name: 'InHatran',\r\n            astral: '\\uD802[\\uDCE0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InHebrew',\r\n            bmp: '\\u0590-\\u05FF'\r\n        },\r\n        {\r\n            name: 'InHigh_Private_Use_Surrogates',\r\n            bmp: '\\uDB80-\\uDBFF'\r\n        },\r\n        {\r\n            name: 'InHigh_Surrogates',\r\n            bmp: '\\uD800-\\uDB7F'\r\n        },\r\n        {\r\n            name: 'InHiragana',\r\n            bmp: '\\u3040-\\u309F'\r\n        },\r\n        {\r\n            name: 'InIPA_Extensions',\r\n            bmp: '\\u0250-\\u02AF'\r\n        },\r\n        {\r\n            name: 'InIdeographic_Description_Characters',\r\n            bmp: '\\u2FF0-\\u2FFF'\r\n        },\r\n        {\r\n            name: 'InIdeographic_Symbols_and_Punctuation',\r\n            astral: '\\uD81B[\\uDFE0-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InImperial_Aramaic',\r\n            astral: '\\uD802[\\uDC40-\\uDC5F]'\r\n        },\r\n        {\r\n            name: 'InInscriptional_Pahlavi',\r\n            astral: '\\uD802[\\uDF60-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InInscriptional_Parthian',\r\n            astral: '\\uD802[\\uDF40-\\uDF5F]'\r\n        },\r\n        {\r\n            name: 'InJavanese',\r\n            bmp: '\\uA980-\\uA9DF'\r\n        },\r\n        {\r\n            name: 'InKaithi',\r\n            astral: '\\uD804[\\uDC80-\\uDCCF]'\r\n        },\r\n        {\r\n            name: 'InKana_Supplement',\r\n            astral: '\\uD82C[\\uDC00-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InKanbun',\r\n            bmp: '\\u3190-\\u319F'\r\n        },\r\n        {\r\n            name: 'InKangxi_Radicals',\r\n            bmp: '\\u2F00-\\u2FDF'\r\n        },\r\n        {\r\n            name: 'InKannada',\r\n            bmp: '\\u0C80-\\u0CFF'\r\n        },\r\n        {\r\n            name: 'InKatakana',\r\n            bmp: '\\u30A0-\\u30FF'\r\n        },\r\n        {\r\n            name: 'InKatakana_Phonetic_Extensions',\r\n            bmp: '\\u31F0-\\u31FF'\r\n        },\r\n        {\r\n            name: 'InKayah_Li',\r\n            bmp: '\\uA900-\\uA92F'\r\n        },\r\n        {\r\n            name: 'InKharoshthi',\r\n            astral: '\\uD802[\\uDE00-\\uDE5F]'\r\n        },\r\n        {\r\n            name: 'InKhmer',\r\n            bmp: '\\u1780-\\u17FF'\r\n        },\r\n        {\r\n            name: 'InKhmer_Symbols',\r\n            bmp: '\\u19E0-\\u19FF'\r\n        },\r\n        {\r\n            name: 'InKhojki',\r\n            astral: '\\uD804[\\uDE00-\\uDE4F]'\r\n        },\r\n        {\r\n            name: 'InKhudawadi',\r\n            astral: '\\uD804[\\uDEB0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InLao',\r\n            bmp: '\\u0E80-\\u0EFF'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_Additional',\r\n            bmp: '\\u1E00-\\u1EFF'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_A',\r\n            bmp: '\\u0100-\\u017F'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_B',\r\n            bmp: '\\u0180-\\u024F'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_C',\r\n            bmp: '\\u2C60-\\u2C7F'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_D',\r\n            bmp: '\\uA720-\\uA7FF'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_E',\r\n            bmp: '\\uAB30-\\uAB6F'\r\n        },\r\n        {\r\n            name: 'InLatin_1_Supplement',\r\n            bmp: '\\x80-\\xFF'\r\n        },\r\n        {\r\n            name: 'InLepcha',\r\n            bmp: '\\u1C00-\\u1C4F'\r\n        },\r\n        {\r\n            name: 'InLetterlike_Symbols',\r\n            bmp: '\\u2100-\\u214F'\r\n        },\r\n        {\r\n            name: 'InLimbu',\r\n            bmp: '\\u1900-\\u194F'\r\n        },\r\n        {\r\n            name: 'InLinear_A',\r\n            astral: '\\uD801[\\uDE00-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InLinear_B_Ideograms',\r\n            astral: '\\uD800[\\uDC80-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InLinear_B_Syllabary',\r\n            astral: '\\uD800[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InLisu',\r\n            bmp: '\\uA4D0-\\uA4FF'\r\n        },\r\n        {\r\n            name: 'InLow_Surrogates',\r\n            bmp: '\\uDC00-\\uDFFF'\r\n        },\r\n        {\r\n            name: 'InLycian',\r\n            astral: '\\uD800[\\uDE80-\\uDE9F]'\r\n        },\r\n        {\r\n            name: 'InLydian',\r\n            astral: '\\uD802[\\uDD20-\\uDD3F]'\r\n        },\r\n        {\r\n            name: 'InMahajani',\r\n            astral: '\\uD804[\\uDD50-\\uDD7F]'\r\n        },\r\n        {\r\n            name: 'InMahjong_Tiles',\r\n            astral: '\\uD83C[\\uDC00-\\uDC2F]'\r\n        },\r\n        {\r\n            name: 'InMalayalam',\r\n            bmp: '\\u0D00-\\u0D7F'\r\n        },\r\n        {\r\n            name: 'InMandaic',\r\n            bmp: '\\u0840-\\u085F'\r\n        },\r\n        {\r\n            name: 'InManichaean',\r\n            astral: '\\uD802[\\uDEC0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InMarchen',\r\n            astral: '\\uD807[\\uDC70-\\uDCBF]'\r\n        },\r\n        {\r\n            name: 'InMathematical_Alphanumeric_Symbols',\r\n            astral: '\\uD835[\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InMathematical_Operators',\r\n            bmp: '\\u2200-\\u22FF'\r\n        },\r\n        {\r\n            name: 'InMeetei_Mayek',\r\n            bmp: '\\uABC0-\\uABFF'\r\n        },\r\n        {\r\n            name: 'InMeetei_Mayek_Extensions',\r\n            bmp: '\\uAAE0-\\uAAFF'\r\n        },\r\n        {\r\n            name: 'InMende_Kikakui',\r\n            astral: '\\uD83A[\\uDC00-\\uDCDF]'\r\n        },\r\n        {\r\n            name: 'InMeroitic_Cursive',\r\n            astral: '\\uD802[\\uDDA0-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InMeroitic_Hieroglyphs',\r\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\r\n        },\r\n        {\r\n            name: 'InMiao',\r\n            astral: '\\uD81B[\\uDF00-\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Mathematical_Symbols_A',\r\n            bmp: '\\u27C0-\\u27EF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Mathematical_Symbols_B',\r\n            bmp: '\\u2980-\\u29FF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Symbols',\r\n            bmp: '\\u2600-\\u26FF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Symbols_and_Arrows',\r\n            bmp: '\\u2B00-\\u2BFF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Symbols_and_Pictographs',\r\n            astral: '\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Technical',\r\n            bmp: '\\u2300-\\u23FF'\r\n        },\r\n        {\r\n            name: 'InModi',\r\n            astral: '\\uD805[\\uDE00-\\uDE5F]'\r\n        },\r\n        {\r\n            name: 'InModifier_Tone_Letters',\r\n            bmp: '\\uA700-\\uA71F'\r\n        },\r\n        {\r\n            name: 'InMongolian',\r\n            bmp: '\\u1800-\\u18AF'\r\n        },\r\n        {\r\n            name: 'InMongolian_Supplement',\r\n            astral: '\\uD805[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InMro',\r\n            astral: '\\uD81A[\\uDE40-\\uDE6F]'\r\n        },\r\n        {\r\n            name: 'InMultani',\r\n            astral: '\\uD804[\\uDE80-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'InMusical_Symbols',\r\n            astral: '\\uD834[\\uDD00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InMyanmar',\r\n            bmp: '\\u1000-\\u109F'\r\n        },\r\n        {\r\n            name: 'InMyanmar_Extended_A',\r\n            bmp: '\\uAA60-\\uAA7F'\r\n        },\r\n        {\r\n            name: 'InMyanmar_Extended_B',\r\n            bmp: '\\uA9E0-\\uA9FF'\r\n        },\r\n        {\r\n            name: 'InNKo',\r\n            bmp: '\\u07C0-\\u07FF'\r\n        },\r\n        {\r\n            name: 'InNabataean',\r\n            astral: '\\uD802[\\uDC80-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'InNew_Tai_Lue',\r\n            bmp: '\\u1980-\\u19DF'\r\n        },\r\n        {\r\n            name: 'InNewa',\r\n            astral: '\\uD805[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InNumber_Forms',\r\n            bmp: '\\u2150-\\u218F'\r\n        },\r\n        {\r\n            name: 'InOgham',\r\n            bmp: '\\u1680-\\u169F'\r\n        },\r\n        {\r\n            name: 'InOl_Chiki',\r\n            bmp: '\\u1C50-\\u1C7F'\r\n        },\r\n        {\r\n            name: 'InOld_Hungarian',\r\n            astral: '\\uD803[\\uDC80-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InOld_Italic',\r\n            astral: '\\uD800[\\uDF00-\\uDF2F]'\r\n        },\r\n        {\r\n            name: 'InOld_North_Arabian',\r\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\r\n        },\r\n        {\r\n            name: 'InOld_Permic',\r\n            astral: '\\uD800[\\uDF50-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InOld_Persian',\r\n            astral: '\\uD800[\\uDFA0-\\uDFDF]'\r\n        },\r\n        {\r\n            name: 'InOld_South_Arabian',\r\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InOld_Turkic',\r\n            astral: '\\uD803[\\uDC00-\\uDC4F]'\r\n        },\r\n        {\r\n            name: 'InOptical_Character_Recognition',\r\n            bmp: '\\u2440-\\u245F'\r\n        },\r\n        {\r\n            name: 'InOriya',\r\n            bmp: '\\u0B00-\\u0B7F'\r\n        },\r\n        {\r\n            name: 'InOrnamental_Dingbats',\r\n            astral: '\\uD83D[\\uDE50-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InOsage',\r\n            astral: '\\uD801[\\uDCB0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InOsmanya',\r\n            astral: '\\uD801[\\uDC80-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'InPahawh_Hmong',\r\n            astral: '\\uD81A[\\uDF00-\\uDF8F]'\r\n        },\r\n        {\r\n            name: 'InPalmyrene',\r\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InPau_Cin_Hau',\r\n            astral: '\\uD806[\\uDEC0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InPhags_pa',\r\n            bmp: '\\uA840-\\uA87F'\r\n        },\r\n        {\r\n            name: 'InPhaistos_Disc',\r\n            astral: '\\uD800[\\uDDD0-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InPhoenician',\r\n            astral: '\\uD802[\\uDD00-\\uDD1F]'\r\n        },\r\n        {\r\n            name: 'InPhonetic_Extensions',\r\n            bmp: '\\u1D00-\\u1D7F'\r\n        },\r\n        {\r\n            name: 'InPhonetic_Extensions_Supplement',\r\n            bmp: '\\u1D80-\\u1DBF'\r\n        },\r\n        {\r\n            name: 'InPlaying_Cards',\r\n            astral: '\\uD83C[\\uDCA0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InPrivate_Use_Area',\r\n            bmp: '\\uE000-\\uF8FF'\r\n        },\r\n        {\r\n            name: 'InPsalter_Pahlavi',\r\n            astral: '\\uD802[\\uDF80-\\uDFAF]'\r\n        },\r\n        {\r\n            name: 'InRejang',\r\n            bmp: '\\uA930-\\uA95F'\r\n        },\r\n        {\r\n            name: 'InRumi_Numeral_Symbols',\r\n            astral: '\\uD803[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InRunic',\r\n            bmp: '\\u16A0-\\u16FF'\r\n        },\r\n        {\r\n            name: 'InSamaritan',\r\n            bmp: '\\u0800-\\u083F'\r\n        },\r\n        {\r\n            name: 'InSaurashtra',\r\n            bmp: '\\uA880-\\uA8DF'\r\n        },\r\n        {\r\n            name: 'InSharada',\r\n            astral: '\\uD804[\\uDD80-\\uDDDF]'\r\n        },\r\n        {\r\n            name: 'InShavian',\r\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InShorthand_Format_Controls',\r\n            astral: '\\uD82F[\\uDCA0-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'InSiddham',\r\n            astral: '\\uD805[\\uDD80-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InSinhala',\r\n            bmp: '\\u0D80-\\u0DFF'\r\n        },\r\n        {\r\n            name: 'InSinhala_Archaic_Numbers',\r\n            astral: '\\uD804[\\uDDE0-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InSmall_Form_Variants',\r\n            bmp: '\\uFE50-\\uFE6F'\r\n        },\r\n        {\r\n            name: 'InSora_Sompeng',\r\n            astral: '\\uD804[\\uDCD0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InSpacing_Modifier_Letters',\r\n            bmp: '\\u02B0-\\u02FF'\r\n        },\r\n        {\r\n            name: 'InSpecials',\r\n            bmp: '\\uFFF0-\\uFFFF'\r\n        },\r\n        {\r\n            name: 'InSundanese',\r\n            bmp: '\\u1B80-\\u1BBF'\r\n        },\r\n        {\r\n            name: 'InSundanese_Supplement',\r\n            bmp: '\\u1CC0-\\u1CCF'\r\n        },\r\n        {\r\n            name: 'InSuperscripts_and_Subscripts',\r\n            bmp: '\\u2070-\\u209F'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Arrows_A',\r\n            bmp: '\\u27F0-\\u27FF'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Arrows_B',\r\n            bmp: '\\u2900-\\u297F'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Arrows_C',\r\n            astral: '\\uD83E[\\uDC00-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Mathematical_Operators',\r\n            bmp: '\\u2A00-\\u2AFF'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Punctuation',\r\n            bmp: '\\u2E00-\\u2E7F'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Symbols_and_Pictographs',\r\n            astral: '\\uD83E[\\uDD00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InSupplementary_Private_Use_Area_A',\r\n            astral: '[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InSupplementary_Private_Use_Area_B',\r\n            astral: '[\\uDBC0-\\uDBFF][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InSutton_SignWriting',\r\n            astral: '\\uD836[\\uDC00-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'InSyloti_Nagri',\r\n            bmp: '\\uA800-\\uA82F'\r\n        },\r\n        {\r\n            name: 'InSyriac',\r\n            bmp: '\\u0700-\\u074F'\r\n        },\r\n        {\r\n            name: 'InTagalog',\r\n            bmp: '\\u1700-\\u171F'\r\n        },\r\n        {\r\n            name: 'InTagbanwa',\r\n            bmp: '\\u1760-\\u177F'\r\n        },\r\n        {\r\n            name: 'InTags',\r\n            astral: '\\uDB40[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InTai_Le',\r\n            bmp: '\\u1950-\\u197F'\r\n        },\r\n        {\r\n            name: 'InTai_Tham',\r\n            bmp: '\\u1A20-\\u1AAF'\r\n        },\r\n        {\r\n            name: 'InTai_Viet',\r\n            bmp: '\\uAA80-\\uAADF'\r\n        },\r\n        {\r\n            name: 'InTai_Xuan_Jing_Symbols',\r\n            astral: '\\uD834[\\uDF00-\\uDF5F]'\r\n        },\r\n        {\r\n            name: 'InTakri',\r\n            astral: '\\uD805[\\uDE80-\\uDECF]'\r\n        },\r\n        {\r\n            name: 'InTamil',\r\n            bmp: '\\u0B80-\\u0BFF'\r\n        },\r\n        {\r\n            name: 'InTangut',\r\n            astral: '[\\uD81C-\\uD821][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InTangut_Components',\r\n            astral: '\\uD822[\\uDC00-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InTelugu',\r\n            bmp: '\\u0C00-\\u0C7F'\r\n        },\r\n        {\r\n            name: 'InThaana',\r\n            bmp: '\\u0780-\\u07BF'\r\n        },\r\n        {\r\n            name: 'InThai',\r\n            bmp: '\\u0E00-\\u0E7F'\r\n        },\r\n        {\r\n            name: 'InTibetan',\r\n            bmp: '\\u0F00-\\u0FFF'\r\n        },\r\n        {\r\n            name: 'InTifinagh',\r\n            bmp: '\\u2D30-\\u2D7F'\r\n        },\r\n        {\r\n            name: 'InTirhuta',\r\n            astral: '\\uD805[\\uDC80-\\uDCDF]'\r\n        },\r\n        {\r\n            name: 'InTransport_and_Map_Symbols',\r\n            astral: '\\uD83D[\\uDE80-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InUgaritic',\r\n            astral: '\\uD800[\\uDF80-\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'InUnified_Canadian_Aboriginal_Syllabics',\r\n            bmp: '\\u1400-\\u167F'\r\n        },\r\n        {\r\n            name: 'InUnified_Canadian_Aboriginal_Syllabics_Extended',\r\n            bmp: '\\u18B0-\\u18FF'\r\n        },\r\n        {\r\n            name: 'InVai',\r\n            bmp: '\\uA500-\\uA63F'\r\n        },\r\n        {\r\n            name: 'InVariation_Selectors',\r\n            bmp: '\\uFE00-\\uFE0F'\r\n        },\r\n        {\r\n            name: 'InVariation_Selectors_Supplement',\r\n            astral: '\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'InVedic_Extensions',\r\n            bmp: '\\u1CD0-\\u1CFF'\r\n        },\r\n        {\r\n            name: 'InVertical_Forms',\r\n            bmp: '\\uFE10-\\uFE1F'\r\n        },\r\n        {\r\n            name: 'InWarang_Citi',\r\n            astral: '\\uD806[\\uDCA0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InYi_Radicals',\r\n            bmp: '\\uA490-\\uA4CF'\r\n        },\r\n        {\r\n            name: 'InYi_Syllables',\r\n            bmp: '\\uA000-\\uA48F'\r\n        },\r\n        {\r\n            name: 'InYijing_Hexagram_Symbols',\r\n            bmp: '\\u4DC0-\\u4DFF'\r\n        }\r\n    ]);\r\n\r\n};\r\n\n},{}],5:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Categories 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2010-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\r\n     * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\r\n     * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\r\n    }\r\n\r\n    XRegExp.addUnicodeData([\r\n        {\r\n            name: 'C',\r\n            alias: 'Other',\r\n            isBmpLast: true,\r\n            bmp: '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5\\u08BE-\\u08D3\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E45-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\r\n            astral: '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCBD\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5A\\uDC5C\\uDC5E-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFDF\\uDFE1-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4B-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDDAD-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD83D[\\uDED3-\\uDEDF\\uDEED-\\uDEEF\\uDEF7-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD1F\\uDD28-\\uDD2F\\uDD31\\uDD32\\uDD3F\\uDD4C-\\uDD4F\\uDD5F-\\uDD7F\\uDD92-\\uDDBF\\uDDC1-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Cc',\r\n            alias: 'Control',\r\n            bmp: '\\0-\\x1F\\x7F-\\x9F'\r\n        },\r\n        {\r\n            name: 'Cf',\r\n            alias: 'Format',\r\n            bmp: '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\r\n            astral: '\\uD804\\uDCBD|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Cn',\r\n            alias: 'Unassigned',\r\n            bmp: '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5\\u08BE-\\u08D3\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E45-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\r\n            astral: '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5A\\uDC5C\\uDC5E-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFDF\\uDFE1-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4B-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDDAD-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD83D[\\uDED3-\\uDEDF\\uDEED-\\uDEEF\\uDEF7-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD1F\\uDD28-\\uDD2F\\uDD31\\uDD32\\uDD3F\\uDD4C-\\uDD4F\\uDD5F-\\uDD7F\\uDD92-\\uDDBF\\uDDC1-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Co',\r\n            alias: 'Private_Use',\r\n            bmp: '\\uE000-\\uF8FF',\r\n            astral: '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\r\n        },\r\n        {\r\n            name: 'Cs',\r\n            alias: 'Surrogate',\r\n            bmp: '\\uD800-\\uDFFF'\r\n        },\r\n        {\r\n            name: 'L',\r\n            alias: 'Letter',\r\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Ll',\r\n            alias: 'Lowercase_Letter',\r\n            bmp: 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\r\n            astral: '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Lm',\r\n            alias: 'Modifier_Letter',\r\n            bmp: '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F',\r\n            astral: '\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]'\r\n        },\r\n        {\r\n            name: 'Lo',\r\n            alias: 'Other_Letter',\r\n            bmp: '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Lt',\r\n            alias: 'Titlecase_Letter',\r\n            bmp: '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\r\n        },\r\n        {\r\n            name: 'Lu',\r\n            alias: 'Uppercase_Letter',\r\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\r\n            astral: '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]'\r\n        },\r\n        {\r\n            name: 'M',\r\n            alias: 'Mark',\r\n            bmp: '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\r\n            astral: '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDCA-\\uDDCC\\uDE2C-\\uDE37\\uDE3E\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC35-\\uDC46\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD807[\\uDC2F-\\uDC36\\uDC38-\\uDC3F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'Mc',\r\n            alias: 'Spacing_Mark',\r\n            bmp: '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\u1CF3\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\r\n            astral: '\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDC35-\\uDC37\\uDC40\\uDC41\\uDC45\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD807[\\uDC2F\\uDC3E\\uDCA9\\uDCB1\\uDCB4]|\\uD81B[\\uDF51-\\uDF7E]|\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]'\r\n        },\r\n        {\r\n            name: 'Me',\r\n            alias: 'Enclosing_Mark',\r\n            bmp: '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\r\n        },\r\n        {\r\n            name: 'Mn',\r\n            alias: 'Nonspacing_Mark',\r\n            bmp: '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\r\n            astral: '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'N',\r\n            alias: 'Number',\r\n            bmp: '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\r\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2]|\\uD807[\\uDC50-\\uDC6C]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83C[\\uDD00-\\uDD0C]'\r\n        },\r\n        {\r\n            name: 'Nd',\r\n            alias: 'Decimal_Number',\r\n            bmp: '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\r\n            astral: '\\uD801[\\uDCA0-\\uDCA9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD807[\\uDC50-\\uDC59]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDD50-\\uDD59]'\r\n        },\r\n        {\r\n            name: 'Nl',\r\n            alias: 'Letter_Number',\r\n            bmp: '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\r\n            astral: '\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]'\r\n        },\r\n        {\r\n            name: 'No',\r\n            alias: 'Other_Number',\r\n            bmp: '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D58-\\u0D5E\\u0D70-\\u0D78\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\r\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD805[\\uDF3A\\uDF3B]|\\uD806[\\uDCEA-\\uDCF2]|\\uD807[\\uDC5A-\\uDC6C]|\\uD81A[\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD83C[\\uDD00-\\uDD0C]'\r\n        },\r\n        {\r\n            name: 'P',\r\n            alias: 'Punctuation',\r\n            bmp: '\\x21-\\x23\\x25-\\\\x2A\\x2C-\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5B-\\\\x5D\\x5F\\\\x7B\\x7D\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E44\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\r\n            astral: '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'Pc',\r\n            alias: 'Connector_Punctuation',\r\n            bmp: '\\x5F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\r\n        },\r\n        {\r\n            name: 'Pd',\r\n            alias: 'Dash_Punctuation',\r\n            bmp: '\\\\x2D\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D'\r\n        },\r\n        {\r\n            name: 'Pe',\r\n            alias: 'Close_Punctuation',\r\n            bmp: '\\\\x29\\\\x5D\\x7D\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\r\n        },\r\n        {\r\n            name: 'Pf',\r\n            alias: 'Final_Punctuation',\r\n            bmp: '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\r\n        },\r\n        {\r\n            name: 'Pi',\r\n            alias: 'Initial_Punctuation',\r\n            bmp: '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\r\n        },\r\n        {\r\n            name: 'Po',\r\n            alias: 'Other_Punctuation',\r\n            bmp: '\\x21-\\x23\\x25-\\x27\\\\x2A\\x2C\\\\x2E\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5C\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u2E43\\u2E44\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\r\n            astral: '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'Ps',\r\n            alias: 'Open_Punctuation',\r\n            bmp: '\\\\x28\\\\x5B\\\\x7B\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\r\n        },\r\n        {\r\n            name: 'S',\r\n            alias: 'Symbol',\r\n            bmp: '\\\\x24\\\\x2B\\x3C-\\x3E\\\\x5E\\x60\\\\x7C\\x7E\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BE\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u23FE\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\r\n            astral: '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD83B[\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED2\\uDEE0-\\uDEEC\\uDEF0-\\uDEF6\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD1E\\uDD20-\\uDD27\\uDD30\\uDD33-\\uDD3E\\uDD40-\\uDD4B\\uDD50-\\uDD5E\\uDD80-\\uDD91\\uDDC0]'\r\n        },\r\n        {\r\n            name: 'Sc',\r\n            alias: 'Currency_Symbol',\r\n            bmp: '\\\\x24\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BE\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\r\n        },\r\n        {\r\n            name: 'Sk',\r\n            alias: 'Modifier_Symbol',\r\n            bmp: '\\\\x5E\\x60\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3',\r\n            astral: '\\uD83C[\\uDFFB-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Sm',\r\n            alias: 'Math_Symbol',\r\n            bmp: '\\\\x2B\\x3C-\\x3E\\\\x7C\\x7E\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\r\n            astral: '\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD83B[\\uDEF0\\uDEF1]'\r\n        },\r\n        {\r\n            name: 'So',\r\n            alias: 'Other_Symbol',\r\n            bmp: '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u23FE\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\r\n            astral: '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFA]|\\uD83D[\\uDC00-\\uDED2\\uDEE0-\\uDEEC\\uDEF0-\\uDEF6\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD1E\\uDD20-\\uDD27\\uDD30\\uDD33-\\uDD3E\\uDD40-\\uDD4B\\uDD50-\\uDD5E\\uDD80-\\uDD91\\uDDC0]'\r\n        },\r\n        {\r\n            name: 'Z',\r\n            alias: 'Separator',\r\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\r\n        },\r\n        {\r\n            name: 'Zl',\r\n            alias: 'Line_Separator',\r\n            bmp: '\\u2028'\r\n        },\r\n        {\r\n            name: 'Zp',\r\n            alias: 'Paragraph_Separator',\r\n            bmp: '\\u2029'\r\n        },\r\n        {\r\n            name: 'Zs',\r\n            alias: 'Space_Separator',\r\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\r\n        }\r\n    ]);\r\n\r\n};\r\n\n},{}],6:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Properties 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2012-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\r\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\r\n     * UAX #44 <http://unicode.org/reports/tr44/>:\r\n     *\r\n     * - Alphabetic\r\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\r\n     *   Lo + Nl + Other_Alphabetic.\r\n     *\r\n     * - Default_Ignorable_Code_Point\r\n     *   For programmatic determination of default ignorable code points. New characters that should\r\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\r\n     *   permitting programs to correctly handle the default rendering of such characters when not\r\n     *   otherwise supported.\r\n     *\r\n     * - Lowercase\r\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\r\n     *\r\n     * - Noncharacter_Code_Point\r\n     *   Code points permanently reserved for internal use.\r\n     *\r\n     * - Uppercase\r\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\r\n     *\r\n     * - White_Space\r\n     *   Spaces, separator characters and other control characters which should be treated by\r\n     *   programming languages as \"white space\" for the purpose of parsing elements.\r\n     *\r\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\r\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\r\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\r\n     *\r\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\r\n    }\r\n\r\n    var unicodeData = [\r\n        {\r\n            name: 'ASCII',\r\n            bmp: '\\0-\\x7F'\r\n        },\r\n        {\r\n            name: 'Alphabetic',\r\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08DF\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8C5\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC45\\uDC82-\\uDCB8\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD805[\\uDC00-\\uDC41\\uDC43-\\uDC45\\uDC47-\\uDC4A\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDF00-\\uDF19\\uDF1D-\\uDF2A]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC3E\\uDC40\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD47]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Any',\r\n            isBmpLast: true,\r\n            bmp: '\\0-\\uFFFF',\r\n            astral: '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Default_Ignorable_Code_Point',\r\n            bmp: '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\r\n            astral: '\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Lowercase',\r\n            bmp: 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\r\n            astral: '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Noncharacter_Code_Point',\r\n            bmp: '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\r\n            astral: '[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Uppercase',\r\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\r\n            astral: '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\r\n        },\r\n        {\r\n            name: 'White_Space',\r\n            bmp: '\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\r\n        }\r\n    ];\r\n\r\n    // Add non-generated data\r\n    unicodeData.push({\r\n        name: 'Assigned',\r\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\r\n        // Categories addon is required to use this property\r\n        inverseOf: 'Cn'\r\n    });\r\n\r\n    XRegExp.addUnicodeData(unicodeData);\r\n\r\n};\r\n\n},{}],7:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Scripts 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2010-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\r\n     * and any spaces, hyphens, and underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\r\n    }\r\n\r\n    XRegExp.addUnicodeData([\r\n        {\r\n            name: 'Adlam',\r\n            astral: '\\uD83A[\\uDD00-\\uDD4A\\uDD50-\\uDD59\\uDD5E\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'Ahom',\r\n            astral: '\\uD805[\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'Anatolian_Hieroglyphs',\r\n            astral: '\\uD811[\\uDC00-\\uDE46]'\r\n        },\r\n        {\r\n            name: 'Arabic',\r\n            bmp: '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC',\r\n            astral: '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\r\n        },\r\n        {\r\n            name: 'Armenian',\r\n            bmp: '\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\r\n        },\r\n        {\r\n            name: 'Avestan',\r\n            astral: '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'Balinese',\r\n            bmp: '\\u1B00-\\u1B4B\\u1B50-\\u1B7C'\r\n        },\r\n        {\r\n            name: 'Bamum',\r\n            bmp: '\\uA6A0-\\uA6F7',\r\n            astral: '\\uD81A[\\uDC00-\\uDE38]'\r\n        },\r\n        {\r\n            name: 'Bassa_Vah',\r\n            astral: '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\r\n        },\r\n        {\r\n            name: 'Batak',\r\n            bmp: '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\r\n        },\r\n        {\r\n            name: 'Bengali',\r\n            bmp: '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FB'\r\n        },\r\n        {\r\n            name: 'Bhaiksuki',\r\n            astral: '\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC45\\uDC50-\\uDC6C]'\r\n        },\r\n        {\r\n            name: 'Bopomofo',\r\n            bmp: '\\u02EA\\u02EB\\u3105-\\u312D\\u31A0-\\u31BA'\r\n        },\r\n        {\r\n            name: 'Brahmi',\r\n            astral: '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC6F\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Braille',\r\n            bmp: '\\u2800-\\u28FF'\r\n        },\r\n        {\r\n            name: 'Buginese',\r\n            bmp: '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\r\n        },\r\n        {\r\n            name: 'Buhid',\r\n            bmp: '\\u1740-\\u1753'\r\n        },\r\n        {\r\n            name: 'Canadian_Aboriginal',\r\n            bmp: '\\u1400-\\u167F\\u18B0-\\u18F5'\r\n        },\r\n        {\r\n            name: 'Carian',\r\n            astral: '\\uD800[\\uDEA0-\\uDED0]'\r\n        },\r\n        {\r\n            name: 'Caucasian_Albanian',\r\n            astral: '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\r\n        },\r\n        {\r\n            name: 'Chakma',\r\n            astral: '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Cham',\r\n            bmp: '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\r\n        },\r\n        {\r\n            name: 'Cherokee',\r\n            bmp: '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\r\n        },\r\n        {\r\n            name: 'Common',\r\n            bmp: '\\0-\\x40\\\\x5B-\\x60\\\\x7B-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0589\\u0605\\u060C\\u061B\\u061C\\u061F\\u0640\\u06DD\\u08E2\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BE\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u23FE\\u2400-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2E00-\\u2E44\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\r\n            astral: '\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9B\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDF00-\\uDF56\\uDF60-\\uDF71]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDD0C\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED2\\uDEE0-\\uDEEC\\uDEF0-\\uDEF6\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD1E\\uDD20-\\uDD27\\uDD30\\uDD33-\\uDD3E\\uDD40-\\uDD4B\\uDD50-\\uDD5E\\uDD80-\\uDD91\\uDDC0]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Coptic',\r\n            bmp: '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\r\n        },\r\n        {\r\n            name: 'Cuneiform',\r\n            astral: '\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Cypriot',\r\n            astral: '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\r\n        },\r\n        {\r\n            name: 'Cyrillic',\r\n            bmp: '\\u0400-\\u0484\\u0487-\\u052F\\u1C80-\\u1C88\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\r\n        },\r\n        {\r\n            name: 'Deseret',\r\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\r\n        },\r\n        {\r\n            name: 'Devanagari',\r\n            bmp: '\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FD'\r\n        },\r\n        {\r\n            name: 'Duployan',\r\n            astral: '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\r\n        },\r\n        {\r\n            name: 'Egyptian_Hieroglyphs',\r\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]'\r\n        },\r\n        {\r\n            name: 'Elbasan',\r\n            astral: '\\uD801[\\uDD00-\\uDD27]'\r\n        },\r\n        {\r\n            name: 'Ethiopic',\r\n            bmp: '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E'\r\n        },\r\n        {\r\n            name: 'Georgian',\r\n            bmp: '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D'\r\n        },\r\n        {\r\n            name: 'Glagolitic',\r\n            bmp: '\\u2C00-\\u2C2E\\u2C30-\\u2C5E',\r\n            astral: '\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]'\r\n        },\r\n        {\r\n            name: 'Gothic',\r\n            astral: '\\uD800[\\uDF30-\\uDF4A]'\r\n        },\r\n        {\r\n            name: 'Grantha',\r\n            astral: '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\r\n        },\r\n        {\r\n            name: 'Greek',\r\n            bmp: '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\r\n            astral: '\\uD800[\\uDD40-\\uDD8E\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\r\n        },\r\n        {\r\n            name: 'Gujarati',\r\n            bmp: '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9'\r\n        },\r\n        {\r\n            name: 'Gurmukhi',\r\n            bmp: '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75'\r\n        },\r\n        {\r\n            name: 'Han',\r\n            bmp: '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uF900-\\uFA6D\\uFA70-\\uFAD9',\r\n            astral: '[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Hangul',\r\n            bmp: '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\r\n        },\r\n        {\r\n            name: 'Hanunoo',\r\n            bmp: '\\u1720-\\u1734'\r\n        },\r\n        {\r\n            name: 'Hatran',\r\n            astral: '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'Hebrew',\r\n            bmp: '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\r\n        },\r\n        {\r\n            name: 'Hiragana',\r\n            bmp: '\\u3041-\\u3096\\u309D-\\u309F',\r\n            astral: '\\uD82C\\uDC01|\\uD83C\\uDE00'\r\n        },\r\n        {\r\n            name: 'Imperial_Aramaic',\r\n            astral: '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\r\n        },\r\n        {\r\n            name: 'Inherited',\r\n            bmp: '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951\\u0952\\u1AB0-\\u1ABE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\r\n            astral: '\\uD800[\\uDDFD\\uDEE0]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'Inscriptional_Pahlavi',\r\n            astral: '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'Inscriptional_Parthian',\r\n            astral: '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\r\n        },\r\n        {\r\n            name: 'Javanese',\r\n            bmp: '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\r\n        },\r\n        {\r\n            name: 'Kaithi',\r\n            astral: '\\uD804[\\uDC80-\\uDCC1]'\r\n        },\r\n        {\r\n            name: 'Kannada',\r\n            bmp: '\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\r\n        },\r\n        {\r\n            name: 'Katakana',\r\n            bmp: '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\r\n            astral: '\\uD82C\\uDC00'\r\n        },\r\n        {\r\n            name: 'Kayah_Li',\r\n            bmp: '\\uA900-\\uA92D\\uA92F'\r\n        },\r\n        {\r\n            name: 'Kharoshthi',\r\n            astral: '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F-\\uDE47\\uDE50-\\uDE58]'\r\n        },\r\n        {\r\n            name: 'Khmer',\r\n            bmp: '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\r\n        },\r\n        {\r\n            name: 'Khojki',\r\n            astral: '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3E]'\r\n        },\r\n        {\r\n            name: 'Khudawadi',\r\n            astral: '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\r\n        },\r\n        {\r\n            name: 'Lao',\r\n            bmp: '\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\r\n        },\r\n        {\r\n            name: 'Latin',\r\n            bmp: 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A'\r\n        },\r\n        {\r\n            name: 'Lepcha',\r\n            bmp: '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\r\n        },\r\n        {\r\n            name: 'Limbu',\r\n            bmp: '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\r\n        },\r\n        {\r\n            name: 'Linear_A',\r\n            astral: '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\r\n        },\r\n        {\r\n            name: 'Linear_B',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\r\n        },\r\n        {\r\n            name: 'Lisu',\r\n            bmp: '\\uA4D0-\\uA4FF'\r\n        },\r\n        {\r\n            name: 'Lycian',\r\n            astral: '\\uD800[\\uDE80-\\uDE9C]'\r\n        },\r\n        {\r\n            name: 'Lydian',\r\n            astral: '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\r\n        },\r\n        {\r\n            name: 'Mahajani',\r\n            astral: '\\uD804[\\uDD50-\\uDD76]'\r\n        },\r\n        {\r\n            name: 'Malayalam',\r\n            bmp: '\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F'\r\n        },\r\n        {\r\n            name: 'Mandaic',\r\n            bmp: '\\u0840-\\u085B\\u085E'\r\n        },\r\n        {\r\n            name: 'Manichaean',\r\n            astral: '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\r\n        },\r\n        {\r\n            name: 'Marchen',\r\n            astral: '\\uD807[\\uDC70-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]'\r\n        },\r\n        {\r\n            name: 'Meetei_Mayek',\r\n            bmp: '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\r\n        },\r\n        {\r\n            name: 'Mende_Kikakui',\r\n            astral: '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\r\n        },\r\n        {\r\n            name: 'Meroitic_Cursive',\r\n            astral: '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'Meroitic_Hieroglyphs',\r\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\r\n        },\r\n        {\r\n            name: 'Miao',\r\n            astral: '\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'Modi',\r\n            astral: '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\r\n        },\r\n        {\r\n            name: 'Mongolian',\r\n            bmp: '\\u1800\\u1801\\u1804\\u1806-\\u180E\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA',\r\n            astral: '\\uD805[\\uDE60-\\uDE6C]'\r\n        },\r\n        {\r\n            name: 'Mro',\r\n            astral: '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\r\n        },\r\n        {\r\n            name: 'Multani',\r\n            astral: '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\r\n        },\r\n        {\r\n            name: 'Myanmar',\r\n            bmp: '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\r\n        },\r\n        {\r\n            name: 'Nabataean',\r\n            astral: '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'New_Tai_Lue',\r\n            bmp: '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\r\n        },\r\n        {\r\n            name: 'Newa',\r\n            astral: '\\uD805[\\uDC00-\\uDC59\\uDC5B\\uDC5D]'\r\n        },\r\n        {\r\n            name: 'Nko',\r\n            bmp: '\\u07C0-\\u07FA'\r\n        },\r\n        {\r\n            name: 'Ogham',\r\n            bmp: '\\u1680-\\u169C'\r\n        },\r\n        {\r\n            name: 'Ol_Chiki',\r\n            bmp: '\\u1C50-\\u1C7F'\r\n        },\r\n        {\r\n            name: 'Old_Hungarian',\r\n            astral: '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'Old_Italic',\r\n            astral: '\\uD800[\\uDF00-\\uDF23]'\r\n        },\r\n        {\r\n            name: 'Old_North_Arabian',\r\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\r\n        },\r\n        {\r\n            name: 'Old_Permic',\r\n            astral: '\\uD800[\\uDF50-\\uDF7A]'\r\n        },\r\n        {\r\n            name: 'Old_Persian',\r\n            astral: '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\r\n        },\r\n        {\r\n            name: 'Old_South_Arabian',\r\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'Old_Turkic',\r\n            astral: '\\uD803[\\uDC00-\\uDC48]'\r\n        },\r\n        {\r\n            name: 'Oriya',\r\n            bmp: '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\r\n        },\r\n        {\r\n            name: 'Osage',\r\n            astral: '\\uD801[\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB]'\r\n        },\r\n        {\r\n            name: 'Osmanya',\r\n            astral: '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\r\n        },\r\n        {\r\n            name: 'Pahawh_Hmong',\r\n            astral: '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\r\n        },\r\n        {\r\n            name: 'Palmyrene',\r\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Pau_Cin_Hau',\r\n            astral: '\\uD806[\\uDEC0-\\uDEF8]'\r\n        },\r\n        {\r\n            name: 'Phags_Pa',\r\n            bmp: '\\uA840-\\uA877'\r\n        },\r\n        {\r\n            name: 'Phoenician',\r\n            astral: '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\r\n        },\r\n        {\r\n            name: 'Psalter_Pahlavi',\r\n            astral: '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\r\n        },\r\n        {\r\n            name: 'Rejang',\r\n            bmp: '\\uA930-\\uA953\\uA95F'\r\n        },\r\n        {\r\n            name: 'Runic',\r\n            bmp: '\\u16A0-\\u16EA\\u16EE-\\u16F8'\r\n        },\r\n        {\r\n            name: 'Samaritan',\r\n            bmp: '\\u0800-\\u082D\\u0830-\\u083E'\r\n        },\r\n        {\r\n            name: 'Saurashtra',\r\n            bmp: '\\uA880-\\uA8C5\\uA8CE-\\uA8D9'\r\n        },\r\n        {\r\n            name: 'Sharada',\r\n            astral: '\\uD804[\\uDD80-\\uDDCD\\uDDD0-\\uDDDF]'\r\n        },\r\n        {\r\n            name: 'Shavian',\r\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Siddham',\r\n            astral: '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\r\n        },\r\n        {\r\n            name: 'SignWriting',\r\n            astral: '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'Sinhala',\r\n            bmp: '\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\r\n            astral: '\\uD804[\\uDDE1-\\uDDF4]'\r\n        },\r\n        {\r\n            name: 'Sora_Sompeng',\r\n            astral: '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\r\n        },\r\n        {\r\n            name: 'Sundanese',\r\n            bmp: '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\r\n        },\r\n        {\r\n            name: 'Syloti_Nagri',\r\n            bmp: '\\uA800-\\uA82B'\r\n        },\r\n        {\r\n            name: 'Syriac',\r\n            bmp: '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F'\r\n        },\r\n        {\r\n            name: 'Tagalog',\r\n            bmp: '\\u1700-\\u170C\\u170E-\\u1714'\r\n        },\r\n        {\r\n            name: 'Tagbanwa',\r\n            bmp: '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\r\n        },\r\n        {\r\n            name: 'Tai_Le',\r\n            bmp: '\\u1950-\\u196D\\u1970-\\u1974'\r\n        },\r\n        {\r\n            name: 'Tai_Tham',\r\n            bmp: '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\r\n        },\r\n        {\r\n            name: 'Tai_Viet',\r\n            bmp: '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\r\n        },\r\n        {\r\n            name: 'Takri',\r\n            astral: '\\uD805[\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]'\r\n        },\r\n        {\r\n            name: 'Tamil',\r\n            bmp: '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA'\r\n        },\r\n        {\r\n            name: 'Tangut',\r\n            astral: '\\uD81B\\uDFE0|[\\uD81C-\\uD820][\\uDC00-\\uDFFF]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]'\r\n        },\r\n        {\r\n            name: 'Telugu',\r\n            bmp: '\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F'\r\n        },\r\n        {\r\n            name: 'Thaana',\r\n            bmp: '\\u0780-\\u07B1'\r\n        },\r\n        {\r\n            name: 'Thai',\r\n            bmp: '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\r\n        },\r\n        {\r\n            name: 'Tibetan',\r\n            bmp: '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\r\n        },\r\n        {\r\n            name: 'Tifinagh',\r\n            bmp: '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\r\n        },\r\n        {\r\n            name: 'Tirhuta',\r\n            astral: '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\r\n        },\r\n        {\r\n            name: 'Ugaritic',\r\n            astral: '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'Vai',\r\n            bmp: '\\uA500-\\uA62B'\r\n        },\r\n        {\r\n            name: 'Warang_Citi',\r\n            astral: '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'Yi',\r\n            bmp: '\\uA000-\\uA48C\\uA490-\\uA4C6'\r\n        }\r\n    ]);\r\n\r\n};\r\n\n},{}],8:[function(require,module,exports){\nvar XRegExp = require('./xregexp');\r\n\r\nrequire('./addons/build')(XRegExp);\r\nrequire('./addons/matchrecursive')(XRegExp);\r\nrequire('./addons/unicode-base')(XRegExp);\r\nrequire('./addons/unicode-blocks')(XRegExp);\r\nrequire('./addons/unicode-categories')(XRegExp);\r\nrequire('./addons/unicode-properties')(XRegExp);\r\nrequire('./addons/unicode-scripts')(XRegExp);\r\n\r\nmodule.exports = XRegExp;\r\n\n},{\"./addons/build\":1,\"./addons/matchrecursive\":2,\"./addons/unicode-base\":3,\"./addons/unicode-blocks\":4,\"./addons/unicode-categories\":5,\"./addons/unicode-properties\":6,\"./addons/unicode-scripts\":7,\"./xregexp\":9}],9:[function(require,module,exports){\n/*!\r\n * XRegExp 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2007-2017 MIT License\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\r\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\r\n * make your client-side grepping simpler and more powerful, while freeing you from related\r\n * cross-browser inconsistencies.\r\n */\r\n\r\n// ==--------------------------==\r\n// Private stuff\r\n// ==--------------------------==\r\n\r\n// Property name used for extended regex instance data\r\nvar REGEX_DATA = 'xregexp';\r\n// Optional features that can be installed and uninstalled\r\nvar features = {\r\n    astral: false,\r\n    natives: false\r\n};\r\n// Native methods to use and restore ('native' is an ES3 reserved keyword)\r\nvar nativ = {\r\n    exec: RegExp.prototype.exec,\r\n    test: RegExp.prototype.test,\r\n    match: String.prototype.match,\r\n    replace: String.prototype.replace,\r\n    split: String.prototype.split\r\n};\r\n// Storage for fixed/extended native methods\r\nvar fixed = {};\r\n// Storage for regexes cached by `XRegExp.cache`\r\nvar regexCache = {};\r\n// Storage for pattern details cached by the `XRegExp` constructor\r\nvar patternCache = {};\r\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\r\nvar tokens = [];\r\n// Token scopes\r\nvar defaultScope = 'default';\r\nvar classScope = 'class';\r\n// Regexes that match native regex syntax, including octals\r\nvar nativeTokens = {\r\n    // Any native multicharacter token in default scope, or any single character\r\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\r\n    // Any native multicharacter token in character class scope, or any single character\r\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\r\n};\r\n// Any backreference or dollar-prefixed character in replacement strings\r\nvar replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g;\r\n// Check for correct `exec` handling of nonparticipating capturing groups\r\nvar correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\r\n// Check for ES6 `flags` prop support\r\nvar hasFlagsProp = /x/.flags !== undefined;\r\n// Shortcut to `Object.prototype.toString`\r\nvar toString = {}.toString;\r\n\r\nfunction hasNativeFlag(flag) {\r\n    // Can't check based on the presence of properties/getters since browsers might support such\r\n    // properties even when they don't support the corresponding flag in regex construction (tested\r\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\r\n    // throws an error)\r\n    var isSupported = true;\r\n    try {\r\n        // Can't use regex literals for testing even in a `try` because regex literals with\r\n        // unsupported flags cause a compilation error in IE\r\n        new RegExp('', flag);\r\n    } catch (exception) {\r\n        isSupported = false;\r\n    }\r\n    return isSupported;\r\n}\r\n// Check for ES6 `u` flag support\r\nvar hasNativeU = hasNativeFlag('u');\r\n// Check for ES6 `y` flag support\r\nvar hasNativeY = hasNativeFlag('y');\r\n// Tracker for known flags, including addon flags\r\nvar registeredFlags = {\r\n    g: true,\r\n    i: true,\r\n    m: true,\r\n    u: hasNativeU,\r\n    y: hasNativeY\r\n};\r\n\r\n/**\r\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to augment.\r\n * @param {Array} captureNames Array with capture names, or `null`.\r\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\r\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\r\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\r\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\r\n *   skipping some operations like attaching `XRegExp.prototype` properties.\r\n * @returns {RegExp} Augmented regex.\r\n */\r\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\r\n    var p;\r\n\r\n    regex[REGEX_DATA] = {\r\n        captureNames: captureNames\r\n    };\r\n\r\n    if (isInternalOnly) {\r\n        return regex;\r\n    }\r\n\r\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\r\n    if (regex.__proto__) {\r\n        regex.__proto__ = XRegExp.prototype;\r\n    } else {\r\n        for (p in XRegExp.prototype) {\r\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\r\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\r\n            // extensions exist on `regex.prototype` anyway\r\n            regex[p] = XRegExp.prototype[p];\r\n        }\r\n    }\r\n\r\n    regex[REGEX_DATA].source = xSource;\r\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\r\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\r\n\r\n    return regex;\r\n}\r\n\r\n/**\r\n * Removes any duplicate characters from the provided string.\r\n *\r\n * @private\r\n * @param {String} str String to remove duplicate characters from.\r\n * @returns {String} String with any duplicate characters removed.\r\n */\r\nfunction clipDuplicates(str) {\r\n    return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\r\n}\r\n\r\n/**\r\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\r\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\r\n * flags g and y while copying the regex.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to copy.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   - `addG` {Boolean} Add flag g while copying the regex.\r\n *   - `addY` {Boolean} Add flag y while copying the regex.\r\n *   - `removeG` {Boolean} Remove flag g while copying the regex.\r\n *   - `removeY` {Boolean} Remove flag y while copying the regex.\r\n *   - `isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\r\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\r\n *     skipping some operations like attaching `XRegExp.prototype` properties.\r\n *   - `source` {String} Overrides `<regex>.source`, for special cases.\r\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\r\n */\r\nfunction copyRegex(regex, options) {\r\n    if (!XRegExp.isRegExp(regex)) {\r\n        throw new TypeError('Type RegExp expected');\r\n    }\r\n\r\n    var xData = regex[REGEX_DATA] || {};\r\n    var flags = getNativeFlags(regex);\r\n    var flagsToAdd = '';\r\n    var flagsToRemove = '';\r\n    var xregexpSource = null;\r\n    var xregexpFlags = null;\r\n\r\n    options = options || {};\r\n\r\n    if (options.removeG) {flagsToRemove += 'g';}\r\n    if (options.removeY) {flagsToRemove += 'y';}\r\n    if (flagsToRemove) {\r\n        flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\r\n    }\r\n\r\n    if (options.addG) {flagsToAdd += 'g';}\r\n    if (options.addY) {flagsToAdd += 'y';}\r\n    if (flagsToAdd) {\r\n        flags = clipDuplicates(flags + flagsToAdd);\r\n    }\r\n\r\n    if (!options.isInternalOnly) {\r\n        if (xData.source !== undefined) {\r\n            xregexpSource = xData.source;\r\n        }\r\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\r\n        // that indicates we're not tracking original precompilation flags\r\n        if (xData.flags != null) {\r\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\r\n            // removed for non-internal regexes, so don't need to handle it\r\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\r\n        }\r\n    }\r\n\r\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\r\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\r\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\r\n    // translation to native regex syntax\r\n    regex = augment(\r\n        new RegExp(options.source || regex.source, flags),\r\n        hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\r\n        xregexpSource,\r\n        xregexpFlags,\r\n        options.isInternalOnly\r\n    );\r\n\r\n    return regex;\r\n}\r\n\r\n/**\r\n * Converts hexadecimal to decimal.\r\n *\r\n * @private\r\n * @param {String} hex\r\n * @returns {Number}\r\n */\r\nfunction dec(hex) {\r\n    return parseInt(hex, 16);\r\n}\r\n\r\n/**\r\n * Returns a pattern that can be used in a native RegExp in place of an ignorable token such as an\r\n * inline comment or whitespace with flag x. This is used directly as a token handler function\r\n * passed to `XRegExp.addToken`.\r\n *\r\n * @private\r\n * @param {String} match Match arg of `XRegExp.addToken` handler\r\n * @param {String} scope Scope arg of `XRegExp.addToken` handler\r\n * @param {String} flags Flags arg of `XRegExp.addToken` handler\r\n * @returns {String} Either '' or '(?:)', depending on which is needed in the context of the match.\r\n */\r\nfunction getContextualTokenSeparator(match, scope, flags) {\r\n    if (\r\n        // No need to separate tokens if at the beginning or end of a group\r\n        match.input.charAt(match.index - 1) === '(' ||\r\n        match.input.charAt(match.index + match[0].length) === ')' ||\r\n        // Avoid separating tokens when the following token is a quantifier\r\n        isPatternNext(match.input, match.index + match[0].length, flags, '[?*+]|{\\\\d+(?:,\\\\d*)?}')\r\n    ) {\r\n        return '';\r\n    }\r\n    // Keep tokens separated. This avoids e.g. inadvertedly changing `\\1 1` or `\\1(?#)1` to `\\11`.\r\n    // This also ensures all tokens remain as discrete atoms, e.g. it avoids converting the syntax\r\n    // error `(? :` into `(?:`.\r\n    return '(?:)';\r\n}\r\n\r\n/**\r\n * Returns native `RegExp` flags used by a regex object.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {String} Native flags in use.\r\n */\r\nfunction getNativeFlags(regex) {\r\n    return hasFlagsProp ?\r\n        regex.flags :\r\n        // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\r\n        // with an empty string) allows this to continue working predictably when\r\n        // `XRegExp.proptotype.toString` is overridden\r\n        nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\r\n}\r\n\r\n/**\r\n * Determines whether a regex has extended instance data used to track capture names.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {Boolean} Whether the regex uses named capture.\r\n */\r\nfunction hasNamedCapture(regex) {\r\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\r\n}\r\n\r\n/**\r\n * Converts decimal to hexadecimal.\r\n *\r\n * @private\r\n * @param {Number|String} dec\r\n * @returns {String}\r\n */\r\nfunction hex(dec) {\r\n    return parseInt(dec, 10).toString(16);\r\n}\r\n\r\n/**\r\n * Returns the first index at which a given value can be found in an array.\r\n *\r\n * @private\r\n * @param {Array} array Array to search.\r\n * @param {*} value Value to locate in the array.\r\n * @returns {Number} Zero-based index at which the item is found, or -1.\r\n */\r\nfunction indexOf(array, value) {\r\n    var len = array.length;\r\n    var i;\r\n\r\n    for (i = 0; i < len; ++i) {\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\n/**\r\n * Checks whether the next nonignorable token after the specified position matches the\r\n * `needlePattern`\r\n *\r\n * @private\r\n * @param {String} pattern Pattern to search within.\r\n * @param {Number} pos Index in `pattern` to search at.\r\n * @param {String} flags Flags used by the pattern.\r\n * @param {String} needlePattern Pattern to match the next token against.\r\n * @returns {Boolean} Whether the next nonignorable token matches `needlePattern`\r\n */\r\nfunction isPatternNext(pattern, pos, flags, needlePattern) {\r\n    var inlineCommentPattern = '\\\\(\\\\?#[^)]*\\\\)';\r\n    var lineCommentPattern = '#[^#\\\\n]*';\r\n    var patternsToIgnore = flags.indexOf('x') > -1 ?\r\n        // Ignore any leading whitespace, line comments, and inline comments\r\n        ['\\\\s', lineCommentPattern, inlineCommentPattern] :\r\n        // Ignore any leading inline comments\r\n        [inlineCommentPattern];\r\n    return nativ.test.call(\r\n        new RegExp('^(?:' + patternsToIgnore.join('|') + ')*(?:' + needlePattern + ')'),\r\n        pattern.slice(pos)\r\n    );\r\n}\r\n\r\n/**\r\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\r\n *\r\n * @private\r\n * @param {*} value Object to check.\r\n * @param {String} type Type to check for, in TitleCase.\r\n * @returns {Boolean} Whether the object matches the type.\r\n */\r\nfunction isType(value, type) {\r\n    return toString.call(value) === '[object ' + type + ']';\r\n}\r\n\r\n/**\r\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\r\n *\r\n * @private\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nfunction pad4(str) {\r\n    while (str.length < 4) {\r\n        str = '0' + str;\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\r\n * the flag preparation logic from the `XRegExp` constructor.\r\n *\r\n * @private\r\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\r\n * @param {String} flags Any combination of flags.\r\n * @returns {Object} Object with properties `pattern` and `flags`.\r\n */\r\nfunction prepareFlags(pattern, flags) {\r\n    var i;\r\n\r\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\r\n    if (clipDuplicates(flags) !== flags) {\r\n        throw new SyntaxError('Invalid duplicate regex flag ' + flags);\r\n    }\r\n\r\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\r\n    pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function($0, $1) {\r\n        if (nativ.test.call(/[gy]/, $1)) {\r\n            throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\r\n        }\r\n        // Allow duplicate flags within the mode modifier\r\n        flags = clipDuplicates(flags + $1);\r\n        return '';\r\n    });\r\n\r\n    // Throw on unknown native or nonnative flags\r\n    for (i = 0; i < flags.length; ++i) {\r\n        if (!registeredFlags[flags.charAt(i)]) {\r\n            throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));\r\n        }\r\n    }\r\n\r\n    return {\r\n        pattern: pattern,\r\n        flags: flags\r\n    };\r\n}\r\n\r\n/**\r\n * Prepares an options object from the given value.\r\n *\r\n * @private\r\n * @param {String|Object} value Value to convert to an options object.\r\n * @returns {Object} Options object.\r\n */\r\nfunction prepareOptions(value) {\r\n    var options = {};\r\n\r\n    if (isType(value, 'String')) {\r\n        XRegExp.forEach(value, /[^\\s,]+/, function(match) {\r\n            options[match] = true;\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n/**\r\n * Registers a flag so it doesn't throw an 'unknown flag' error.\r\n *\r\n * @private\r\n * @param {String} flag Single-character flag to register.\r\n */\r\nfunction registerFlag(flag) {\r\n    if (!/^[\\w$]$/.test(flag)) {\r\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\r\n    }\r\n\r\n    registeredFlags[flag] = true;\r\n}\r\n\r\n/**\r\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\r\n * position, until a match is found.\r\n *\r\n * @private\r\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\r\n * @param {String} flags Flags being used to construct the regex.\r\n * @param {Number} pos Position to search for tokens within `pattern`.\r\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\r\n * @param {Object} context Context object to use for token handler functions.\r\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\r\n */\r\nfunction runTokens(pattern, flags, pos, scope, context) {\r\n    var i = tokens.length;\r\n    var leadChar = pattern.charAt(pos);\r\n    var result = null;\r\n    var match;\r\n    var t;\r\n\r\n    // Run in reverse insertion order\r\n    while (i--) {\r\n        t = tokens[i];\r\n        if (\r\n            (t.leadChar && t.leadChar !== leadChar) ||\r\n            (t.scope !== scope && t.scope !== 'all') ||\r\n            (t.flag && flags.indexOf(t.flag) === -1)\r\n        ) {\r\n            continue;\r\n        }\r\n\r\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\r\n        if (match) {\r\n            result = {\r\n                matchLength: match[0].length,\r\n                output: t.handler.call(context, match, scope, flags),\r\n                reparse: t.reparse\r\n            };\r\n            // Finished with token tests\r\n            break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\r\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\r\n * the Unicode Base addon is not available, since flag A is registered by that addon.\r\n *\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\nfunction setAstral(on) {\r\n    features.astral = on;\r\n}\r\n\r\n/**\r\n * Enables or disables native method overrides.\r\n *\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\nfunction setNatives(on) {\r\n    RegExp.prototype.exec = (on ? fixed : nativ).exec;\r\n    RegExp.prototype.test = (on ? fixed : nativ).test;\r\n    String.prototype.match = (on ? fixed : nativ).match;\r\n    String.prototype.replace = (on ? fixed : nativ).replace;\r\n    String.prototype.split = (on ? fixed : nativ).split;\r\n\r\n    features.natives = on;\r\n}\r\n\r\n/**\r\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\r\n * the ES5 abstract operation `ToObject`.\r\n *\r\n * @private\r\n * @param {*} value Object to check and return.\r\n * @returns {*} The provided object.\r\n */\r\nfunction toObject(value) {\r\n    // null or undefined\r\n    if (value == null) {\r\n        throw new TypeError('Cannot convert null or undefined to object');\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n// ==--------------------------==\r\n// Constructor\r\n// ==--------------------------==\r\n\r\n/**\r\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\r\n * native regular expression in that additional syntax and flags are supported. The returned object\r\n * is in fact a native `RegExp` and works with all native methods.\r\n *\r\n * @class XRegExp\r\n * @constructor\r\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\r\n * @param {String} [flags] Any combination of flags.\r\n *   Native flags:\r\n *     - `g` - global\r\n *     - `i` - ignore case\r\n *     - `m` - multiline anchors\r\n *     - `u` - unicode (ES6)\r\n *     - `y` - sticky (Firefox 3+, ES6)\r\n *   Additional XRegExp flags:\r\n *     - `n` - explicit capture\r\n *     - `s` - dot matches all (aka singleline)\r\n *     - `x` - free-spacing and line comments (aka extended)\r\n *     - `A` - astral (requires the Unicode Base addon)\r\n *   Flags cannot be provided when constructing one `RegExp` from another.\r\n * @returns {RegExp} Extended regular expression object.\r\n * @example\r\n *\r\n * // With named capture and flag x\r\n * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \\n\\\r\n *          (?<month> [0-9]{2} ) -?  # month \\n\\\r\n *          (?<day>   [0-9]{2} )     # day   ', 'x');\r\n *\r\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\r\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\r\n * // have fresh `lastIndex` properties (set to zero).\r\n * XRegExp(/regex/);\r\n */\r\nfunction XRegExp(pattern, flags) {\r\n    if (XRegExp.isRegExp(pattern)) {\r\n        if (flags !== undefined) {\r\n            throw new TypeError('Cannot supply flags when copying a RegExp');\r\n        }\r\n        return copyRegex(pattern);\r\n    }\r\n\r\n    // Copy the argument behavior of `RegExp`\r\n    pattern = pattern === undefined ? '' : String(pattern);\r\n    flags = flags === undefined ? '' : String(flags);\r\n\r\n    if (XRegExp.isInstalled('astral') && flags.indexOf('A') === -1) {\r\n        // This causes an error to be thrown if the Unicode Base addon is not available\r\n        flags += 'A';\r\n    }\r\n\r\n    if (!patternCache[pattern]) {\r\n        patternCache[pattern] = {};\r\n    }\r\n\r\n    if (!patternCache[pattern][flags]) {\r\n        var context = {\r\n            hasNamedCapture: false,\r\n            captureNames: []\r\n        };\r\n        var scope = defaultScope;\r\n        var output = '';\r\n        var pos = 0;\r\n        var result;\r\n\r\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\r\n        var applied = prepareFlags(pattern, flags);\r\n        var appliedPattern = applied.pattern;\r\n        var appliedFlags = applied.flags;\r\n\r\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\r\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\r\n        while (pos < appliedPattern.length) {\r\n            do {\r\n                // Check for custom tokens at the current position\r\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\r\n                // If the matched token used the `reparse` option, splice its output into the\r\n                // pattern before running tokens again at the same position\r\n                if (result && result.reparse) {\r\n                    appliedPattern = appliedPattern.slice(0, pos) +\r\n                        result.output +\r\n                        appliedPattern.slice(pos + result.matchLength);\r\n                }\r\n            } while (result && result.reparse);\r\n\r\n            if (result) {\r\n                output += result.output;\r\n                pos += (result.matchLength || 1);\r\n            } else {\r\n                // Get the native token at the current position\r\n                var token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\r\n                output += token;\r\n                pos += token.length;\r\n                if (token === '[' && scope === defaultScope) {\r\n                    scope = classScope;\r\n                } else if (token === ']' && scope === classScope) {\r\n                    scope = defaultScope;\r\n                }\r\n            }\r\n        }\r\n\r\n        patternCache[pattern][flags] = {\r\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\r\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\r\n            // separated. However, more than one empty group in a row is never needed.\r\n            pattern: nativ.replace.call(output, /(?:\\(\\?:\\))+/g, '(?:)'),\r\n            // Strip all but native flags\r\n            flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\r\n            // `context.captureNames` has an item for each capturing group, even if unnamed\r\n            captures: context.hasNamedCapture ? context.captureNames : null\r\n        };\r\n    }\r\n\r\n    var generated = patternCache[pattern][flags];\r\n    return augment(\r\n        new RegExp(generated.pattern, generated.flags),\r\n        generated.captures,\r\n        pattern,\r\n        flags\r\n    );\r\n}\r\n\r\n// Add `RegExp.prototype` to the prototype chain\r\nXRegExp.prototype = new RegExp();\r\n\r\n// ==--------------------------==\r\n// Public properties\r\n// ==--------------------------==\r\n\r\n/**\r\n * The XRegExp version number as a string containing three dot-separated parts. For example,\r\n * '2.0.0-beta-3'.\r\n *\r\n * @static\r\n * @memberOf XRegExp\r\n * @type String\r\n */\r\nXRegExp.version = '3.2.0';\r\n\r\n// ==--------------------------==\r\n// Public methods\r\n// ==--------------------------==\r\n\r\n// Intentionally undocumented; used in tests and addons\r\nXRegExp._clipDuplicates = clipDuplicates;\r\nXRegExp._hasNativeFlag = hasNativeFlag;\r\nXRegExp._dec = dec;\r\nXRegExp._hex = hex;\r\nXRegExp._pad4 = pad4;\r\n\r\n/**\r\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\r\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\r\n *\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex object that matches the new token.\r\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\r\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\r\n *   properties of the regex being built, through `this`. Invoked with three arguments:\r\n *   - The match array, with named backreference properties.\r\n *   - The regex scope where the match was found: 'default' or 'class'.\r\n *   - The flags used by the regex, including any flags in a leading mode modifier.\r\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\r\n *   construct XRegExps within the function or you will trigger infinite recursion.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   - `scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\r\n *   - `flag` {String} Single-character flag that triggers the token. This also registers the\r\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\r\n *   - `optionalFlags` {String} Any custom flags checked for within the token `handler` that are\r\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\r\n *     throwing an 'unknown flag' error when any of the flags are used.\r\n *   - `reparse` {Boolean} Whether the `handler` function's output should not be treated as\r\n *     final, and instead be reparseable by other tokens (including the current token). Allows\r\n *     token chaining or deferring.\r\n *   - `leadChar` {String} Single character that occurs at the beginning of any successful match\r\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\r\n *     you provide an erroneous value. However, providing it can increase the token's performance\r\n *     since the token can be skipped at any positions where this character doesn't appear.\r\n * @example\r\n *\r\n * // Basic usage: Add \\a for the ALERT control code\r\n * XRegExp.addToken(\r\n *   /\\\\a/,\r\n *   function() {return '\\\\x07';},\r\n *   {scope: 'all'}\r\n * );\r\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\r\n *\r\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\r\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\r\n * // character classes only)\r\n * XRegExp.addToken(\r\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\r\n *   function(match) {return match[1] + (match[2] ? '' : '?');},\r\n *   {flag: 'U'}\r\n * );\r\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\r\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\r\n */\r\nXRegExp.addToken = function(regex, handler, options) {\r\n    options = options || {};\r\n    var optionalFlags = options.optionalFlags;\r\n    var i;\r\n\r\n    if (options.flag) {\r\n        registerFlag(options.flag);\r\n    }\r\n\r\n    if (optionalFlags) {\r\n        optionalFlags = nativ.split.call(optionalFlags, '');\r\n        for (i = 0; i < optionalFlags.length; ++i) {\r\n            registerFlag(optionalFlags[i]);\r\n        }\r\n    }\r\n\r\n    // Add to the private list of syntax tokens\r\n    tokens.push({\r\n        regex: copyRegex(regex, {\r\n            addG: true,\r\n            addY: hasNativeY,\r\n            isInternalOnly: true\r\n        }),\r\n        handler: handler,\r\n        scope: options.scope || defaultScope,\r\n        flag: options.flag,\r\n        reparse: options.reparse,\r\n        leadChar: options.leadChar\r\n    });\r\n\r\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\r\n    // might now produce different results\r\n    XRegExp.cache.flush('patterns');\r\n};\r\n\r\n/**\r\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\r\n * the same pattern and flag combination, the cached copy of the regex is returned.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} pattern Regex pattern string.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Cached XRegExp object.\r\n * @example\r\n *\r\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\r\n *   // The regex is compiled once only\r\n * }\r\n */\r\nXRegExp.cache = function(pattern, flags) {\r\n    if (!regexCache[pattern]) {\r\n        regexCache[pattern] = {};\r\n    }\r\n    return regexCache[pattern][flags] || (\r\n        regexCache[pattern][flags] = XRegExp(pattern, flags)\r\n    );\r\n};\r\n\r\n// Intentionally undocumented; used in tests\r\nXRegExp.cache.flush = function(cacheName) {\r\n    if (cacheName === 'patterns') {\r\n        // Flush the pattern cache used by the `XRegExp` constructor\r\n        patternCache = {};\r\n    } else {\r\n        // Flush the regex cache populated by `XRegExp.cache`\r\n        regexCache = {};\r\n    }\r\n};\r\n\r\n/**\r\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\r\n * can safely be used at any point within a regex that uses any flags.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to escape.\r\n * @returns {String} String with regex metacharacters escaped.\r\n * @example\r\n *\r\n * XRegExp.escape('Escaped? <.>');\r\n * // -> 'Escaped\\?\\ <\\.>'\r\n */\r\nXRegExp.escape = function(str) {\r\n    return nativ.replace.call(toObject(str), /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n};\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\r\n * regex uses named capture, named backreference properties are included on the match array.\r\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\r\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\r\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Array} Match array with named backreference properties, or `null`.\r\n * @example\r\n *\r\n * // Basic use, with named backreference\r\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\r\n * match.hex; // -> '2620'\r\n *\r\n * // With pos and sticky, in a loop\r\n * var pos = 2, result = [], match;\r\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\r\n *   result.push(match[1]);\r\n *   pos = match.index + match[0].length;\r\n * }\r\n * // result -> ['2', '3', '4']\r\n */\r\nXRegExp.exec = function(str, regex, pos, sticky) {\r\n    var cacheKey = 'g';\r\n    var addY = false;\r\n    var fakeY = false;\r\n    var match;\r\n    var r2;\r\n\r\n    addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\r\n    if (addY) {\r\n        cacheKey += 'y';\r\n    } else if (sticky) {\r\n        // Simulate sticky matching by appending an empty capture to the original regex. The\r\n        // resulting regex will succeed no matter what at the current index (set with `lastIndex`),\r\n        // and will not search the rest of the subject string. We'll know that the original regex\r\n        // has failed if that last capture is `''` rather than `undefined` (i.e., if that last\r\n        // capture participated in the match).\r\n        fakeY = true;\r\n        cacheKey += 'FakeY';\r\n    }\r\n\r\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\r\n\r\n    // Shares cached copies with `XRegExp.match`/`replace`\r\n    r2 = regex[REGEX_DATA][cacheKey] || (\r\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\r\n            addG: true,\r\n            addY: addY,\r\n            source: fakeY ? regex.source + '|()' : undefined,\r\n            removeY: sticky === false,\r\n            isInternalOnly: true\r\n        })\r\n    );\r\n\r\n    pos = pos || 0;\r\n    r2.lastIndex = pos;\r\n\r\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\r\n    match = fixed.exec.call(r2, str);\r\n\r\n    // Get rid of the capture added by the pseudo-sticky matcher if needed. An empty string means\r\n    // the original regexp failed (see above).\r\n    if (fakeY && match && match.pop() === '') {\r\n        match = null;\r\n    }\r\n\r\n    if (regex.global) {\r\n        regex.lastIndex = match ? r2.lastIndex : 0;\r\n    }\r\n\r\n    return match;\r\n};\r\n\r\n/**\r\n * Executes a provided function once per regex match. Searches always start at the beginning of the\r\n * string and continue until the end, regardless of the state of the regex's `global` property and\r\n * initial `lastIndex`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\r\n *   - The match array, with named backreference properties.\r\n *   - The zero-based match index.\r\n *   - The string being traversed.\r\n *   - The regex object being used to traverse the string.\r\n * @example\r\n *\r\n * // Extracts every other digit from a string\r\n * var evens = [];\r\n * XRegExp.forEach('1a2345', /\\d/, function(match, i) {\r\n *   if (i % 2) evens.push(+match[0]);\r\n * });\r\n * // evens -> [2, 4]\r\n */\r\nXRegExp.forEach = function(str, regex, callback) {\r\n    var pos = 0;\r\n    var i = -1;\r\n    var match;\r\n\r\n    while ((match = XRegExp.exec(str, regex, pos))) {\r\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\r\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\r\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\r\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\r\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\r\n        // which is a nice side effect that brings extra safety.\r\n        callback(match, ++i, str, regex);\r\n\r\n        pos = match.index + (match[0].length || 1);\r\n    }\r\n};\r\n\r\n/**\r\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\r\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\r\n * regexes are not recompiled using XRegExp syntax.\r\n *\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex to globalize.\r\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\r\n * @example\r\n *\r\n * var globalCopy = XRegExp.globalize(/regex/);\r\n * globalCopy.global; // -> true\r\n */\r\nXRegExp.globalize = function(regex) {\r\n    return copyRegex(regex, {addG: true});\r\n};\r\n\r\n/**\r\n * Installs optional features according to the specified options. Can be undone using\r\n * `XRegExp.uninstall`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.install({\r\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\r\n *   astral: true,\r\n *\r\n *   // DEPRECATED: Overrides native regex methods with fixed/extended versions\r\n *   natives: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.install('astral natives');\r\n */\r\nXRegExp.install = function(options) {\r\n    options = prepareOptions(options);\r\n\r\n    if (!features.astral && options.astral) {\r\n        setAstral(true);\r\n    }\r\n\r\n    if (!features.natives && options.natives) {\r\n        setNatives(true);\r\n    }\r\n};\r\n\r\n/**\r\n * Checks whether an individual optional feature is installed.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} feature Name of the feature to check. One of:\r\n *   - `astral`\r\n *   - `natives`\r\n * @returns {Boolean} Whether the feature is installed.\r\n * @example\r\n *\r\n * XRegExp.isInstalled('astral');\r\n */\r\nXRegExp.isInstalled = function(feature) {\r\n    return !!(features[feature]);\r\n};\r\n\r\n/**\r\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\r\n * created in another frame, when `instanceof` and `constructor` checks would fail.\r\n *\r\n * @memberOf XRegExp\r\n * @param {*} value Object to check.\r\n * @returns {Boolean} Whether the object is a `RegExp` object.\r\n * @example\r\n *\r\n * XRegExp.isRegExp('string'); // -> false\r\n * XRegExp.isRegExp(/regex/i); // -> true\r\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\r\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\r\n */\r\nXRegExp.isRegExp = function(value) {\r\n    return toString.call(value) === '[object RegExp]';\r\n    //return isType(value, 'RegExp');\r\n};\r\n\r\n/**\r\n * Returns the first matched string, or in global mode, an array containing all matched strings.\r\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\r\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\r\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\r\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\r\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\r\n *   `scope` is 'all'.\r\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\r\n *   mode: Array of all matched strings, or an empty array.\r\n * @example\r\n *\r\n * // Match first\r\n * XRegExp.match('abc', /\\w/); // -> 'a'\r\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\r\n * XRegExp.match('abc', /x/g, 'one'); // -> null\r\n *\r\n * // Match all\r\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\r\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\r\n * XRegExp.match('abc', /x/, 'all'); // -> []\r\n */\r\nXRegExp.match = function(str, regex, scope) {\r\n    var global = (regex.global && scope !== 'one') || scope === 'all';\r\n    var cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY';\r\n    var result;\r\n    var r2;\r\n\r\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\r\n\r\n    // Shares cached copies with `XRegExp.exec`/`replace`\r\n    r2 = regex[REGEX_DATA][cacheKey] || (\r\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\r\n            addG: !!global,\r\n            removeG: scope === 'one',\r\n            isInternalOnly: true\r\n        })\r\n    );\r\n\r\n    result = nativ.match.call(toObject(str), r2);\r\n\r\n    if (regex.global) {\r\n        regex.lastIndex = (\r\n            (scope === 'one' && result) ?\r\n                // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\r\n                (result.index + result[0].length) : 0\r\n        );\r\n    }\r\n\r\n    return global ? (result || []) : (result && result[0]);\r\n};\r\n\r\n/**\r\n * Retrieves the matches from searching a string using a chain of regexes that successively search\r\n * within previous matches. The provided `chain` array can contain regexes and or objects with\r\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\r\n * backreference is passed forward to the next regex or returned.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} chain Regexes that each search for matches within preceding results.\r\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage; matches numbers within <b> tags\r\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\r\n *   XRegExp('(?is)<b>.*?</b>'),\r\n *   /\\d+/\r\n * ]);\r\n * // -> ['2', '4', '56']\r\n *\r\n * // Passing forward and returning specific backreferences\r\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\r\n *         <a href=\"http://www.google.com/\">Google</a>';\r\n * XRegExp.matchChain(html, [\r\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\r\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\r\n * ]);\r\n * // -> ['xregexp.com', 'www.google.com']\r\n */\r\nXRegExp.matchChain = function(str, chain) {\r\n    return (function recurseChain(values, level) {\r\n        var item = chain[level].regex ? chain[level] : {regex: chain[level]};\r\n        var matches = [];\r\n\r\n        function addMatch(match) {\r\n            if (item.backref) {\r\n                // Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold the\r\n                // `undefined`s for backreferences to nonparticipating capturing groups. In such\r\n                // cases, a `hasOwnProperty` or `in` check on its own would inappropriately throw\r\n                // the exception, so also check if the backreference is a number that is within the\r\n                // bounds of the array.\r\n                if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {\r\n                    throw new ReferenceError('Backreference to undefined group: ' + item.backref);\r\n                }\r\n\r\n                matches.push(match[item.backref] || '');\r\n            } else {\r\n                matches.push(match[0]);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < values.length; ++i) {\r\n            XRegExp.forEach(values[i], item.regex, addMatch);\r\n        }\r\n\r\n        return ((level === chain.length - 1) || !matches.length) ?\r\n            matches :\r\n            recurseChain(matches, level + 1);\r\n    }([str], 0));\r\n};\r\n\r\n/**\r\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\r\n * or regex, and the replacement can be a string or a function to be called for each match. To\r\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\r\n * a regex. Replacement strings can use `${n}` for named and numbered backreferences. Replacement\r\n * functions can use named backreferences via `arguments[0].name`. Also fixes browser bugs compared\r\n * to the native `String.prototype.replace` and can be used reliably cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n *   Replacement strings can include special replacement syntax:\r\n *     - $$ - Inserts a literal $ character.\r\n *     - $&, $0 - Inserts the matched substring.\r\n *     - $` - Inserts the string that precedes the matched substring (left context).\r\n *     - $' - Inserts the string that follows the matched substring (right context).\r\n *     - $n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\r\n *       backreference n/nn.\r\n *     - ${n} - Where n is a name or any number of digits that reference an existent capturing\r\n *       group, inserts backreference n.\r\n *   Replacement functions are invoked with three or more arguments:\r\n *     - The matched substring (corresponds to $& above). Named backreferences are accessible as\r\n *       properties of this first argument.\r\n *     - 0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\r\n *     - The zero-based index of the match within the total search string.\r\n *     - The total string being searched.\r\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\r\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\r\n * @returns {String} New string with one or all matches replaced.\r\n * @example\r\n *\r\n * // Regex search, using named backreferences in replacement string\r\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\r\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\r\n * // -> 'Smith, John'\r\n *\r\n * // Regex search, using named backreferences in replacement function\r\n * XRegExp.replace('John Smith', name, function(match) {\r\n *   return match.last + ', ' + match.first;\r\n * });\r\n * // -> 'Smith, John'\r\n *\r\n * // String search, with replace-all\r\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\r\n * // -> 'XRegExp builds XRegExps'\r\n */\r\nXRegExp.replace = function(str, search, replacement, scope) {\r\n    var isRegex = XRegExp.isRegExp(search);\r\n    var global = (search.global && scope !== 'one') || scope === 'all';\r\n    var cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY';\r\n    var s2 = search;\r\n    var result;\r\n\r\n    if (isRegex) {\r\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\r\n\r\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\r\n        // `lastIndex` isn't updated *during* replacement iterations\r\n        s2 = search[REGEX_DATA][cacheKey] || (\r\n            search[REGEX_DATA][cacheKey] = copyRegex(search, {\r\n                addG: !!global,\r\n                removeG: scope === 'one',\r\n                isInternalOnly: true\r\n            })\r\n        );\r\n    } else if (global) {\r\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\r\n    }\r\n\r\n    // Fixed `replace` required for named backreferences, etc.\r\n    result = fixed.replace.call(toObject(str), s2, replacement);\r\n\r\n    if (isRegex && search.global) {\r\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n        search.lastIndex = 0;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\r\n * array of replacement details. Later replacements operate on the output of earlier replacements.\r\n * Replacement details are accepted as an array with a regex or string to search for, the\r\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\r\n * replacement text syntax, which supports named backreference properties via `${name}`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} replacements Array of replacement detail arrays.\r\n * @returns {String} New string with all replacements.\r\n * @example\r\n *\r\n * str = XRegExp.replaceEach(str, [\r\n *   [XRegExp('(?<name>a)'), 'z${name}'],\r\n *   [/b/gi, 'y'],\r\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\r\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\r\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\r\n *   [/f/g, function($0) {\r\n *     return $0.toUpperCase();\r\n *   }]\r\n * ]);\r\n */\r\nXRegExp.replaceEach = function(str, replacements) {\r\n    var i;\r\n    var r;\r\n\r\n    for (i = 0; i < replacements.length; ++i) {\r\n        r = replacements[i];\r\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * Splits a string into an array of strings using a regex or string separator. Matches of the\r\n * separator are not included in the result array. However, if `separator` is a regex that contains\r\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\r\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\r\n * cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to split.\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.split('a b c', ' ');\r\n * // -> ['a', 'b', 'c']\r\n *\r\n * // With limit\r\n * XRegExp.split('a b c', ' ', 2);\r\n * // -> ['a', 'b']\r\n *\r\n * // Backreferences in result array\r\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\r\n * // -> ['..', 'word', '1', '..']\r\n */\r\nXRegExp.split = function(str, separator, limit) {\r\n    return fixed.split.call(toObject(str), separator, limit);\r\n};\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\r\n * `sticky` arguments specify the search start position, and whether the match must start at the\r\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\r\n * updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.test` and can be used reliably cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.test('abc', /c/); // -> true\r\n *\r\n * // With pos and sticky\r\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\r\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\r\n */\r\nXRegExp.test = function(str, regex, pos, sticky) {\r\n    // Do this the easy way :-)\r\n    return !!XRegExp.exec(str, regex, pos, sticky);\r\n};\r\n\r\n/**\r\n * Uninstalls optional features according to the specified options. All optional features start out\r\n * uninstalled, so this is used to undo the actions of `XRegExp.install`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.uninstall({\r\n *   // Disables support for astral code points in Unicode addons\r\n *   astral: true,\r\n *\r\n *   // DEPRECATED: Restores native regex methods\r\n *   natives: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.uninstall('astral natives');\r\n */\r\nXRegExp.uninstall = function(options) {\r\n    options = prepareOptions(options);\r\n\r\n    if (features.astral && options.astral) {\r\n        setAstral(false);\r\n    }\r\n\r\n    if (features.natives && options.natives) {\r\n        setNatives(false);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\r\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\r\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\r\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\r\n * `flags` argument.\r\n *\r\n * @memberOf XRegExp\r\n * @param {Array} patterns Regexes and strings to combine.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   - `conjunction` {String} Type of conjunction to use: 'or' (default) or 'none'.\r\n * @returns {RegExp} Union of the provided regexes and strings.\r\n * @example\r\n *\r\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\r\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\r\n *\r\n * XRegExp.union([/man/, /bear/, /pig/], 'i', {conjunction: 'none'});\r\n * // -> /manbearpig/i\r\n */\r\nXRegExp.union = function(patterns, flags, options) {\r\n    options = options || {};\r\n    var conjunction = options.conjunction || 'or';\r\n    var numCaptures = 0;\r\n    var numPriorCaptures;\r\n    var captureNames;\r\n\r\n    function rewrite(match, paren, backref) {\r\n        var name = captureNames[numCaptures - numPriorCaptures];\r\n\r\n        // Capturing group\r\n        if (paren) {\r\n            ++numCaptures;\r\n            // If the current capture has a name, preserve the name\r\n            if (name) {\r\n                return '(?<' + name + '>';\r\n            }\r\n        // Backreference\r\n        } else if (backref) {\r\n            // Rewrite the backreference\r\n            return '\\\\' + (+backref + numPriorCaptures);\r\n        }\r\n\r\n        return match;\r\n    }\r\n\r\n    if (!(isType(patterns, 'Array') && patterns.length)) {\r\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\r\n    }\r\n\r\n    var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\r\n    var output = [];\r\n    var pattern;\r\n    for (var i = 0; i < patterns.length; ++i) {\r\n        pattern = patterns[i];\r\n\r\n        if (XRegExp.isRegExp(pattern)) {\r\n            numPriorCaptures = numCaptures;\r\n            captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\r\n\r\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\r\n            // independently valid; helps keep this simple. Named captures are put back\r\n            output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\r\n        } else {\r\n            output.push(XRegExp.escape(pattern));\r\n        }\r\n    }\r\n\r\n    var separator = conjunction === 'none' ? '' : '|';\r\n    return XRegExp(output.join(separator), flags);\r\n};\r\n\r\n// ==--------------------------==\r\n// Fixed/extended native methods\r\n// ==--------------------------==\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method. Use via `XRegExp.exec` without overriding natives.\r\n *\r\n * @memberOf RegExp\r\n * @param {String} str String to search.\r\n * @returns {Array} Match array with named backreference properties, or `null`.\r\n */\r\nfixed.exec = function(str) {\r\n    var origLastIndex = this.lastIndex;\r\n    var match = nativ.exec.apply(this, arguments);\r\n    var name;\r\n    var r2;\r\n    var i;\r\n\r\n    if (match) {\r\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\r\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\r\n        // in standards mode follows the spec.\r\n        if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {\r\n            r2 = copyRegex(this, {\r\n                removeG: true,\r\n                isInternalOnly: true\r\n            });\r\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\r\n            // matching due to characters outside the match\r\n            nativ.replace.call(String(str).slice(match.index), r2, function() {\r\n                var len = arguments.length;\r\n                var i;\r\n                // Skip index 0 and the last 2\r\n                for (i = 1; i < len - 2; ++i) {\r\n                    if (arguments[i] === undefined) {\r\n                        match[i] = undefined;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Attach named capture properties\r\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\r\n            // Skip index 0\r\n            for (i = 1; i < match.length; ++i) {\r\n                name = this[REGEX_DATA].captureNames[i - 1];\r\n                if (name) {\r\n                    match[name] = match[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Fix browsers that increment `lastIndex` after zero-length matches\r\n        if (this.global && !match[0].length && (this.lastIndex > match.index)) {\r\n            this.lastIndex = match.index;\r\n        }\r\n    }\r\n\r\n    if (!this.global) {\r\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n        this.lastIndex = origLastIndex;\r\n    }\r\n\r\n    return match;\r\n};\r\n\r\n/**\r\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method.\r\n *\r\n * @memberOf RegExp\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n */\r\nfixed.test = function(str) {\r\n    // Do this the easy way :-)\r\n    return !!fixed.exec.call(this, str);\r\n};\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method.\r\n *\r\n * @memberOf String\r\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\r\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\r\n *   the result of calling `regex.exec(this)`.\r\n */\r\nfixed.match = function(regex) {\r\n    var result;\r\n\r\n    if (!XRegExp.isRegExp(regex)) {\r\n        // Use the native `RegExp` rather than `XRegExp`\r\n        regex = new RegExp(regex);\r\n    } else if (regex.global) {\r\n        result = nativ.match.apply(this, arguments);\r\n        // Fixes IE bug\r\n        regex.lastIndex = 0;\r\n\r\n        return result;\r\n    }\r\n\r\n    return fixed.exec.call(regex, toObject(this));\r\n};\r\n\r\n/**\r\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\r\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes browser\r\n * bugs in replacement text syntax when performing a replacement using a nonregex search value, and\r\n * the value of a replacement regex's `lastIndex` property during replacement iterations and upon\r\n * completion. Calling `XRegExp.install('natives')` uses this to override the native method. Note\r\n * that this doesn't support SpiderMonkey's proprietary third (`flags`) argument. Use via\r\n * `XRegExp.replace` without overriding natives.\r\n *\r\n * @memberOf String\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n * @returns {String} New string with one or all matches replaced.\r\n */\r\nfixed.replace = function(search, replacement) {\r\n    var isRegex = XRegExp.isRegExp(search);\r\n    var origLastIndex;\r\n    var captureNames;\r\n    var result;\r\n\r\n    if (isRegex) {\r\n        if (search[REGEX_DATA]) {\r\n            captureNames = search[REGEX_DATA].captureNames;\r\n        }\r\n        // Only needed if `search` is nonglobal\r\n        origLastIndex = search.lastIndex;\r\n    } else {\r\n        search += ''; // Type-convert\r\n    }\r\n\r\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\r\n    if (isType(replacement, 'Function')) {\r\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\r\n        // functions isn't type-converted to a string\r\n        result = nativ.replace.call(String(this), search, function() {\r\n            var args = arguments;\r\n            var i;\r\n            if (captureNames) {\r\n                // Change the `arguments[0]` string primitive to a `String` object that can store\r\n                // properties. This really does need to use `String` as a constructor\r\n                args[0] = new String(args[0]);\r\n                // Store named backreferences on the first argument\r\n                for (i = 0; i < captureNames.length; ++i) {\r\n                    if (captureNames[i]) {\r\n                        args[0][captureNames[i]] = args[i + 1];\r\n                    }\r\n                }\r\n            }\r\n            // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox, Safari\r\n            // bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\r\n            if (isRegex && search.global) {\r\n                search.lastIndex = args[args.length - 2] + args[0].length;\r\n            }\r\n            // ES6 specs the context for replacement functions as `undefined`\r\n            return replacement.apply(undefined, args);\r\n        });\r\n    } else {\r\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\r\n        // while still throwing on null or undefined context\r\n        result = nativ.replace.call(this == null ? this : String(this), search, function() {\r\n            // Keep this function's `arguments` available through closure\r\n            var args = arguments;\r\n            return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {\r\n                var n;\r\n                // Named or numbered backreference with curly braces\r\n                if ($1) {\r\n                    // XRegExp behavior for `${n}`:\r\n                    // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for the\r\n                    //    entire match. Any number of leading zeros may be used.\r\n                    // 2. Backreference to named capture `n`, if it exists and is not an integer\r\n                    //    overridden by numbered capture. In practice, this does not overlap with\r\n                    //    numbered capture since XRegExp does not allow named capture to use a bare\r\n                    //    integer as the name.\r\n                    // 3. If the name or number does not refer to an existing capturing group, it's\r\n                    //    an error.\r\n                    n = +$1; // Type-convert; drop leading zeros\r\n                    if (n <= args.length - 3) {\r\n                        return args[n] || '';\r\n                    }\r\n                    // Groups with the same name is an error, else would need `lastIndexOf`\r\n                    n = captureNames ? indexOf(captureNames, $1) : -1;\r\n                    if (n < 0) {\r\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\r\n                    }\r\n                    return args[n + 1] || '';\r\n                }\r\n                // Else, special variable or numbered backreference without curly braces\r\n                if ($2 === '$') { // $$\r\n                    return '$';\r\n                }\r\n                if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00\r\n                    return args[0];\r\n                }\r\n                if ($2 === '`') { // $` (left context)\r\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\r\n                }\r\n                if ($2 === \"'\") { // $' (right context)\r\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\r\n                }\r\n                // Else, numbered backreference without curly braces\r\n                $2 = +$2; // Type-convert; drop leading zero\r\n                // XRegExp behavior for `$n` and `$nn`:\r\n                // - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.\r\n                // - `$1` is an error if no capturing groups.\r\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.\r\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\r\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\r\n                // Native behavior, for comparison:\r\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\r\n                // - `$1` is a literal `$1` if no capturing groups.\r\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\r\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\r\n                // - `$0` is a literal `$0`.\r\n                if (!isNaN($2)) {\r\n                    if ($2 > args.length - 3) {\r\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\r\n                    }\r\n                    return args[$2] || '';\r\n                }\r\n                // `$` followed by an unsupported char is an error, unlike native JS\r\n                throw new SyntaxError('Invalid token ' + $0);\r\n            });\r\n        });\r\n    }\r\n\r\n    if (isRegex) {\r\n        if (search.global) {\r\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n            search.lastIndex = 0;\r\n        } else {\r\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n            search.lastIndex = origLastIndex;\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\r\n *\r\n * @memberOf String\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n */\r\nfixed.split = function(separator, limit) {\r\n    if (!XRegExp.isRegExp(separator)) {\r\n        // Browsers handle nonregex split correctly, so use the faster native method\r\n        return nativ.split.apply(this, arguments);\r\n    }\r\n\r\n    var str = String(this);\r\n    var output = [];\r\n    var origLastIndex = separator.lastIndex;\r\n    var lastLastIndex = 0;\r\n    var lastLength;\r\n\r\n    // Values for `limit`, per the spec:\r\n    // If undefined: pow(2,32) - 1\r\n    // If 0, Infinity, or NaN: 0\r\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\r\n    // If negative number: pow(2,32) - floor(abs(limit))\r\n    // If other: Type-convert, then use the above rules\r\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\r\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\r\n    limit = (limit === undefined ? -1 : limit) >>> 0;\r\n\r\n    XRegExp.forEach(str, separator, function(match) {\r\n        // This condition is not the same as `if (match[0].length)`\r\n        if ((match.index + match[0].length) > lastLastIndex) {\r\n            output.push(str.slice(lastLastIndex, match.index));\r\n            if (match.length > 1 && match.index < str.length) {\r\n                Array.prototype.push.apply(output, match.slice(1));\r\n            }\r\n            lastLength = match[0].length;\r\n            lastLastIndex = match.index + lastLength;\r\n        }\r\n    });\r\n\r\n    if (lastLastIndex === str.length) {\r\n        if (!nativ.test.call(separator, '') || lastLength) {\r\n            output.push('');\r\n        }\r\n    } else {\r\n        output.push(str.slice(lastLastIndex));\r\n    }\r\n\r\n    separator.lastIndex = origLastIndex;\r\n    return output.length > limit ? output.slice(0, limit) : output;\r\n};\r\n\r\n// ==--------------------------==\r\n// Built-in syntax/flag tokens\r\n// ==--------------------------==\r\n\r\n/*\r\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\r\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\r\n * consistency and to reserve their syntax, but lets them be superseded by addons.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\r\n    function(match, scope) {\r\n        // \\B is allowed in default scope only\r\n        if (match[1] === 'B' && scope === defaultScope) {\r\n            return match[0];\r\n        }\r\n        throw new SyntaxError('Invalid escape ' + match[0]);\r\n    },\r\n    {\r\n        scope: 'all',\r\n        leadChar: '\\\\'\r\n    }\r\n);\r\n\r\n/*\r\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\r\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\r\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\r\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\r\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\r\n * if you use the same in a character class.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\u{([\\dA-Fa-f]+)}/,\r\n    function(match, scope, flags) {\r\n        var code = dec(match[1]);\r\n        if (code > 0x10FFFF) {\r\n            throw new SyntaxError('Invalid Unicode code point ' + match[0]);\r\n        }\r\n        if (code <= 0xFFFF) {\r\n            // Converting to \\uNNNN avoids needing to escape the literal character and keep it\r\n            // separate from preceding tokens\r\n            return '\\\\u' + pad4(hex(code));\r\n        }\r\n        // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\r\n        if (hasNativeU && flags.indexOf('u') > -1) {\r\n            return match[0];\r\n        }\r\n        throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\r\n    },\r\n    {\r\n        scope: 'all',\r\n        leadChar: '\\\\'\r\n    }\r\n);\r\n\r\n/*\r\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\r\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\r\n * character class endings can't be determined.\r\n */\r\nXRegExp.addToken(\r\n    /\\[(\\^?)\\]/,\r\n    function(match) {\r\n        // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\r\n        // (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\r\n        return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\r\n    },\r\n    {leadChar: '['}\r\n);\r\n\r\n/*\r\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\r\n * free-spacing mode (flag x).\r\n */\r\nXRegExp.addToken(\r\n    /\\(\\?#[^)]*\\)/,\r\n    getContextualTokenSeparator,\r\n    {leadChar: '('}\r\n);\r\n\r\n/*\r\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\r\n */\r\nXRegExp.addToken(\r\n    /\\s+|#[^\\n]*\\n?/,\r\n    getContextualTokenSeparator,\r\n    {flag: 'x'}\r\n);\r\n\r\n/*\r\n * Dot, in dotall mode (aka singleline mode, flag s) only.\r\n */\r\nXRegExp.addToken(\r\n    /\\./,\r\n    function() {\r\n        return '[\\\\s\\\\S]';\r\n    },\r\n    {\r\n        flag: 's',\r\n        leadChar: '.'\r\n    }\r\n);\r\n\r\n/*\r\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\r\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\k<([\\w$]+)>/,\r\n    function(match) {\r\n        // Groups with the same name is an error, else would need `lastIndexOf`\r\n        var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1];\r\n        var endIndex = match.index + match[0].length;\r\n        if (!index || index > this.captureNames.length) {\r\n            throw new SyntaxError('Backreference to undefined group ' + match[0]);\r\n        }\r\n        // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\r\n        // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\r\n        return '\\\\' + index + (\r\n            endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?\r\n                '' : '(?:)'\r\n        );\r\n    },\r\n    {leadChar: '\\\\'}\r\n);\r\n\r\n/*\r\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\r\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\r\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\(\\d+)/,\r\n    function(match, scope) {\r\n        if (\r\n            !(\r\n                scope === defaultScope &&\r\n                /^[1-9]/.test(match[1]) &&\r\n                +match[1] <= this.captureNames.length\r\n            ) &&\r\n            match[1] !== '0'\r\n        ) {\r\n            throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +\r\n                match[0]);\r\n        }\r\n        return match[0];\r\n    },\r\n    {\r\n        scope: 'all',\r\n        leadChar: '\\\\'\r\n    }\r\n);\r\n\r\n/*\r\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\r\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\r\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\r\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\r\n * Python-style named capture as octals.\r\n */\r\nXRegExp.addToken(\r\n    /\\(\\?P?<([\\w$]+)>/,\r\n    function(match) {\r\n        // Disallow bare integers as names because named backreferences are added to match arrays\r\n        // and therefore numeric properties may lead to incorrect lookups\r\n        if (!isNaN(match[1])) {\r\n            throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\r\n        }\r\n        if (match[1] === 'length' || match[1] === '__proto__') {\r\n            throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\r\n        }\r\n        if (indexOf(this.captureNames, match[1]) > -1) {\r\n            throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\r\n        }\r\n        this.captureNames.push(match[1]);\r\n        this.hasNamedCapture = true;\r\n        return '(';\r\n    },\r\n    {leadChar: '('}\r\n);\r\n\r\n/*\r\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\r\n * groups. Also adds explicit capture mode (flag n).\r\n */\r\nXRegExp.addToken(\r\n    /\\((?!\\?)/,\r\n    function(match, scope, flags) {\r\n        if (flags.indexOf('n') > -1) {\r\n            return '(?:';\r\n        }\r\n        this.captureNames.push(null);\r\n        return '(';\r\n    },\r\n    {\r\n        optionalFlags: 'n',\r\n        leadChar: '('\r\n    }\r\n);\r\n\r\nmodule.exports = XRegExp;\r\n\n},{}]},{},[8])(8)\n});\n\n/***/ }),\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */\n/***/ (function(module, exports) {\n\n(function(angular){\n\n    angular.module('ngError', ['ng'])\n    \n    .directive('ngError', ['$parse', function($parse){\n\n        return {\n            restrict: 'A',\n            compile: function($element, attr) {\n                var fn = $parse(attr['ngError']);\n\n                return function(scope, element, attr) {\n                    element.on('error', function(event) {\n                        scope.$apply(function() {\n                            fn(scope, {$event:event});\n                        });\n                    });\n                };\n\n            }\n        };\n\n    }]);\n\n    \n})(angular);\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports) {\n\n(function(angular){\n\n    angular.module('ngLoad', ['ng'])\n    \n    .directive('ngLoad', ['$parse', function($parse){\n\n        return {\n            restrict: 'A',\n            compile: function($element, attr) {\n                var fn = $parse(attr['ngLoad']);\n\n                return function(scope, element, attr) {\n                    element.on('load', function(event) {\n                        scope.$apply(function() {\n                            fn(scope, {$event:event});\n                        });\n                    });\n                };\n\n            }\n        };\n\n    }]);\n\n    \n})(angular);\n\n/***/ }),\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(162), __esModule: true };\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(163);\nmodule.exports = __webpack_require__(2).Object.values;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__(5);\nvar $values = __webpack_require__(164)(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getKeys = __webpack_require__(30);\nvar toIObject = __webpack_require__(21);\nvar isEnum = __webpack_require__(165).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function(){\r\n  var crypt = __webpack_require__(185),\r\n      utf8 = __webpack_require__(59).utf8,\r\n      isBuffer = __webpack_require__(186),\r\n      bin = __webpack_require__(59).bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports) {\n\n(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n/***/ }),\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */,\n/* 192 */,\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(194)))\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(62);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/vendor.bundle.js"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n \t\tif(executeModules) {\n \t\t\tfor(i=0; i < executeModules.length; i++) {\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + ({\"0\":\"app\"}[chunkId]||chunkId) + \"-\" + {\"0\":\"092bac83c1136c989a96\"}[chunkId] + \".js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9ac45198b1ab350658b2","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = 0\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/createClass.js\n// module id = 1\n// module chunks = 1","var core = module.exports = { version: '2.5.0' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_core.js\n// module id = 2\n// module chunks = 1","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_wks.js\n// module id = 3\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/get-iterator.js\n// module id = 4\n// module chunks = 1","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_export.js\n// module id = 5\n// module chunks = 1","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-dp.js\n// module id = 6\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/map.js\n// module id = 7\n// module chunks = 1","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_global.js\n// module id = 8\n// module chunks = 1","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_descriptors.js\n// module id = 9\n// module chunks = 1","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_hide.js\n// module id = 10\n// module chunks = 1","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_is-object.js\n// module id = 11\n// module chunks = 1","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_ctx.js\n// module id = 12\n// module chunks = 1","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_an-object.js\n// module id = 13\n// module chunks = 1","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = 14\n// module chunks = 1","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iterators.js\n// module id = 15\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/slicedToArray.js\n// module id = 16\n// module chunks = 1","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_fails.js\n// module id = 17\n// module chunks = 1","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_has.js\n// module id = 18\n// module chunks = 1","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = 19\n// module chunks = 1","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-iobject.js\n// module id = 21\n// module chunks = 1","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-length.js\n// module id = 22\n// module chunks = 1","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-object.js\n// module id = 23\n// module chunks = 1","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_for-of.js\n// module id = 24\n// module chunks = 1","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_property-desc.js\n// module id = 25\n// module chunks = 1","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/helpers/toConsumableArray.js\n// module id = 26\n// module chunks = 1","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-integer.js\n// module id = 27\n// module chunks = 1","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_defined.js\n// module id = 28\n// module chunks = 1","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-define.js\n// module id = 29\n// module chunks = 1","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-keys.js\n// module id = 30\n// module chunks = 1","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_cof.js\n// module id = 31\n// module chunks = 1","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_shared-key.js\n// module id = 32\n// module chunks = 1","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_uid.js\n// module id = 33\n// module chunks = 1","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = 34\n// module chunks = 1","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 35\n// module chunks = 1","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_classof.js\n// module id = 36\n// module chunks = 1","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_validate-collection.js\n// module id = 37\n// module chunks = 1","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_a-function.js\n// module id = 38\n// module chunks = 1","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_dom-create.js\n// module id = 39\n// module chunks = 1","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-create.js\n// module id = 40\n// module chunks = 1","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iobject.js\n// module id = 41\n// module chunks = 1","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_shared.js\n// module id = 42\n// module chunks = 1","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = 43\n// module chunks = 1","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-call.js\n// module id = 44\n// module chunks = 1","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_is-array-iter.js\n// module id = 45\n// module chunks = 1","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-step.js\n// module id = 46\n// module chunks = 1","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_collection-strong.js\n// module id = 48\n// module chunks = 1","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_redefine-all.js\n// module id = 49\n// module chunks = 1","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_an-instance.js\n// module id = 50\n// module chunks = 1","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_meta.js\n// module id = 51\n// module chunks = 1","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_collection.js\n// module id = 52\n// module chunks = 1","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_collection-to-json.js\n// module id = 53\n// module chunks = 1","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-collection-of.js\n// module id = 54\n// module chunks = 1","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-collection-from.js\n// module id = 55\n// module chunks = 1","/*! angularjs-slider - v6.3.0 - \n (c) Rafal Zajac <rzajac@gmail.com>, Valentin Hervieu <valentin@hervieu.me>, Jussi Saarivirta <jusasi@gmail.com>, Angelin Sirbu <angelin.sirbu@gmail.com> - \n https://github.com/angular-slider/angularjs-slider - \n 2017-08-11 */\n/*jslint unparam: true */\n/*global angular: false, console: false, define, module */\n(function(root, factory) {\n  'use strict';\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['angular'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    // to support bundler like browserify\n    var angularObj = angular || require('angular');\n    if ((!angularObj || !angularObj.module) && typeof angular != 'undefined') {\n      angularObj = angular;\n    }\n    module.exports = factory(angularObj);\n  } else {\n    // Browser globals (root is window)\n    factory(root.angular);\n  }\n\n}(this, function(angular) {\n  'use strict';\n  var module = angular.module('rzModule', [])\n\n  .factory('RzSliderOptions', function() {\n    var defaultOptions = {\n      floor: 0,\n      ceil: null, //defaults to rz-slider-model\n      step: 1,\n      precision: 0,\n      minRange: null,\n      maxRange: null,\n      pushRange: false,\n      minLimit: null,\n      maxLimit: null,\n      id: null,\n      translate: null,\n      getLegend: null,\n      stepsArray: null,\n      bindIndexForStepsArray: false,\n      draggableRange: false,\n      draggableRangeOnly: false,\n      showSelectionBar: false,\n      showSelectionBarEnd: false,\n      showSelectionBarFromValue: null,\n      showOuterSelectionBars: false,\n      hidePointerLabels: false,\n      hideLimitLabels: false,\n      autoHideLimitLabels: true,\n      readOnly: false,\n      disabled: false,\n      interval: 350,\n      showTicks: false,\n      showTicksValues: false,\n      ticksArray: null,\n      ticksTooltip: null,\n      ticksValuesTooltip: null,\n      vertical: false,\n      getSelectionBarColor: null,\n      getTickColor: null,\n      getPointerColor: null,\n      keyboardSupport: true,\n      scale: 1,\n      enforceStep: true,\n      enforceRange: false,\n      noSwitching: false,\n      onlyBindHandles: false,\n      onStart: null,\n      onChange: null,\n      onEnd: null,\n      rightToLeft: false,\n      boundPointerLabels: true,\n      mergeRangeLabelsIfSame: false,\n      customTemplateScope: null,\n      logScale: false,\n      customValueToPosition: null,\n      customPositionToValue: null,\n      selectionBarGradient: null,\n      ariaLabel: null,\n      ariaLabelledBy: null,\n      ariaLabelHigh: null,\n      ariaLabelledByHigh: null\n    };\n    var globalOptions = {};\n\n    var factory = {};\n    /**\n     * `options({})` allows global configuration of all sliders in the\n     * application.\n     *\n     *   var app = angular.module( 'App', ['rzModule'], function( RzSliderOptions ) {\n     *     // show ticks for all sliders\n     *     RzSliderOptions.options( { showTicks: true } );\n     *   });\n     */\n    factory.options = function(value) {\n      angular.extend(globalOptions, value);\n    };\n\n    factory.getOptions = function(options) {\n      return angular.extend({}, defaultOptions, globalOptions, options);\n    };\n\n    return factory;\n  })\n\n  .factory('rzThrottle', ['$timeout', function($timeout) {\n    /**\n     * rzThrottle\n     *\n     * Taken from underscore project\n     *\n     * @param {Function} func\n     * @param {number} wait\n     * @param {ThrottleOptions} options\n     * @returns {Function}\n     */\n    return function(func, wait, options) {\n      'use strict';\n      /* istanbul ignore next */\n      var getTime = (Date.now || function() {\n        return new Date().getTime();\n      });\n      var context, args, result;\n      var timeout = null;\n      var previous = 0;\n      options = options || {};\n      var later = function() {\n        previous = getTime();\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      };\n      return function() {\n        var now = getTime();\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n          $timeout.cancel(timeout);\n          timeout = null;\n          previous = now;\n          result = func.apply(context, args);\n          context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n          timeout = $timeout(later, remaining);\n        }\n        return result;\n      };\n    }\n  }])\n\n  .factory('RzSlider', ['$timeout', '$document', '$window', '$compile', 'RzSliderOptions', 'rzThrottle', function($timeout, $document, $window, $compile, RzSliderOptions, rzThrottle) {\n    'use strict';\n\n    /**\n     * Slider\n     *\n     * @param {ngScope} scope            The AngularJS scope\n     * @param {Element} sliderElem The slider directive element wrapped in jqLite\n     * @constructor\n     */\n    var Slider = function(scope, sliderElem) {\n      /**\n       * The slider's scope\n       *\n       * @type {ngScope}\n       */\n      this.scope = scope;\n\n      /**\n       * The slider inner low value (linked to rzSliderModel)\n       * @type {number}\n       */\n      this.lowValue = 0;\n\n      /**\n       * The slider inner high value (linked to rzSliderHigh)\n       * @type {number}\n       */\n      this.highValue = 0;\n\n      /**\n       * Slider element wrapped in jqLite\n       *\n       * @type {jqLite}\n       */\n      this.sliderElem = sliderElem;\n\n      /**\n       * Slider type\n       *\n       * @type {boolean} Set to true for range slider\n       */\n      this.range = this.scope.rzSliderModel !== undefined && this.scope.rzSliderHigh !== undefined;\n\n      /**\n       * Values recorded when first dragging the bar\n       *\n       * @type {Object}\n       */\n      this.dragging = {\n        active: false,\n        value: 0,\n        difference: 0,\n        position: 0,\n        lowLimit: 0,\n        highLimit: 0\n      };\n\n      /**\n       * property that handle position (defaults to left for horizontal)\n       * @type {string}\n       */\n      this.positionProperty = 'left';\n\n      /**\n       * property that handle dimension (defaults to width for horizontal)\n       * @type {string}\n       */\n      this.dimensionProperty = 'width';\n\n      /**\n       * Half of the width or height of the slider handles\n       *\n       * @type {number}\n       */\n      this.handleHalfDim = 0;\n\n      /**\n       * Maximum position the slider handle can have\n       *\n       * @type {number}\n       */\n      this.maxPos = 0;\n\n      /**\n       * Precision\n       *\n       * @type {number}\n       */\n      this.precision = 0;\n\n      /**\n       * Step\n       *\n       * @type {number}\n       */\n      this.step = 1;\n\n      /**\n       * The name of the handle we are currently tracking\n       *\n       * @type {string}\n       */\n      this.tracking = '';\n\n      /**\n       * Minimum value (floor) of the model\n       *\n       * @type {number}\n       */\n      this.minValue = 0;\n\n      /**\n       * Maximum value (ceiling) of the model\n       *\n       * @type {number}\n       */\n      this.maxValue = 0;\n\n\n      /**\n       * The delta between min and max value\n       *\n       * @type {number}\n       */\n      this.valueRange = 0;\n\n\n      /**\n       * If showTicks/showTicksValues options are number.\n       * In this case, ticks values should be displayed below the slider.\n       * @type {boolean}\n       */\n      this.intermediateTicks = false;\n\n      /**\n       * Set to true if init method already executed\n       *\n       * @type {boolean}\n       */\n      this.initHasRun = false;\n\n      /**\n       * Used to call onStart on the first keydown event\n       *\n       * @type {boolean}\n       */\n      this.firstKeyDown = false;\n\n      /**\n       * Internal flag to prevent watchers to be called when the sliders value are modified internally.\n       * @type {boolean}\n       */\n      this.internalChange = false;\n\n      /**\n       * Internal flag to keep track of the visibility of combo label\n       * @type {boolean}\n       */\n      this.cmbLabelShown = false;\n\n      /**\n       * Internal variable to keep track of the focus element\n       */\n      this.currentFocusElement = null;\n\n      // Slider DOM elements wrapped in jqLite\n      this.fullBar = null; // The whole slider bar\n      this.selBar = null; // Highlight between two handles\n      this.minH = null; // Left slider handle\n      this.maxH = null; // Right slider handle\n      this.flrLab = null; // Floor label\n      this.ceilLab = null; // Ceiling label\n      this.minLab = null; // Label above the low value\n      this.maxLab = null; // Label above the high value\n      this.cmbLab = null; // Combined label\n      this.ticks = null; // The ticks\n\n      // Initialize slider\n      this.init();\n    };\n\n    // Add instance methods\n    Slider.prototype = {\n\n      /**\n       * Initialize slider\n       *\n       * @returns {undefined}\n       */\n      init: function() {\n        var thrLow, thrHigh,\n          self = this;\n\n        var calcDimFn = function() {\n          self.calcViewDimensions();\n        };\n\n        this.applyOptions();\n        this.syncLowValue();\n        if (this.range)\n          this.syncHighValue();\n        this.initElemHandles();\n        this.manageElementsStyle();\n        this.setDisabledState();\n        this.calcViewDimensions();\n        this.setMinAndMax();\n        this.addAccessibility();\n        this.updateCeilLab();\n        this.updateFloorLab();\n        this.initHandles();\n        this.manageEventsBindings();\n\n        // Recalculate slider view dimensions\n        this.scope.$on('reCalcViewDimensions', calcDimFn);\n\n        // Recalculate stuff if view port dimensions have changed\n        angular.element($window).on('resize', calcDimFn);\n\n        this.initHasRun = true;\n\n        // Watch for changes to the model\n        thrLow = rzThrottle(function() {\n          self.onLowHandleChange();\n        }, self.options.interval);\n\n        thrHigh = rzThrottle(function() {\n          self.onHighHandleChange();\n        }, self.options.interval);\n\n        this.scope.$on('rzSliderForceRender', function() {\n          self.resetLabelsValue();\n          thrLow();\n          if (self.range) {\n            thrHigh();\n          }\n          self.resetSlider();\n        });\n\n        // Watchers (order is important because in case of simultaneous change,\n        // watchers will be called in the same order)\n        this.scope.$watch('rzSliderOptions()', function(newValue, oldValue) {\n          if (newValue === oldValue)\n            return;\n          self.applyOptions(); // need to be called before synchronizing the values\n          self.syncLowValue();\n          if (self.range)\n            self.syncHighValue();\n          self.resetSlider();\n        }, true);\n\n        this.scope.$watch('rzSliderModel', function(newValue, oldValue) {\n          if (self.internalChange)\n            return;\n          if (newValue === oldValue)\n            return;\n          thrLow();\n        });\n\n        this.scope.$watch('rzSliderHigh', function(newValue, oldValue) {\n          if (self.internalChange)\n            return;\n          if (newValue === oldValue)\n            return;\n          if (newValue != null)\n            thrHigh();\n          if (self.range && newValue == null || !self.range && newValue != null) {\n            self.applyOptions();\n            self.resetSlider();\n          }\n        });\n\n        this.scope.$on('$destroy', function() {\n          self.unbindEvents();\n          angular.element($window).off('resize', calcDimFn);\n          self.currentFocusElement = null;\n        });\n      },\n\n      findStepIndex: function(modelValue) {\n        var index = 0;\n        for (var i = 0; i < this.options.stepsArray.length; i++) {\n          var step = this.options.stepsArray[i];\n          if (step === modelValue) {\n            index = i;\n            break;\n          }\n          else if (angular.isDate(step)) {\n            if (step.getTime() === modelValue.getTime()) {\n              index = i;\n              break;\n            }\n          }\n          else if (angular.isObject(step)) {\n            if (angular.isDate(step.value) && step.value.getTime() === modelValue.getTime() || step.value === modelValue) {\n              index = i;\n              break;\n            }\n          }\n        }\n        return index;\n      },\n\n      syncLowValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.lowValue = this.findStepIndex(this.scope.rzSliderModel);\n          else\n            this.lowValue = this.scope.rzSliderModel\n        }\n        else\n          this.lowValue = this.scope.rzSliderModel;\n      },\n\n      syncHighValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.highValue = this.findStepIndex(this.scope.rzSliderHigh);\n          else\n            this.highValue = this.scope.rzSliderHigh\n        }\n        else\n          this.highValue = this.scope.rzSliderHigh;\n      },\n\n      getStepValue: function(sliderValue) {\n        var step = this.options.stepsArray[sliderValue];\n        if (angular.isDate(step))\n          return step;\n        if (angular.isObject(step))\n          return step.value;\n        return step;\n      },\n\n      applyLowValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.scope.rzSliderModel = this.getStepValue(this.lowValue);\n          else\n            this.scope.rzSliderModel = this.lowValue\n        }\n        else\n          this.scope.rzSliderModel = this.lowValue;\n      },\n\n      applyHighValue: function() {\n        if (this.options.stepsArray) {\n          if (!this.options.bindIndexForStepsArray)\n            this.scope.rzSliderHigh = this.getStepValue(this.highValue);\n          else\n            this.scope.rzSliderHigh = this.highValue\n        }\n        else\n          this.scope.rzSliderHigh = this.highValue;\n      },\n\n      /*\n       * Reflow the slider when the low handle changes (called with throttle)\n       */\n      onLowHandleChange: function() {\n        this.syncLowValue();\n        if (this.range)\n          this.syncHighValue();\n        this.setMinAndMax();\n        this.updateLowHandle(this.valueToPosition(this.lowValue));\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateAriaAttributes();\n        if (this.range) {\n          this.updateCmbLabel();\n        }\n      },\n\n      /*\n       * Reflow the slider when the high handle changes (called with throttle)\n       */\n      onHighHandleChange: function() {\n        this.syncLowValue();\n        this.syncHighValue();\n        this.setMinAndMax();\n        this.updateHighHandle(this.valueToPosition(this.highValue));\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateCmbLabel();\n        this.updateAriaAttributes();\n      },\n\n      /**\n       * Read the user options and apply them to the slider model\n       */\n      applyOptions: function() {\n        var sliderOptions;\n        if (this.scope.rzSliderOptions)\n          sliderOptions = this.scope.rzSliderOptions();\n        else\n          sliderOptions = {};\n\n        this.options = RzSliderOptions.getOptions(sliderOptions);\n\n        if (this.options.step <= 0)\n          this.options.step = 1;\n\n        this.range = this.scope.rzSliderModel !== undefined && this.scope.rzSliderHigh !== undefined;\n        this.options.draggableRange = this.range && this.options.draggableRange;\n        this.options.draggableRangeOnly = this.range && this.options.draggableRangeOnly;\n        if (this.options.draggableRangeOnly) {\n          this.options.draggableRange = true;\n        }\n\n        this.options.showTicks = this.options.showTicks || this.options.showTicksValues || !!this.options.ticksArray;\n        this.scope.showTicks = this.options.showTicks; //scope is used in the template\n        if (angular.isNumber(this.options.showTicks) || this.options.ticksArray)\n          this.intermediateTicks = true;\n\n        this.options.showSelectionBar = this.options.showSelectionBar || this.options.showSelectionBarEnd\n          || this.options.showSelectionBarFromValue !== null;\n\n        if (this.options.stepsArray) {\n          this.parseStepsArray();\n        } else {\n          if (this.options.translate)\n            this.customTrFn = this.options.translate;\n          else\n            this.customTrFn = function(value) {\n              return String(value);\n            };\n\n          this.getLegend = this.options.getLegend;\n        }\n\n        if (this.options.vertical) {\n          this.positionProperty = 'bottom';\n          this.dimensionProperty = 'height';\n        }\n\n        if (this.options.customTemplateScope)\n          this.scope.custom = this.options.customTemplateScope;\n      },\n\n      parseStepsArray: function() {\n        this.options.floor = 0;\n        this.options.ceil = this.options.stepsArray.length - 1;\n        this.options.step = 1;\n\n        if (this.options.translate) {\n          this.customTrFn = this.options.translate;\n        }\n        else {\n          this.customTrFn = function(modelValue) {\n            if (this.options.bindIndexForStepsArray)\n              return this.getStepValue(modelValue);\n            return modelValue;\n          };\n        }\n\n        this.getLegend = function(index) {\n          var step = this.options.stepsArray[index];\n          if (angular.isObject(step))\n            return step.legend;\n          return null;\n        };\n      },\n\n      /**\n       * Resets slider\n       *\n       * @returns {undefined}\n       */\n      resetSlider: function() {\n        this.manageElementsStyle();\n        this.addAccessibility();\n        this.setMinAndMax();\n        this.updateCeilLab();\n        this.updateFloorLab();\n        this.unbindEvents();\n        this.manageEventsBindings();\n        this.setDisabledState();\n        this.calcViewDimensions();\n        this.refocusPointerIfNeeded();\n      },\n\n      refocusPointerIfNeeded: function() {\n        if (this.currentFocusElement) {\n          this.onPointerFocus(this.currentFocusElement.pointer, this.currentFocusElement.ref);\n          this.focusElement(this.currentFocusElement.pointer)\n        }\n      },\n\n      /**\n       * Set the slider children to variables for easy access\n       *\n       * Run only once during initialization\n       *\n       * @returns {undefined}\n       */\n      initElemHandles: function() {\n        // Assign all slider elements to object properties for easy access\n        angular.forEach(this.sliderElem.children(), function(elem, index) {\n          var jElem = angular.element(elem);\n\n          switch (index) {\n            case 0:\n              this.leftOutSelBar = jElem;\n              break;\n            case 1:\n              this.rightOutSelBar = jElem;\n              break;\n            case 2:\n              this.fullBar = jElem;\n              break;\n            case 3:\n              this.selBar = jElem;\n              break;\n            case 4:\n              this.minH = jElem;\n              break;\n            case 5:\n              this.maxH = jElem;\n              break;\n            case 6:\n              this.flrLab = jElem;\n              break;\n            case 7:\n              this.ceilLab = jElem;\n              break;\n            case 8:\n              this.minLab = jElem;\n              break;\n            case 9:\n              this.maxLab = jElem;\n              break;\n            case 10:\n              this.cmbLab = jElem;\n              break;\n            case 11:\n              this.ticks = jElem;\n              break;\n          }\n\n        }, this);\n\n        // Initialize position cache properties\n        this.selBar.rzsp = 0;\n        this.minH.rzsp = 0;\n        this.maxH.rzsp = 0;\n        this.flrLab.rzsp = 0;\n        this.ceilLab.rzsp = 0;\n        this.minLab.rzsp = 0;\n        this.maxLab.rzsp = 0;\n        this.cmbLab.rzsp = 0;\n      },\n\n      /**\n       * Update each elements style based on options\n       */\n      manageElementsStyle: function() {\n\n        if (!this.range)\n          this.maxH.css('display', 'none');\n        else\n          this.maxH.css('display', '');\n\n\n        this.alwaysHide(this.flrLab, this.options.showTicksValues || this.options.hideLimitLabels);\n        this.alwaysHide(this.ceilLab, this.options.showTicksValues || this.options.hideLimitLabels);\n\n        var hideLabelsForTicks = this.options.showTicksValues && !this.intermediateTicks;\n        this.alwaysHide(this.minLab, hideLabelsForTicks || this.options.hidePointerLabels);\n        this.alwaysHide(this.maxLab, hideLabelsForTicks || !this.range || this.options.hidePointerLabels);\n        this.alwaysHide(this.cmbLab, hideLabelsForTicks || !this.range || this.options.hidePointerLabels);\n        this.alwaysHide(this.selBar, !this.range && !this.options.showSelectionBar);\n        this.alwaysHide(this.leftOutSelBar, !this.range || !this.options.showOuterSelectionBars);\n        this.alwaysHide(this.rightOutSelBar, !this.range || !this.options.showOuterSelectionBars);\n\n        if ( this.range && this.options.showOuterSelectionBars ) {\n          this.fullBar.addClass('rz-transparent');\n        }\n\n        if (this.options.vertical)\n          this.sliderElem.addClass('rz-vertical');\n\n        if (this.options.draggableRange)\n          this.selBar.addClass('rz-draggable');\n        else\n          this.selBar.removeClass('rz-draggable');\n\n        if (this.intermediateTicks && this.options.showTicksValues)\n          this.ticks.addClass('rz-ticks-values-under');\n      },\n\n      alwaysHide: function(el, hide) {\n        el.rzAlwaysHide = hide;\n        if (hide)\n          this.hideEl(el);\n        else\n          this.showEl(el)\n      },\n\n      /**\n       * Manage the events bindings based on readOnly and disabled options\n       *\n       * @returns {undefined}\n       */\n      manageEventsBindings: function() {\n        if (this.options.disabled || this.options.readOnly)\n          this.unbindEvents();\n        else\n          this.bindEvents();\n      },\n\n      /**\n       * Set the disabled state based on rzSliderDisabled\n       *\n       * @returns {undefined}\n       */\n      setDisabledState: function() {\n        if (this.options.disabled) {\n          this.sliderElem.attr('disabled', 'disabled');\n        } else {\n          this.sliderElem.attr('disabled', null);\n        }\n      },\n\n      /**\n       * Reset label values\n       *\n       * @return {undefined}\n       */\n      resetLabelsValue: function() {\n        this.minLab.rzsv = undefined;\n        this.maxLab.rzsv = undefined;\n      },\n\n      /**\n       * Initialize slider handles positions and labels\n       *\n       * Run only once during initialization and every time view port changes size\n       *\n       * @returns {undefined}\n       */\n      initHandles: function() {\n        this.updateLowHandle(this.valueToPosition(this.lowValue));\n\n        /*\n         the order here is important since the selection bar should be\n         updated after the high handle but before the combined label\n         */\n        if (this.range)\n          this.updateHighHandle(this.valueToPosition(this.highValue));\n        this.updateSelectionBar();\n        if (this.range)\n          this.updateCmbLabel();\n\n        this.updateTicksScale();\n      },\n\n      /**\n       * Translate value to human readable format\n       *\n       * @param {number|string} value\n       * @param {jqLite} label\n       * @param {String} which\n       * @param {boolean} [useCustomTr]\n       * @returns {undefined}\n       */\n      translateFn: function(value, label, which, useCustomTr) {\n        useCustomTr = useCustomTr === undefined ? true : useCustomTr;\n\n        var valStr = '',\n          getDimension = false,\n          noLabelInjection = label.hasClass('no-label-injection');\n\n        if (useCustomTr) {\n          if (this.options.stepsArray && !this.options.bindIndexForStepsArray)\n            value = this.getStepValue(value);\n          valStr = String(this.customTrFn(value, this.options.id, which));\n        }\n        else {\n          valStr = String(value)\n        }\n\n        if (label.rzsv === undefined || label.rzsv.length !== valStr.length || (label.rzsv.length > 0 && label.rzsd === 0)) {\n          getDimension = true;\n          label.rzsv = valStr;\n        }\n\n        if (!noLabelInjection) {\n          label.html(valStr);\n        }\n        ;\n\n        this.scope[which + 'Label'] = valStr;\n\n        // Update width only when length of the label have changed\n        if (getDimension) {\n          this.getDimension(label);\n        }\n      },\n\n      /**\n       * Set maximum and minimum values for the slider and ensure the model and high\n       * value match these limits\n       * @returns {undefined}\n       */\n      setMinAndMax: function() {\n\n        this.step = +this.options.step;\n        this.precision = +this.options.precision;\n\n        this.minValue = this.options.floor;\n        if (this.options.logScale && this.minValue === 0)\n          throw Error(\"Can't use floor=0 with logarithmic scale\");\n\n        if (this.options.enforceStep) {\n          this.lowValue = this.roundStep(this.lowValue);\n          if (this.range)\n            this.highValue = this.roundStep(this.highValue);\n        }\n\n        if (this.options.ceil != null)\n          this.maxValue = this.options.ceil;\n        else\n          this.maxValue = this.options.ceil = this.range ? this.highValue : this.lowValue;\n\n        if (this.options.enforceRange) {\n          this.lowValue = this.sanitizeValue(this.lowValue);\n          if (this.range)\n            this.highValue = this.sanitizeValue(this.highValue);\n        }\n\n        this.applyLowValue();\n        if (this.range)\n          this.applyHighValue();\n\n        this.valueRange = this.maxValue - this.minValue;\n      },\n\n      /**\n       * Adds accessibility attributes\n       *\n       * Run only once during initialization\n       *\n       * @returns {undefined}\n       */\n      addAccessibility: function() {\n        this.minH.attr('role', 'slider');\n        this.updateAriaAttributes();\n        if (this.options.keyboardSupport && !(this.options.readOnly || this.options.disabled))\n          this.minH.attr('tabindex', '0');\n        else\n          this.minH.attr('tabindex', '');\n        if (this.options.vertical)\n          this.minH.attr('aria-orientation', 'vertical');\n        if (this.options.ariaLabel)\n          this.minH.attr('aria-label', this.options.ariaLabel);\n        else if (this.options.ariaLabelledBy)\n          this.minH.attr('aria-labelledby', this.options.ariaLabelledBy);\n\n        if (this.range) {\n          this.maxH.attr('role', 'slider');\n          if (this.options.keyboardSupport && !(this.options.readOnly || this.options.disabled))\n            this.maxH.attr('tabindex', '0');\n          else\n            this.maxH.attr('tabindex', '');\n          if (this.options.vertical)\n            this.maxH.attr('aria-orientation', 'vertical');\n          if (this.options.ariaLabelHigh)\n            this.maxH.attr('aria-label', this.options.ariaLabelHigh);\n          else if (this.options.ariaLabelledByHigh)\n            this.maxH.attr('aria-labelledby', this.options.ariaLabelledByHigh);\n        }\n      },\n\n      /**\n       * Updates aria attributes according to current values\n       */\n      updateAriaAttributes: function() {\n        this.minH.attr({\n          'aria-valuenow': this.scope.rzSliderModel,\n          'aria-valuetext': this.customTrFn(this.scope.rzSliderModel, this.options.id, 'model'),\n          'aria-valuemin': this.minValue,\n          'aria-valuemax': this.maxValue\n        });\n        if (this.range) {\n          this.maxH.attr({\n            'aria-valuenow': this.scope.rzSliderHigh,\n            'aria-valuetext': this.customTrFn(this.scope.rzSliderHigh, this.options.id, 'high'),\n            'aria-valuemin': this.minValue,\n            'aria-valuemax': this.maxValue\n          });\n        }\n      },\n\n      /**\n       * Calculate dimensions that are dependent on view port size\n       *\n       * Run once during initialization and every time view port changes size.\n       *\n       * @returns {undefined}\n       */\n      calcViewDimensions: function() {\n        var handleWidth = this.getDimension(this.minH);\n\n        this.handleHalfDim = handleWidth / 2;\n        this.barDimension = this.getDimension(this.fullBar);\n\n        this.maxPos = this.barDimension - handleWidth;\n\n        this.getDimension(this.sliderElem);\n        this.sliderElem.rzsp = this.sliderElem[0].getBoundingClientRect()[this.positionProperty];\n\n        if (this.initHasRun) {\n          this.updateFloorLab();\n          this.updateCeilLab();\n          this.initHandles();\n          var self = this;\n          $timeout(function() {\n            self.updateTicksScale();\n          });\n        }\n      },\n\n      /**\n       * Update the ticks position\n       *\n       * @returns {undefined}\n       */\n      updateTicksScale: function() {\n        if (!this.options.showTicks) return;\n\n        var ticksArray = this.options.ticksArray || this.getTicksArray(),\n          translate = this.options.vertical ? 'translateY' : 'translateX',\n          self = this;\n\n        if (this.options.rightToLeft)\n          ticksArray.reverse();\n\n        this.scope.ticks = ticksArray.map(function(value) {\n          var position = self.valueToPosition(value);\n\n          if (self.options.vertical)\n            position = self.maxPos - position;\n\n          var translation = translate + '(' + Math.round(position) + 'px)';\n          var tick = {\n            selected: self.isTickSelected(value),\n            style: {\n              '-webkit-transform': translation,\n              '-moz-transform': translation,\n              '-o-transform': translation,\n              '-ms-transform': translation,\n              'transform': translation\n            }\n          };\n          if (tick.selected && self.options.getSelectionBarColor) {\n            tick.style['background-color'] = self.getSelectionBarColor();\n          }\n          if (!tick.selected && self.options.getTickColor) {\n            tick.style['background-color'] = self.getTickColor(value);\n          }\n          if (self.options.ticksTooltip) {\n            tick.tooltip = self.options.ticksTooltip(value);\n            tick.tooltipPlacement = self.options.vertical ? 'right' : 'top';\n          }\n          if (self.options.showTicksValues === true || value % self.options.showTicksValues === 0) {\n            tick.value = self.getDisplayValue(value, 'tick-value');\n            if (self.options.ticksValuesTooltip) {\n              tick.valueTooltip = self.options.ticksValuesTooltip(value);\n              tick.valueTooltipPlacement = self.options.vertical ? 'right' : 'top';\n            }\n          }\n          if (self.getLegend) {\n            var legend = self.getLegend(value, self.options.id);\n            if (legend)\n              tick.legend = legend;\n          }\n          return tick;\n        });\n      },\n\n      getTicksArray: function() {\n        var step = this.step,\n          ticksArray = [];\n        if (this.intermediateTicks)\n          step = this.options.showTicks;\n        for (var value = this.minValue; value <= this.maxValue; value += step) {\n          ticksArray.push(value);\n        }\n        return ticksArray;\n      },\n\n      isTickSelected: function(value) {\n        if (!this.range) {\n          if (this.options.showSelectionBarFromValue !== null) {\n            var center = this.options.showSelectionBarFromValue;\n            if (this.lowValue > center && value >= center && value <= this.lowValue)\n              return true;\n            else if (this.lowValue < center && value <= center && value >= this.lowValue)\n              return true;\n          }\n          else if (this.options.showSelectionBarEnd) {\n            if (value >= this.lowValue)\n              return true;\n          }\n          else if (this.options.showSelectionBar && value <= this.lowValue)\n            return true;\n        }\n        if (this.range && value >= this.lowValue && value <= this.highValue)\n          return true;\n        return false;\n      },\n\n      /**\n       * Update position of the floor label\n       *\n       * @returns {undefined}\n       */\n      updateFloorLab: function() {\n        this.translateFn(this.minValue, this.flrLab, 'floor');\n        this.getDimension(this.flrLab);\n        var position = this.options.rightToLeft ? this.barDimension - this.flrLab.rzsd : 0;\n        this.setPosition(this.flrLab, position);\n      },\n\n      /**\n       * Update position of the ceiling label\n       *\n       * @returns {undefined}\n       */\n      updateCeilLab: function() {\n        this.translateFn(this.maxValue, this.ceilLab, 'ceil');\n        this.getDimension(this.ceilLab);\n        var position = this.options.rightToLeft ? 0 : this.barDimension - this.ceilLab.rzsd;\n        this.setPosition(this.ceilLab, position);\n      },\n\n      /**\n       * Update slider handles and label positions\n       *\n       * @param {string} which\n       * @param {number} newPos\n       */\n      updateHandles: function(which, newPos) {\n        if (which === 'lowValue')\n          this.updateLowHandle(newPos);\n        else\n          this.updateHighHandle(newPos);\n\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        if (this.range)\n          this.updateCmbLabel();\n      },\n\n      /**\n       * Helper function to work out the position for handle labels depending on RTL or not\n       *\n       * @param {string} labelName maxLab or minLab\n       * @param newPos\n       *\n       * @returns {number}\n       */\n      getHandleLabelPos: function(labelName, newPos) {\n        var labelRzsd = this[labelName].rzsd,\n          nearHandlePos = newPos - labelRzsd / 2 + this.handleHalfDim,\n          endOfBarPos = this.barDimension - labelRzsd;\n\n        if (!this.options.boundPointerLabels)\n          return nearHandlePos;\n\n        if (this.options.rightToLeft && labelName === 'minLab' || !this.options.rightToLeft && labelName === 'maxLab') {\n          return Math.min(nearHandlePos, endOfBarPos);\n        } else {\n          return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n        }\n      },\n\n      /**\n       * Update low slider handle position and label\n       *\n       * @param {number} newPos\n       * @returns {undefined}\n       */\n      updateLowHandle: function(newPos) {\n        this.setPosition(this.minH, newPos);\n        this.translateFn(this.lowValue, this.minLab, 'model');\n        this.setPosition(this.minLab, this.getHandleLabelPos('minLab', newPos));\n\n        if (this.options.getPointerColor) {\n          var pointercolor = this.getPointerColor('min');\n          this.scope.minPointerStyle = {\n            backgroundColor: pointercolor\n          };\n        }\n\n        if (this.options.autoHideLimitLabels) {\n          this.shFloorCeil();\n        }\n      },\n\n      /**\n       * Update high slider handle position and label\n       *\n       * @param {number} newPos\n       * @returns {undefined}\n       */\n      updateHighHandle: function(newPos) {\n        this.setPosition(this.maxH, newPos);\n        this.translateFn(this.highValue, this.maxLab, 'high');\n        this.setPosition(this.maxLab, this.getHandleLabelPos('maxLab', newPos));\n\n        if (this.options.getPointerColor) {\n          var pointercolor = this.getPointerColor('max');\n          this.scope.maxPointerStyle = {\n            backgroundColor: pointercolor\n          };\n        }\n        if (this.options.autoHideLimitLabels) {\n          this.shFloorCeil();\n        }\n\n      },\n\n      /**\n       * Show/hide floor/ceiling label\n       *\n       * @returns {undefined}\n       */\n      shFloorCeil: function() {\n        // Show based only on hideLimitLabels if pointer labels are hidden\n        if (this.options.hidePointerLabels) {\n          return;\n        }\n        var flHidden = false,\n          clHidden = false,\n          isMinLabAtFloor = this.isLabelBelowFloorLab(this.minLab),\n          isMinLabAtCeil = this.isLabelAboveCeilLab(this.minLab),\n          isMaxLabAtCeil = this.isLabelAboveCeilLab(this.maxLab),\n          isCmbLabAtFloor = this.isLabelBelowFloorLab(this.cmbLab),\n          isCmbLabAtCeil = this.isLabelAboveCeilLab(this.cmbLab);\n\n        if (isMinLabAtFloor) {\n          flHidden = true;\n          this.hideEl(this.flrLab);\n        } else {\n          flHidden = false;\n          this.showEl(this.flrLab);\n        }\n\n        if (isMinLabAtCeil) {\n          clHidden = true;\n          this.hideEl(this.ceilLab);\n        } else {\n          clHidden = false;\n          this.showEl(this.ceilLab);\n        }\n\n        if (this.range) {\n          var hideCeil = this.cmbLabelShown ? isCmbLabAtCeil : isMaxLabAtCeil;\n          var hideFloor = this.cmbLabelShown ? isCmbLabAtFloor : isMinLabAtFloor;\n\n          if (hideCeil) {\n            this.hideEl(this.ceilLab);\n          } else if (!clHidden) {\n            this.showEl(this.ceilLab);\n          }\n\n          // Hide or show floor label\n          if (hideFloor) {\n            this.hideEl(this.flrLab);\n          } else if (!flHidden) {\n            this.showEl(this.flrLab);\n          }\n        }\n      },\n\n      isLabelBelowFloorLab: function(label) {\n        var isRTL = this.options.rightToLeft,\n          pos = label.rzsp,\n          dim = label.rzsd,\n          floorPos = this.flrLab.rzsp,\n          floorDim = this.flrLab.rzsd;\n        return isRTL ?\n          pos + dim >= floorPos - 2 :\n          pos <= floorPos + floorDim + 2;\n      },\n\n      isLabelAboveCeilLab: function(label) {\n        var isRTL = this.options.rightToLeft,\n          pos = label.rzsp,\n          dim = label.rzsd,\n          ceilPos = this.ceilLab.rzsp,\n          ceilDim = this.ceilLab.rzsd;\n        return isRTL ?\n          pos <= ceilPos + ceilDim + 2 :\n          pos + dim >= ceilPos - 2;\n      },\n\n      /**\n       * Update slider selection bar, combined label and range label\n       *\n       * @returns {undefined}\n       */\n      updateSelectionBar: function() {\n        var position = 0,\n          dimension = 0,\n          isSelectionBarFromRight = this.options.rightToLeft ? !this.options.showSelectionBarEnd : this.options.showSelectionBarEnd,\n          positionForRange = this.options.rightToLeft ? this.maxH.rzsp + this.handleHalfDim : this.minH.rzsp + this.handleHalfDim;\n\n        if (this.range) {\n          dimension = Math.abs(this.maxH.rzsp - this.minH.rzsp);\n          position = positionForRange;\n        }\n        else {\n          if (this.options.showSelectionBarFromValue !== null) {\n            var center = this.options.showSelectionBarFromValue,\n              centerPosition = this.valueToPosition(center),\n              isModelGreaterThanCenter = this.options.rightToLeft ? this.lowValue <= center : this.lowValue > center;\n            if (isModelGreaterThanCenter) {\n              dimension = this.minH.rzsp - centerPosition;\n              position = centerPosition + this.handleHalfDim;\n            }\n            else {\n              dimension = centerPosition - this.minH.rzsp;\n              position = this.minH.rzsp + this.handleHalfDim;\n            }\n          }\n          else if (isSelectionBarFromRight) {\n            dimension = Math.abs(this.maxPos - this.minH.rzsp) + this.handleHalfDim;\n            position = this.minH.rzsp + this.handleHalfDim;\n          } else {\n            dimension = this.minH.rzsp + this.handleHalfDim;\n            position = 0;\n          }\n        }\n        this.setDimension(this.selBar, dimension);\n        this.setPosition(this.selBar, position);\n        if (this.range && this.options.showOuterSelectionBars) {\n          if (this.options.rightToLeft) {\n            this.setDimension(this.rightOutSelBar, position);\n            this.setPosition(this.rightOutSelBar, 0);\n            this.setDimension(this.leftOutSelBar, this.getDimension(this.fullBar) - (position + dimension));\n            this.setPosition(this.leftOutSelBar, position + dimension);\n          } else {\n            this.setDimension(this.leftOutSelBar, position);\n            this.setPosition(this.leftOutSelBar, 0);\n            this.setDimension(this.rightOutSelBar, this.getDimension(this.fullBar) - (position + dimension));\n            this.setPosition(this.rightOutSelBar, position + dimension);\n          }\n        }\n        if (this.options.getSelectionBarColor) {\n          var color = this.getSelectionBarColor();\n          this.scope.barStyle = {\n            backgroundColor: color\n          };\n        } else if (this.options.selectionBarGradient) {\n          var offset = this.options.showSelectionBarFromValue !== null ? this.valueToPosition(this.options.showSelectionBarFromValue) : 0,\n            reversed = offset - position > 0 ^ isSelectionBarFromRight,\n            direction = this.options.vertical ? (reversed ? 'bottom' : 'top') : (reversed ? 'left' : 'right');\n          this.scope.barStyle = {\n            backgroundImage: 'linear-gradient(to ' + direction + ', ' + this.options.selectionBarGradient.from + ' 0%,' + this.options.selectionBarGradient.to + ' 100%)'\n          };\n          if (this.options.vertical) {\n            this.scope.barStyle.backgroundPosition = 'center ' + (offset + dimension + position + (reversed ? -this.handleHalfDim : 0)) + 'px';\n            this.scope.barStyle.backgroundSize = '100% ' + (this.barDimension - this.handleHalfDim) + 'px';\n          } else {\n            this.scope.barStyle.backgroundPosition = (offset - position + (reversed ? this.handleHalfDim : 0)) + 'px center';\n            this.scope.barStyle.backgroundSize = (this.barDimension - this.handleHalfDim) + 'px 100%';\n          }\n        }\n      },\n\n      /**\n       * Wrapper around the getSelectionBarColor of the user to pass to\n       * correct parameters\n       */\n      getSelectionBarColor: function() {\n        if (this.range)\n          return this.options.getSelectionBarColor(this.scope.rzSliderModel, this.scope.rzSliderHigh);\n        return this.options.getSelectionBarColor(this.scope.rzSliderModel);\n      },\n\n      /**\n       * Wrapper around the getPointerColor of the user to pass to\n       * correct parameters\n       */\n      getPointerColor: function(pointerType) {\n        if (pointerType === 'max') {\n          return this.options.getPointerColor(this.scope.rzSliderHigh, pointerType);\n        }\n        return this.options.getPointerColor(this.scope.rzSliderModel, pointerType);\n      },\n\n      /**\n       * Wrapper around the getTickColor of the user to pass to\n       * correct parameters\n       */\n      getTickColor: function(value) {\n        return this.options.getTickColor(value);\n      },\n\n      /**\n       * Update combined label position and value\n       *\n       * @returns {undefined}\n       */\n      updateCmbLabel: function() {\n        var isLabelOverlap = null;\n        if (this.options.rightToLeft) {\n          isLabelOverlap = this.minLab.rzsp - this.minLab.rzsd - 10 <= this.maxLab.rzsp;\n        } else {\n          isLabelOverlap = this.minLab.rzsp + this.minLab.rzsd + 10 >= this.maxLab.rzsp;\n        }\n\n        if (isLabelOverlap) {\n          var lowTr = this.getDisplayValue(this.lowValue, 'model'),\n            highTr = this.getDisplayValue(this.highValue, 'high'),\n            labelVal = '';\n          if (this.options.mergeRangeLabelsIfSame && lowTr === highTr) {\n            labelVal = lowTr;\n          } else {\n            labelVal = this.options.rightToLeft ? highTr + ' - ' + lowTr : lowTr + ' - ' + highTr;\n          }\n\n          this.translateFn(labelVal, this.cmbLab, 'cmb', false);\n          var pos = this.options.boundPointerLabels ? Math.min(\n            Math.max(\n              this.selBar.rzsp + this.selBar.rzsd / 2 - this.cmbLab.rzsd / 2,\n              0\n            ),\n            this.barDimension - this.cmbLab.rzsd\n          ) : this.selBar.rzsp + this.selBar.rzsd / 2 - this.cmbLab.rzsd / 2;\n\n          this.setPosition(this.cmbLab, pos);\n          this.cmbLabelShown = true;\n          this.hideEl(this.minLab);\n          this.hideEl(this.maxLab);\n          this.showEl(this.cmbLab);\n        } else {\n          this.cmbLabelShown = false;\n          this.updateHighHandle(this.valueToPosition(this.highValue));\n          this.updateLowHandle(this.valueToPosition(this.lowValue));\n          this.showEl(this.maxLab);\n          this.showEl(this.minLab);\n          this.hideEl(this.cmbLab);\n        }\n        if (this.options.autoHideLimitLabels) {\n          this.shFloorCeil();\n        }\n      },\n\n      /**\n       * Return the translated value if a translate function is provided else the original value\n       * @param value\n       * @param which if it's min or max handle\n       * @returns {*}\n       */\n      getDisplayValue: function(value, which) {\n        if (this.options.stepsArray && !this.options.bindIndexForStepsArray) {\n          value = this.getStepValue(value);\n        }\n        return this.customTrFn(value, this.options.id, which);\n      },\n\n      /**\n       * Round value to step and precision based on minValue\n       *\n       * @param {number} value\n       * @param {number} customStep a custom step to override the defined step\n       * @returns {number}\n       */\n      roundStep: function(value, customStep) {\n        var step = customStep ? customStep : this.step,\n          steppedDifference = parseFloat((value - this.minValue) / step).toPrecision(12);\n        steppedDifference = Math.round(+steppedDifference) * step;\n        var newValue = (this.minValue + steppedDifference).toFixed(this.precision);\n        return +newValue;\n      },\n\n      /**\n       * Hide element\n       *\n       * @param element\n       * @returns {jqLite} The jqLite wrapped DOM element\n       */\n      hideEl: function(element) {\n        return element.css({\n          visibility: 'hidden'\n        });\n      },\n\n      /**\n       * Show element\n       *\n       * @param element The jqLite wrapped DOM element\n       * @returns {jqLite} The jqLite\n       */\n      showEl: function(element) {\n        if (!!element.rzAlwaysHide) {\n          return element;\n        }\n\n        return element.css({\n          visibility: 'visible'\n        });\n      },\n\n      /**\n       * Set element left/top position depending on whether slider is horizontal or vertical\n       *\n       * @param {jqLite} elem The jqLite wrapped DOM element\n       * @param {number} pos\n       * @returns {number}\n       */\n      setPosition: function(elem, pos) {\n        elem.rzsp = pos;\n        var css = {};\n        css[this.positionProperty] = Math.round(pos) + 'px';\n        elem.css(css);\n        return pos;\n      },\n\n      /**\n       * Get element width/height depending on whether slider is horizontal or vertical\n       *\n       * @param {jqLite} elem The jqLite wrapped DOM element\n       * @returns {number}\n       */\n      getDimension: function(elem) {\n        var val = elem[0].getBoundingClientRect();\n        if (this.options.vertical)\n          elem.rzsd = (val.bottom - val.top) * this.options.scale;\n        else\n          elem.rzsd = (val.right - val.left) * this.options.scale;\n        return elem.rzsd;\n      },\n\n      /**\n       * Set element width/height depending on whether slider is horizontal or vertical\n       *\n       * @param {jqLite} elem  The jqLite wrapped DOM element\n       * @param {number} dim\n       * @returns {number}\n       */\n      setDimension: function(elem, dim) {\n        elem.rzsd = dim;\n        var css = {};\n        css[this.dimensionProperty] = Math.round(dim) + 'px';\n        elem.css(css);\n        return dim;\n      },\n\n      /**\n       * Returns a value that is within slider range\n       *\n       * @param {number} val\n       * @returns {number}\n       */\n      sanitizeValue: function(val) {\n        return Math.min(Math.max(val, this.minValue), this.maxValue);\n      },\n\n      /**\n       * Translate value to pixel position\n       *\n       * @param {number} val\n       * @returns {number}\n       */\n      valueToPosition: function(val) {\n        var fn = this.linearValueToPosition;\n        if (this.options.customValueToPosition)\n          fn = this.options.customValueToPosition;\n        else if (this.options.logScale)\n          fn = this.logValueToPosition;\n\n        val = this.sanitizeValue(val);\n        var percent = fn(val, this.minValue, this.maxValue) || 0;\n        if (this.options.rightToLeft)\n          percent = 1 - percent;\n        return percent * this.maxPos;\n      },\n\n      linearValueToPosition: function(val, minVal, maxVal) {\n        var range = maxVal - minVal;\n        return (val - minVal) / range;\n      },\n\n      logValueToPosition: function(val, minVal, maxVal) {\n        val = Math.log(val);\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        var range = maxVal - minVal;\n        return (val - minVal) / range;\n      },\n\n      /**\n       * Translate position to model value\n       *\n       * @param {number} position\n       * @returns {number}\n       */\n      positionToValue: function(position) {\n        var percent = position / this.maxPos;\n        if (this.options.rightToLeft)\n          percent = 1 - percent;\n        var fn = this.linearPositionToValue;\n        if (this.options.customPositionToValue)\n          fn = this.options.customPositionToValue;\n        else if (this.options.logScale)\n          fn = this.logPositionToValue;\n        return fn(percent, this.minValue, this.maxValue) || 0;\n      },\n\n      linearPositionToValue: function(percent, minVal, maxVal) {\n        return percent * (maxVal - minVal) + minVal;\n      },\n\n      logPositionToValue: function(percent, minVal, maxVal) {\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        var value = percent * (maxVal - minVal) + minVal;\n        return Math.exp(value);\n      },\n\n      getEventAttr: function(event, attr) {\n        return event.originalEvent === undefined ? event[attr] : event.originalEvent[attr]\n      },\n\n      // Events\n      /**\n       * Get the X-coordinate or Y-coordinate of an event\n       *\n       * @param {Object} event  The event\n       * @param targetTouchId The identifier of the touch with the X/Y coordinates\n       * @returns {number}\n       */\n      getEventXY: function(event, targetTouchId) {\n        /* http://stackoverflow.com/a/12336075/282882 */\n        //noinspection JSLint\n        var clientXY = this.options.vertical ? 'clientY' : 'clientX';\n        if (event[clientXY] !== undefined) {\n          return event[clientXY];\n        }\n\n        var touches = this.getEventAttr(event, 'touches');\n\n        if (targetTouchId !== undefined) {\n          for (var i = 0; i < touches.length; i++) {\n            if (touches[i].identifier === targetTouchId) {\n              return touches[i][clientXY];\n            }\n          }\n        }\n\n        // If no target touch or the target touch was not found in the event\n        // returns the coordinates of the first touch\n        return touches[0][clientXY];\n      },\n\n      /**\n       * Compute the event position depending on whether the slider is horizontal or vertical\n       * @param event\n       * @param targetTouchId If targetTouchId is provided it will be considered the position of that\n       * @returns {number}\n       */\n      getEventPosition: function(event, targetTouchId) {\n        var sliderPos = this.sliderElem.rzsp,\n          eventPos = 0;\n        if (this.options.vertical)\n          eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n        else\n          eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n        return eventPos * this.options.scale - this.handleHalfDim; // #346 handleHalfDim is already scaled\n      },\n\n      /**\n       * Get event names for move and event end\n       *\n       * @param {Event}    event    The event\n       *\n       * @return {{moveEvent: string, endEvent: string}}\n       */\n      getEventNames: function(event) {\n        var eventNames = {\n          moveEvent: '',\n          endEvent: ''\n        };\n\n        if (this.getEventAttr(event, 'touches')) {\n          eventNames.moveEvent = 'touchmove';\n          eventNames.endEvent = 'touchend';\n        } else {\n          eventNames.moveEvent = 'mousemove';\n          eventNames.endEvent = 'mouseup';\n        }\n\n        return eventNames;\n      },\n\n      /**\n       * Get the handle closest to an event.\n       *\n       * @param event {Event} The event\n       * @returns {jqLite} The handle closest to the event.\n       */\n      getNearestHandle: function(event) {\n        if (!this.range) {\n          return this.minH;\n        }\n        var position = this.getEventPosition(event),\n          distanceMin = Math.abs(position - this.minH.rzsp),\n          distanceMax = Math.abs(position - this.maxH.rzsp);\n        if (distanceMin < distanceMax)\n          return this.minH;\n        else if (distanceMin > distanceMax)\n          return this.maxH;\n        else if (!this.options.rightToLeft)\n        //if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n          return position < this.minH.rzsp ? this.minH : this.maxH;\n        else\n        //reverse in rtl\n          return position > this.minH.rzsp ? this.minH : this.maxH;\n      },\n\n      /**\n       * Wrapper function to focus an angular element\n       *\n       * @param el {AngularElement} the element to focus\n       */\n      focusElement: function(el) {\n        var DOM_ELEMENT = 0;\n        el[DOM_ELEMENT].focus();\n      },\n\n      /**\n       * Bind mouse and touch events to slider handles\n       *\n       * @returns {undefined}\n       */\n      bindEvents: function() {\n        var barTracking, barStart, barMove;\n\n        if (this.options.draggableRange) {\n          barTracking = 'rzSliderDrag';\n          barStart = this.onDragStart;\n          barMove = this.onDragMove;\n        } else {\n          barTracking = 'lowValue';\n          barStart = this.onStart;\n          barMove = this.onMove;\n        }\n\n        if (!this.options.onlyBindHandles) {\n          this.selBar.on('mousedown', angular.bind(this, barStart, null, barTracking));\n          this.selBar.on('mousedown', angular.bind(this, barMove, this.selBar));\n        }\n\n        if (this.options.draggableRangeOnly) {\n          this.minH.on('mousedown', angular.bind(this, barStart, null, barTracking));\n          this.maxH.on('mousedown', angular.bind(this, barStart, null, barTracking));\n        } else {\n          this.minH.on('mousedown', angular.bind(this, this.onStart, this.minH, 'lowValue'));\n          if (this.range) {\n            this.maxH.on('mousedown', angular.bind(this, this.onStart, this.maxH, 'highValue'));\n          }\n          if (!this.options.onlyBindHandles) {\n            this.fullBar.on('mousedown', angular.bind(this, this.onStart, null, null));\n            this.fullBar.on('mousedown', angular.bind(this, this.onMove, this.fullBar));\n            this.ticks.on('mousedown', angular.bind(this, this.onStart, null, null));\n            this.ticks.on('mousedown', angular.bind(this, this.onTickClick, this.ticks));\n          }\n        }\n\n        if (!this.options.onlyBindHandles) {\n          this.selBar.on('touchstart', angular.bind(this, barStart, null, barTracking));\n          this.selBar.on('touchstart', angular.bind(this, barMove, this.selBar));\n        }\n        if (this.options.draggableRangeOnly) {\n          this.minH.on('touchstart', angular.bind(this, barStart, null, barTracking));\n          this.maxH.on('touchstart', angular.bind(this, barStart, null, barTracking));\n        } else {\n          this.minH.on('touchstart', angular.bind(this, this.onStart, this.minH, 'lowValue'));\n          if (this.range) {\n            this.maxH.on('touchstart', angular.bind(this, this.onStart, this.maxH, 'highValue'));\n          }\n          if (!this.options.onlyBindHandles) {\n            this.fullBar.on('touchstart', angular.bind(this, this.onStart, null, null));\n            this.fullBar.on('touchstart', angular.bind(this, this.onMove, this.fullBar));\n            this.ticks.on('touchstart', angular.bind(this, this.onStart, null, null));\n            this.ticks.on('touchstart', angular.bind(this, this.onTickClick, this.ticks));\n          }\n        }\n\n        if (this.options.keyboardSupport) {\n          this.minH.on('focus', angular.bind(this, this.onPointerFocus, this.minH, 'lowValue'));\n          if (this.range) {\n            this.maxH.on('focus', angular.bind(this, this.onPointerFocus, this.maxH, 'highValue'));\n          }\n        }\n      },\n\n      /**\n       * Unbind mouse and touch events to slider handles\n       *\n       * @returns {undefined}\n       */\n      unbindEvents: function() {\n        this.minH.off();\n        this.maxH.off();\n        this.fullBar.off();\n        this.selBar.off();\n        this.ticks.off();\n      },\n\n      /**\n       * onStart event handler\n       *\n       * @param {?Object} pointer The jqLite wrapped DOM element; if null, the closest handle is used\n       * @param {?string} ref     The name of the handle being changed; if null, the closest handle's value is modified\n       * @param {Event}   event   The event\n       * @returns {undefined}\n       */\n      onStart: function(pointer, ref, event) {\n        var ehMove, ehEnd,\n          eventNames = this.getEventNames(event);\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        // We have to do this in case the HTML where the sliders are on\n        // have been animated into view.\n        this.calcViewDimensions();\n\n        if (pointer) {\n          this.tracking = ref;\n        } else {\n          pointer = this.getNearestHandle(event);\n          this.tracking = pointer === this.minH ? 'lowValue' : 'highValue';\n        }\n\n        pointer.addClass('rz-active');\n\n        if (this.options.keyboardSupport)\n          this.focusElement(pointer);\n\n        ehMove = angular.bind(this, this.dragging.active ? this.onDragMove : this.onMove, pointer);\n        ehEnd = angular.bind(this, this.onEnd, ehMove);\n\n        $document.on(eventNames.moveEvent, ehMove)\n        $document.on(eventNames.endEvent, ehEnd);\n        this.endHandlerToBeRemovedOnEnd = ehEnd;\n\n        this.callOnStart();\n\n        var changedTouches = this.getEventAttr(event, 'changedTouches');\n        if (changedTouches) {\n          // Store the touch identifier\n          if (!this.touchId) {\n            this.isDragging = true;\n            this.touchId = changedTouches[0].identifier;\n          }\n        }\n      },\n\n      /**\n       * onMove event handler\n       *\n       * @param {jqLite} pointer\n       * @param {Event}  event The event\n       * @param {boolean}  fromTick if the event occured on a tick or not\n       * @returns {undefined}\n       */\n      onMove: function(pointer, event, fromTick) {\n        var changedTouches = this.getEventAttr(event, 'changedTouches');\n        var touchForThisSlider;\n        if (changedTouches) {\n          for (var i = 0; i < changedTouches.length; i++) {\n            if (changedTouches[i].identifier === this.touchId) {\n              touchForThisSlider = changedTouches[i];\n              break;\n            }\n          }\n        }\n\n        if (changedTouches && !touchForThisSlider) {\n          return;\n        }\n\n        var newPos = this.getEventPosition(event, touchForThisSlider ? touchForThisSlider.identifier : undefined),\n          newValue,\n          ceilValue = this.options.rightToLeft ? this.minValue : this.maxValue,\n          flrValue = this.options.rightToLeft ? this.maxValue : this.minValue;\n\n        if (newPos <= 0) {\n          newValue = flrValue;\n        } else if (newPos >= this.maxPos) {\n          newValue = ceilValue;\n        } else {\n          newValue = this.positionToValue(newPos);\n          if (fromTick && angular.isNumber(this.options.showTicks))\n            newValue = this.roundStep(newValue, this.options.showTicks);\n          else\n            newValue = this.roundStep(newValue);\n        }\n        this.positionTrackingHandle(newValue);\n      },\n\n      /**\n       * onEnd event handler\n       *\n       * @param {Event}    event    The event\n       * @param {Function} ehMove   The bound move event handler\n       * @returns {undefined}\n       */\n      onEnd: function(ehMove, event) {\n        var changedTouches = this.getEventAttr(event, 'changedTouches');\n        if (changedTouches && changedTouches[0].identifier !== this.touchId) {\n          return;\n        }\n        this.isDragging = false;\n        this.touchId = null;\n\n        if (!this.options.keyboardSupport) {\n          this.minH.removeClass('rz-active');\n          this.maxH.removeClass('rz-active');\n          this.tracking = '';\n        }\n        this.dragging.active = false;\n\n        var eventName = this.getEventNames(event);\n        $document.off(eventName.moveEvent, ehMove);\n        $document.off(eventName.endEvent, this.endHandlerToBeRemovedOnEnd);\n        this.endHandlerToBeRemovedOnEnd = null;\n        this.callOnEnd();\n      },\n\n      onTickClick: function(pointer, event) {\n        this.onMove(pointer, event, true);\n      },\n\n      onPointerFocus: function(pointer, ref) {\n        this.tracking = ref;\n        pointer.one('blur', angular.bind(this, this.onPointerBlur, pointer));\n        pointer.on('keydown', angular.bind(this, this.onKeyboardEvent));\n        pointer.on('keyup', angular.bind(this, this.onKeyUp));\n        this.firstKeyDown = true;\n        pointer.addClass('rz-active');\n\n        this.currentFocusElement = {\n          pointer: pointer,\n          ref: ref\n        };\n      },\n\n      onKeyUp: function() {\n        this.firstKeyDown = true;\n        this.callOnEnd();\n      },\n\n      onPointerBlur: function(pointer) {\n        pointer.off('keydown');\n        pointer.off('keyup');\n        pointer.removeClass('rz-active');\n        if (!this.isDragging) {\n          this.tracking = '';\n          this.currentFocusElement = null\n        }\n      },\n\n      /**\n       * Key actions helper function\n       *\n       * @param {number} currentValue value of the slider\n       *\n       * @returns {?Object} action value mappings\n       */\n      getKeyActions: function(currentValue) {\n        var increaseStep = currentValue + this.step,\n          decreaseStep = currentValue - this.step,\n          increasePage = currentValue + this.valueRange / 10,\n          decreasePage = currentValue - this.valueRange / 10;\n\n        //Left to right default actions\n        var actions = {\n          'UP': increaseStep,\n          'DOWN': decreaseStep,\n          'LEFT': decreaseStep,\n          'RIGHT': increaseStep,\n          'PAGEUP': increasePage,\n          'PAGEDOWN': decreasePage,\n          'HOME': this.minValue,\n          'END': this.maxValue\n        };\n        //right to left means swapping right and left arrows\n        if (this.options.rightToLeft) {\n          actions.LEFT = increaseStep;\n          actions.RIGHT = decreaseStep;\n          // right to left and vertical means we also swap up and down\n          if (this.options.vertical) {\n            actions.UP = decreaseStep;\n            actions.DOWN = increaseStep;\n          }\n        }\n        return actions;\n      },\n\n      onKeyboardEvent: function(event) {\n        var currentValue = this[this.tracking],\n          keyCode = event.keyCode || event.which,\n          keys = {\n            38: 'UP',\n            40: 'DOWN',\n            37: 'LEFT',\n            39: 'RIGHT',\n            33: 'PAGEUP',\n            34: 'PAGEDOWN',\n            36: 'HOME',\n            35: 'END'\n          },\n          actions = this.getKeyActions(currentValue),\n          key = keys[keyCode],\n          action = actions[key];\n        if (action == null || this.tracking === '') return;\n        event.preventDefault();\n\n        if (this.firstKeyDown) {\n          this.firstKeyDown = false;\n          this.callOnStart();\n        }\n\n        var self = this;\n        $timeout(function() {\n          var newValue = self.roundStep(self.sanitizeValue(action));\n          if (!self.options.draggableRangeOnly) {\n            self.positionTrackingHandle(newValue);\n          }\n          else {\n            var difference = self.highValue - self.lowValue,\n              newMinValue, newMaxValue;\n            if (self.tracking === 'lowValue') {\n              newMinValue = newValue;\n              newMaxValue = newValue + difference;\n              if (newMaxValue > self.maxValue) {\n                newMaxValue = self.maxValue;\n                newMinValue = newMaxValue - difference;\n              }\n            } else {\n              newMaxValue = newValue;\n              newMinValue = newValue - difference;\n              if (newMinValue < self.minValue) {\n                newMinValue = self.minValue;\n                newMaxValue = newMinValue + difference;\n              }\n            }\n            self.positionTrackingBar(newMinValue, newMaxValue);\n          }\n        });\n      },\n\n      /**\n       * onDragStart event handler\n       *\n       * Handles dragging of the middle bar.\n       *\n       * @param {Object} pointer The jqLite wrapped DOM element\n       * @param {string} ref     One of the refLow, refHigh values\n       * @param {Event}  event   The event\n       * @returns {undefined}\n       */\n      onDragStart: function(pointer, ref, event) {\n        var position = this.getEventPosition(event);\n        this.dragging = {\n          active: true,\n          value: this.positionToValue(position),\n          difference: this.highValue - this.lowValue,\n          lowLimit: this.options.rightToLeft ? this.minH.rzsp - position : position - this.minH.rzsp,\n          highLimit: this.options.rightToLeft ? position - this.maxH.rzsp : this.maxH.rzsp - position\n        };\n\n        this.onStart(pointer, ref, event);\n      },\n\n      /**\n       * getValue helper function\n       *\n       * gets max or min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n       *\n       * @param {string} type 'max' || 'min' The value we are calculating\n       * @param {number} newPos  The new position\n       * @param {boolean} outOfBounds Is the new position above or below the max/min?\n       * @param {boolean} isAbove Is the new position above the bar if out of bounds?\n       *\n       * @returns {number}\n       */\n      getValue: function(type, newPos, outOfBounds, isAbove) {\n        var isRTL = this.options.rightToLeft,\n          value = null;\n\n        if (type === 'min') {\n          if (outOfBounds) {\n            if (isAbove) {\n              value = isRTL ? this.minValue : this.maxValue - this.dragging.difference;\n            } else {\n              value = isRTL ? this.maxValue - this.dragging.difference : this.minValue;\n            }\n          } else {\n            value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit)\n          }\n        } else {\n          if (outOfBounds) {\n            if (isAbove) {\n              value = isRTL ? this.minValue + this.dragging.difference : this.maxValue;\n            } else {\n              value = isRTL ? this.maxValue : this.minValue + this.dragging.difference;\n            }\n          } else {\n            if (isRTL) {\n              value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference\n            } else {\n              value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\n            }\n          }\n        }\n        return this.roundStep(value);\n      },\n\n      /**\n       * onDragMove event handler\n       *\n       * Handles dragging of the middle bar.\n       *\n       * @param {jqLite} pointer\n       * @param {Event}  event The event\n       * @returns {undefined}\n       */\n      onDragMove: function(pointer, event) {\n        var newPos = this.getEventPosition(event),\n          newMinValue, newMaxValue,\n          ceilLimit, flrLimit,\n          isUnderFlrLimit, isOverCeilLimit,\n          flrH, ceilH;\n\n        if (this.options.rightToLeft) {\n          ceilLimit = this.dragging.lowLimit;\n          flrLimit = this.dragging.highLimit;\n          flrH = this.maxH;\n          ceilH = this.minH;\n        } else {\n          ceilLimit = this.dragging.highLimit;\n          flrLimit = this.dragging.lowLimit;\n          flrH = this.minH;\n          ceilH = this.maxH;\n        }\n        isUnderFlrLimit = newPos <= flrLimit;\n        isOverCeilLimit = newPos >= this.maxPos - ceilLimit;\n\n        if (isUnderFlrLimit) {\n          if (flrH.rzsp === 0)\n            return;\n          newMinValue = this.getValue('min', newPos, true, false);\n          newMaxValue = this.getValue('max', newPos, true, false);\n        } else if (isOverCeilLimit) {\n          if (ceilH.rzsp === this.maxPos)\n            return;\n          newMaxValue = this.getValue('max', newPos, true, true);\n          newMinValue = this.getValue('min', newPos, true, true);\n        } else {\n          newMinValue = this.getValue('min', newPos, false);\n          newMaxValue = this.getValue('max', newPos, false);\n        }\n        this.positionTrackingBar(newMinValue, newMaxValue);\n      },\n\n      /**\n       * Set the new value and position for the entire bar\n       *\n       * @param {number} newMinValue   the new minimum value\n       * @param {number} newMaxValue   the new maximum value\n       */\n      positionTrackingBar: function(newMinValue, newMaxValue) {\n\n        if (this.options.minLimit != null && newMinValue < this.options.minLimit) {\n          newMinValue = this.options.minLimit;\n          newMaxValue = newMinValue + this.dragging.difference;\n        }\n        if (this.options.maxLimit != null && newMaxValue > this.options.maxLimit) {\n          newMaxValue = this.options.maxLimit;\n          newMinValue = newMaxValue - this.dragging.difference;\n        }\n\n        this.lowValue = newMinValue;\n        this.highValue = newMaxValue;\n        this.applyLowValue();\n        if (this.range)\n          this.applyHighValue();\n        this.applyModel(true);\n        this.updateHandles('lowValue', this.valueToPosition(newMinValue));\n        this.updateHandles('highValue', this.valueToPosition(newMaxValue));\n      },\n\n      /**\n       * Set the new value and position to the current tracking handle\n       *\n       * @param {number} newValue new model value\n       */\n      positionTrackingHandle: function(newValue) {\n        var valueChanged = false;\n        newValue = this.applyMinMaxLimit(newValue);\n        if (this.range) {\n          if (this.options.pushRange) {\n            newValue = this.applyPushRange(newValue);\n            valueChanged = true;\n          }\n          else {\n            if (this.options.noSwitching) {\n              if (this.tracking === 'lowValue' && newValue > this.highValue)\n                newValue = this.applyMinMaxRange(this.highValue);\n              else if (this.tracking === 'highValue' && newValue < this.lowValue)\n                newValue = this.applyMinMaxRange(this.lowValue);\n            }\n            newValue = this.applyMinMaxRange(newValue);\n            /* This is to check if we need to switch the min and max handles */\n            if (this.tracking === 'lowValue' && newValue > this.highValue) {\n              this.lowValue = this.highValue;\n              this.applyLowValue();\n              this.applyModel();\n              this.updateHandles(this.tracking, this.maxH.rzsp);\n              this.updateAriaAttributes();\n              this.tracking = 'highValue';\n              this.minH.removeClass('rz-active');\n              this.maxH.addClass('rz-active');\n              if (this.options.keyboardSupport)\n                this.focusElement(this.maxH);\n              valueChanged = true;\n            }\n            else if (this.tracking === 'highValue' && newValue < this.lowValue) {\n              this.highValue = this.lowValue;\n              this.applyHighValue();\n              this.applyModel();\n              this.updateHandles(this.tracking, this.minH.rzsp);\n              this.updateAriaAttributes();\n              this.tracking = 'lowValue';\n              this.maxH.removeClass('rz-active');\n              this.minH.addClass('rz-active');\n              if (this.options.keyboardSupport)\n                this.focusElement(this.minH);\n              valueChanged = true;\n            }\n          }\n        }\n\n        if (this[this.tracking] !== newValue) {\n          this[this.tracking] = newValue;\n          if (this.tracking === 'lowValue')\n            this.applyLowValue();\n          else\n            this.applyHighValue();\n          this.applyModel();\n          this.updateHandles(this.tracking, this.valueToPosition(newValue));\n          this.updateAriaAttributes();\n          valueChanged = true;\n        }\n\n        if (valueChanged)\n          this.applyModel(true);\n      },\n\n      applyMinMaxLimit: function(newValue) {\n        if (this.options.minLimit != null && newValue < this.options.minLimit)\n          return this.options.minLimit;\n        if (this.options.maxLimit != null && newValue > this.options.maxLimit)\n          return this.options.maxLimit;\n        return newValue;\n      },\n\n      applyMinMaxRange: function(newValue) {\n        var oppositeValue = this.tracking === 'lowValue' ? this.highValue : this.lowValue,\n          difference = Math.abs(newValue - oppositeValue);\n        if (this.options.minRange != null) {\n          if (difference < this.options.minRange) {\n            if (this.tracking === 'lowValue')\n              return this.highValue - this.options.minRange;\n            else\n              return this.lowValue + this.options.minRange;\n          }\n        }\n        if (this.options.maxRange != null) {\n          if (difference > this.options.maxRange) {\n            if (this.tracking === 'lowValue')\n              return this.highValue - this.options.maxRange;\n            else\n              return this.lowValue + this.options.maxRange;\n          }\n        }\n        return newValue;\n      },\n\n      applyPushRange: function(newValue) {\n        var difference = this.tracking === 'lowValue' ? this.highValue - newValue : newValue - this.lowValue,\n          minRange = this.options.minRange !== null ? this.options.minRange : this.options.step,\n          maxRange = this.options.maxRange;\n        // if smaller than minRange\n        if (difference < minRange) {\n          if (this.tracking === 'lowValue') {\n            this.highValue = Math.min(newValue + minRange, this.maxValue);\n            newValue = this.highValue - minRange;\n            this.applyHighValue();\n            this.updateHandles('highValue', this.valueToPosition(this.highValue));\n          }\n          else {\n            this.lowValue = Math.max(newValue - minRange, this.minValue);\n            newValue = this.lowValue + minRange;\n            this.applyLowValue();\n            this.updateHandles('lowValue', this.valueToPosition(this.lowValue));\n          }\n          this.updateAriaAttributes();\n        }\n        // if greater than maxRange\n        else if (maxRange !== null && difference > maxRange) {\n          if (this.tracking === 'lowValue') {\n            this.highValue = newValue + maxRange;\n            this.applyHighValue();\n            this.updateHandles('highValue', this.valueToPosition(this.highValue));\n          }\n          else {\n            this.lowValue = newValue - maxRange;\n            this.applyLowValue();\n            this.updateHandles('lowValue', this.valueToPosition(this.lowValue));\n          }\n          this.updateAriaAttributes();\n        }\n        return newValue;\n      },\n\n      /**\n       * Apply the model values using scope.$apply.\n       * We wrap it with the internalChange flag to avoid the watchers to be called\n       */\n      applyModel: function(callOnChange) {\n        this.internalChange = true;\n        this.scope.$apply();\n        callOnChange && this.callOnChange();\n        this.internalChange = false;\n      },\n\n      /**\n       * Call the onStart callback if defined\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\n       *\n       * @returns {undefined}\n       */\n      callOnStart: function() {\n        if (this.options.onStart) {\n          var self = this,\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\n          this.scope.$evalAsync(function() {\n            self.options.onStart(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\n          });\n        }\n      },\n\n      /**\n       * Call the onChange callback if defined\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\n       *\n       * @returns {undefined}\n       */\n      callOnChange: function() {\n        if (this.options.onChange) {\n          var self = this,\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\n          this.scope.$evalAsync(function() {\n            self.options.onChange(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\n          });\n        }\n      },\n\n      /**\n       * Call the onEnd callback if defined\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\n       *\n       * @returns {undefined}\n       */\n      callOnEnd: function() {\n        if (this.options.onEnd) {\n          var self = this,\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\n          this.scope.$evalAsync(function() {\n            self.options.onEnd(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\n          });\n        }\n        this.scope.$emit('slideEnded');\n      }\n    };\n\n    return Slider;\n  }])\n\n  .directive('rzslider', ['RzSlider', function(RzSlider) {\n    'use strict';\n\n    return {\n      restrict: 'AE',\n      replace: true,\n      scope: {\n        rzSliderModel: '=?',\n        rzSliderHigh: '=?',\n        rzSliderOptions: '&?',\n        rzSliderTplUrl: '@'\n      },\n\n      /**\n       * Return template URL\n       *\n       * @param {jqLite} elem\n       * @param {Object} attrs\n       * @return {string}\n       */\n      templateUrl: function(elem, attrs) {\n        //noinspection JSUnresolvedVariable\n        return attrs.rzSliderTplUrl || 'rzSliderTpl.html';\n      },\n\n      link: function(scope, elem) {\n        scope.slider = new RzSlider(scope, elem); //attach on scope so we can test it\n      }\n    };\n  }]);\n\n  // IDE assist\n\n  /**\n   * @name ngScope\n   *\n   * @property {number} rzSliderModel\n   * @property {number} rzSliderHigh\n   * @property {Object} rzSliderOptions\n   */\n\n  /**\n   * @name jqLite\n   *\n   * @property {number|undefined} rzsp rzslider label position position\n   * @property {number|undefined} rzsd rzslider element dimension\n   * @property {string|undefined} rzsv rzslider label value/text\n   * @property {Function} css\n   * @property {Function} text\n   */\n\n  /**\n   * @name Event\n   * @property {Array} touches\n   * @property {Event} originalEvent\n   */\n\n  /**\n   * @name ThrottleOptions\n   *\n   * @property {boolean} leading\n   * @property {boolean} trailing\n   */\n\n  module.run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('rzSliderTpl.html',\n    \"<div class=rzslider><span class=\\\"rz-bar-wrapper rz-left-out-selection\\\"><span class=rz-bar></span></span> <span class=\\\"rz-bar-wrapper rz-right-out-selection\\\"><span class=rz-bar></span></span> <span class=rz-bar-wrapper><span class=rz-bar></span></span> <span class=rz-bar-wrapper><span class=\\\"rz-bar rz-selection\\\" ng-style=barStyle></span></span> <span class=\\\"rz-pointer rz-pointer-min\\\" ng-style=minPointerStyle></span> <span class=\\\"rz-pointer rz-pointer-max\\\" ng-style=maxPointerStyle></span> <span class=\\\"rz-bubble rz-limit rz-floor\\\"></span> <span class=\\\"rz-bubble rz-limit rz-ceil\\\"></span> <span class=rz-bubble></span> <span class=rz-bubble></span> <span class=rz-bubble></span><ul ng-show=showTicks class=rz-ticks><li ng-repeat=\\\"t in ticks track by $index\\\" class=rz-tick ng-class=\\\"{'rz-selected': t.selected}\\\" ng-style=t.style ng-attr-uib-tooltip=\\\"{{ t.tooltip }}\\\" ng-attr-tooltip-placement={{t.tooltipPlacement}} ng-attr-tooltip-append-to-body=\\\"{{ t.tooltip ? true : undefined}}\\\"><span ng-if=\\\"t.value != null\\\" class=rz-tick-value ng-attr-uib-tooltip=\\\"{{ t.valueTooltip }}\\\" ng-attr-tooltip-placement={{t.valueTooltipPlacement}}>{{ t.value }}</span> <span ng-if=\\\"t.legend != null\\\" class=rz-tick-legend>{{ t.legend }}</span></li></ul></div>\"\n  );\n\n}]);\n\n  return module.name\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/angularjs-slider/dist/rzslider.js\n// module id = 56\n// module chunks = 1","/* ng-infinite-scroll - v1.3.0 - 2016-06-30 */\nangular.module('infinite-scroll', []).value('THROTTLE_MILLISECONDS', null).directive('infiniteScroll', [\n  '$rootScope', '$window', '$interval', 'THROTTLE_MILLISECONDS', function($rootScope, $window, $interval, THROTTLE_MILLISECONDS) {\n    return {\n      scope: {\n        infiniteScroll: '&',\n        infiniteScrollContainer: '=',\n        infiniteScrollDistance: '=',\n        infiniteScrollDisabled: '=',\n        infiniteScrollUseDocumentBottom: '=',\n        infiniteScrollListenForEvent: '@'\n      },\n      link: function(scope, elem, attrs) {\n        var changeContainer, checkInterval, checkWhenEnabled, container, handleInfiniteScrollContainer, handleInfiniteScrollDisabled, handleInfiniteScrollDistance, handleInfiniteScrollUseDocumentBottom, handler, height, immediateCheck, offsetTop, pageYOffset, scrollDistance, scrollEnabled, throttle, unregisterEventListener, useDocumentBottom, windowElement;\n        windowElement = angular.element($window);\n        scrollDistance = null;\n        scrollEnabled = null;\n        checkWhenEnabled = null;\n        container = null;\n        immediateCheck = true;\n        useDocumentBottom = false;\n        unregisterEventListener = null;\n        checkInterval = false;\n        height = function(elem) {\n          elem = elem[0] || elem;\n          if (isNaN(elem.offsetHeight)) {\n            return elem.document.documentElement.clientHeight;\n          } else {\n            return elem.offsetHeight;\n          }\n        };\n        offsetTop = function(elem) {\n          if (!elem[0].getBoundingClientRect || elem.css('none')) {\n            return;\n          }\n          return elem[0].getBoundingClientRect().top + pageYOffset(elem);\n        };\n        pageYOffset = function(elem) {\n          elem = elem[0] || elem;\n          if (isNaN(window.pageYOffset)) {\n            return elem.document.documentElement.scrollTop;\n          } else {\n            return elem.ownerDocument.defaultView.pageYOffset;\n          }\n        };\n        handler = function() {\n          var containerBottom, containerTopOffset, elementBottom, remaining, shouldScroll;\n          if (container === windowElement) {\n            containerBottom = height(container) + pageYOffset(container[0].document.documentElement);\n            elementBottom = offsetTop(elem) + height(elem);\n          } else {\n            containerBottom = height(container);\n            containerTopOffset = 0;\n            if (offsetTop(container) !== void 0) {\n              containerTopOffset = offsetTop(container);\n            }\n            elementBottom = offsetTop(elem) - containerTopOffset + height(elem);\n          }\n          if (useDocumentBottom) {\n            elementBottom = height((elem[0].ownerDocument || elem[0].document).documentElement);\n          }\n          remaining = elementBottom - containerBottom;\n          shouldScroll = remaining <= height(container) * scrollDistance + 1;\n          if (shouldScroll) {\n            checkWhenEnabled = true;\n            if (scrollEnabled) {\n              if (scope.$$phase || $rootScope.$$phase) {\n                return scope.infiniteScroll();\n              } else {\n                return scope.$apply(scope.infiniteScroll);\n              }\n            }\n          } else {\n            if (checkInterval) {\n              $interval.cancel(checkInterval);\n            }\n            return checkWhenEnabled = false;\n          }\n        };\n        throttle = function(func, wait) {\n          var later, previous, timeout;\n          timeout = null;\n          previous = 0;\n          later = function() {\n            previous = new Date().getTime();\n            $interval.cancel(timeout);\n            timeout = null;\n            return func.call();\n          };\n          return function() {\n            var now, remaining;\n            now = new Date().getTime();\n            remaining = wait - (now - previous);\n            if (remaining <= 0) {\n              $interval.cancel(timeout);\n              timeout = null;\n              previous = now;\n              return func.call();\n            } else {\n              if (!timeout) {\n                return timeout = $interval(later, remaining, 1);\n              }\n            }\n          };\n        };\n        if (THROTTLE_MILLISECONDS != null) {\n          handler = throttle(handler, THROTTLE_MILLISECONDS);\n        }\n        scope.$on('$destroy', function() {\n          container.unbind('scroll', handler);\n          if (unregisterEventListener != null) {\n            unregisterEventListener();\n            unregisterEventListener = null;\n          }\n          if (checkInterval) {\n            return $interval.cancel(checkInterval);\n          }\n        });\n        handleInfiniteScrollDistance = function(v) {\n          return scrollDistance = parseFloat(v) || 0;\n        };\n        scope.$watch('infiniteScrollDistance', handleInfiniteScrollDistance);\n        handleInfiniteScrollDistance(scope.infiniteScrollDistance);\n        handleInfiniteScrollDisabled = function(v) {\n          scrollEnabled = !v;\n          if (scrollEnabled && checkWhenEnabled) {\n            checkWhenEnabled = false;\n            return handler();\n          }\n        };\n        scope.$watch('infiniteScrollDisabled', handleInfiniteScrollDisabled);\n        handleInfiniteScrollDisabled(scope.infiniteScrollDisabled);\n        handleInfiniteScrollUseDocumentBottom = function(v) {\n          return useDocumentBottom = v;\n        };\n        scope.$watch('infiniteScrollUseDocumentBottom', handleInfiniteScrollUseDocumentBottom);\n        handleInfiniteScrollUseDocumentBottom(scope.infiniteScrollUseDocumentBottom);\n        changeContainer = function(newContainer) {\n          if (container != null) {\n            container.unbind('scroll', handler);\n          }\n          container = newContainer;\n          if (newContainer != null) {\n            return container.bind('scroll', handler);\n          }\n        };\n        changeContainer(windowElement);\n        if (scope.infiniteScrollListenForEvent) {\n          unregisterEventListener = $rootScope.$on(scope.infiniteScrollListenForEvent, handler);\n        }\n        handleInfiniteScrollContainer = function(newContainer) {\n          if ((newContainer == null) || newContainer.length === 0) {\n            return;\n          }\n          if (newContainer.nodeType && newContainer.nodeType === 1) {\n            newContainer = angular.element(newContainer);\n          } else if (typeof newContainer.append === 'function') {\n            newContainer = angular.element(newContainer[newContainer.length - 1]);\n          } else if (typeof newContainer === 'string') {\n            newContainer = angular.element(document.querySelector(newContainer));\n          }\n          if (newContainer != null) {\n            return changeContainer(newContainer);\n          } else {\n            throw new Error(\"invalid infinite-scroll-container attribute.\");\n          }\n        };\n        scope.$watch('infiniteScrollContainer', handleInfiniteScrollContainer);\n        handleInfiniteScrollContainer(scope.infiniteScrollContainer || []);\n        if (attrs.infiniteScrollParent != null) {\n          changeContainer(angular.element(elem.parent()));\n        }\n        if (attrs.infiniteScrollImmediateCheck != null) {\n          immediateCheck = scope.$eval(attrs.infiniteScrollImmediateCheck);\n        }\n        return checkInterval = $interval((function() {\n          if (immediateCheck) {\n            handler();\n          }\n          return $interval.cancel(checkInterval);\n        }));\n      }\n    };\n  }\n]);\n\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n  module.exports = 'infinite-scroll';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/ng-infinite-scroll/build/ng-infinite-scroll.js\n// module id = 57\n// module chunks = 1","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/charenc/charenc.js\n// module id = 59\n// module chunks = 1","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/style-loader/lib/urls.js\n// module id = 62\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 64\n// module chunks = 1","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/object/define-property.js\n// module id = 65\n// module chunks = 1","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = 66\n// module chunks = 1","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = 67\n// module chunks = 1","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-primitive.js\n// module id = 68\n// module chunks = 1","/**\n * State-based routing for AngularJS 1.x\n * This bundle requires the ui-router-core.js bundle from the @uirouter/core package.\n * @version v1.0.6\n * @link https://ui-router.github.io\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('angular'), require('@uirouter/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'angular', '@uirouter/core'], factory) :\n    (factory((global['@uirouter/angularjs'] = global['@uirouter/angularjs'] || {}),global.angular,global['@uirouter/core']));\n}(this, (function (exports,ng_from_import,_uirouter_core) { 'use strict';\n\nvar ng_from_global = angular;\nvar ng = (ng_from_import && ng_from_import.module) ? ng_from_import : ng_from_global;\n\nfunction getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || _uirouter_core.services.$injector.get(\"$templateFactory\");\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\nvar hasAnyKey = function (keys, obj) {\n    return keys.reduce(function (acc, key) { return acc || _uirouter_core.isDefined(obj[key]); }, false);\n};\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n */\nfunction ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (_uirouter_core.isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return _uirouter_core.isDefined(state[key]); }).join(\", \")));\n    }\n    var views = {}, viewsObject = state.views || { \"$default\": _uirouter_core.pick(state, allViewKeys) };\n    _uirouter_core.forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || \"$default\";\n        // Account for views: { header: \"headerComponent\" }\n        if (_uirouter_core.isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = _uirouter_core.extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join(\"|\") + \" with: \" + nonCompKeys.join(\"|\") + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = \"ng1\";\n        config.$context = state;\n        config.$name = name;\n        var normalized = _uirouter_core.ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\nvar id = 0;\nvar Ng1ViewConfig = (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings) : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = _uirouter_core.services.$q;\n        var context = new _uirouter_core.ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return _uirouter_core.extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context))\n        };\n        return $q.all(promises).then(function (results) {\n            _uirouter_core.trace.traceViewServiceEvent(\"Loaded\", _this);\n            _this.controller = results.controller;\n            _uirouter_core.extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!_uirouter_core.isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = _uirouter_core.services.$injector.annotate(provider);\n        var providerFn = _uirouter_core.isArray(provider) ? _uirouter_core.tail(provider) : provider;\n        var resolvable = new _uirouter_core.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\n\n/** @module view */\n/** for typedoc */\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = ng.version.minor < 3;\n        /** @hidden */ this.$get = ['$http', '$templateCache', '$injector', function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            }];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    \n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = \"<ui-view></ui-view>\";\n        var asTemplate = function (result) { return _uirouter_core.services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return _uirouter_core.services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return (_uirouter_core.isDefined(config.template) ? asTemplate(this.fromString(config.template, params)) :\n            _uirouter_core.isDefined(config.templateUrl) ? asTemplate(this.fromUrl(config.templateUrl, params)) :\n                _uirouter_core.isDefined(config.templateProvider) ? asTemplate(this.fromProvider(config.templateProvider, params, context)) :\n                    _uirouter_core.isDefined(config.component) ? asComponent(config.component) :\n                        _uirouter_core.isDefined(config.componentProvider) ? asComponent(this.fromComponentProvider(config.componentProvider, params, context)) :\n                            asTemplate(defaultTemplate));\n    };\n    \n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return _uirouter_core.isFunction(template) ? template(params) : template;\n    };\n    \n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (_uirouter_core.isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http.get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    \n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = _uirouter_core.services.$injector.annotate(provider);\n        var providerFn = _uirouter_core.isArray(provider) ? _uirouter_core.tail(provider) : provider;\n        var resolvable = new _uirouter_core.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    \n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = _uirouter_core.services.$injector.annotate(provider);\n        var providerFn = _uirouter_core.isArray(provider) ? _uirouter_core.tail(provider) : provider;\n        var resolvable = new _uirouter_core.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    \n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = ng.version.minor >= 3 ? \"::\" : \"\";\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = _uirouter_core.kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = fn && _uirouter_core.services.$injector.annotate(fn) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = _uirouter_core.isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(\",\") + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component).map(attributeTpl).join(\" \");\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    \n    return TemplateFactory;\n}());\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = _uirouter_core.services.$injector.get(name + \"Directive\"); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(_uirouter_core.unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (_uirouter_core.isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) { return Object.keys(bindingsObj || {})\n    .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n    .filter(function (tuple) { return _uirouter_core.isDefined(tuple) && _uirouter_core.isArray(tuple[1]); })\n    .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); }); };\n\n/** @module ng1 */ /** for typedoc */\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        _uirouter_core.createProxyFunctions(_uirouter_core.val(StateProvider.prototype), this, _uirouter_core.val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (_uirouter_core.isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\n\n/** @module ng1 */ /** */\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n */\nvar getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(state, parentFn) {\n        var hook = state[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new _uirouter_core.ResolveContext(trans.treeChanges(pathname));\n            var locals = _uirouter_core.extend(getLocals(resolveContext), { $state$: state, $transition$: trans });\n            return _uirouter_core.services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n */\nvar Ng1LocationServices = (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = _uirouter_core.val($locationProvider);\n        _uirouter_core.createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return _uirouter_core.removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = _uirouter_core.isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (newUrl)\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on(\"$locationChangeSuccess\", function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = _uirouter_core.val($location);\n        var _browser = _uirouter_core.val($browser);\n        // Bind these LocationService functions to $location\n        _uirouter_core.createProxyFunctions(_loc, this, _loc, [\"replace\", \"path\", \"search\", \"hash\"]);\n        // Bind these LocationConfig functions to $location\n        _uirouter_core.createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n        // Bind these LocationConfig functions to $browser\n        _uirouter_core.createProxyFunctions(_browser, this, _browser, ['baseHref']);\n    };\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (val$$1) {\n            return val$$1 != null ? val$$1.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val$$1;\n        };\n        pathType.decode = function (val$$1) {\n            return val$$1 != null ? val$$1.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val$$1;\n        };\n    };\n    return Ng1LocationServices;\n}());\n\n/** @module url */ /** */\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @deprecated\n */\nvar UrlRouterProvider = (function () {\n    /** @hidden */\n    function UrlRouterProvider(router) {\n        this._router = router;\n        this._urlRouter = router.urlRouter;\n    }\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlRouter = this._urlRouter;\n        urlRouter.update(true);\n        if (!urlRouter.interceptDeferred)\n            urlRouter.listen();\n        return urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!_uirouter_core.isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () {\n            return ruleFn(_uirouter_core.services.$injector, _this._router.locationService);\n        };\n        var rule = new _uirouter_core.BaseUrlRule(match, _uirouter_core.identity);\n        this._urlRouter.rule(rule);\n        return this;\n    };\n    \n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRouter = this._urlRouter;\n        if (_uirouter_core.isString(rule)) {\n            urlRouter.otherwise(rule);\n        }\n        else if (_uirouter_core.isFunction(rule)) {\n            urlRouter.otherwise(function () { return rule(_uirouter_core.services.$injector, _this._router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    \n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (_uirouter_core.isArray(handler) || _uirouter_core.isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this._router, handler);\n        }\n        this._urlRouter.when(what, handler);\n        return this;\n    };\n    \n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) {\n            return _uirouter_core.services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params });\n        };\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this._urlRouter.deferIntercept(defer);\n    };\n    \n    return UrlRouterProvider;\n}());\n\n/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @module ng1\n * @preferred\n */\n/** for typedoc */\nng.module(\"ui.router.angular1\", []);\nvar mod_init = ng.module('ui.router.init', []);\nvar mod_util = ng.module('ui.router.util', ['ng', 'ui.router.init']);\nvar mod_rtr = ng.module('ui.router.router', ['ui.router.util']);\nvar mod_state = ng.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = ng.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = ng.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouter.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouter($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new _uirouter_core.UIRouter();\n    router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator(\"views\", ng1ViewsBuilder);\n    router.stateRegistry.decorator(\"onExit\", getStateHookBuilder(\"onExit\"));\n    router.stateRegistry.decorator(\"onRetain\", getStateHookBuilder(\"onRetain\"));\n    router.stateRegistry.decorator(\"onEnter\", getStateHookBuilder(\"onEnter\"));\n    router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n    var ng1LocationService = router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider);\n    Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return ['$uiRouterProvider', function ($urp) {\n        var service = $urp.router[serviceName];\n        service[\"$get\"] = function () { return service; };\n        return service;\n    }]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    _uirouter_core.services.$injector = $injector;\n    _uirouter_core.services.$q = $q;\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry.get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(_uirouter_core.unnestR, [])\n        .filter(function (x) { return x.deps === \"deferred\"; })\n        .forEach(function (resolvable) { return resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) {\n    return uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter);\n};\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () {\n    return _uirouter_core.extend(router.stateProvider, { $get: function () { return router.stateService; } });\n};\nwatchDigests.$inject = ['$rootScope'];\nfunction watchDigests($rootScope) {\n    $rootScope.$watch(function () { _uirouter_core.trace.approximateDigests++; });\n}\nmod_init.provider(\"$uiRouter\", $uiRouter);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service(\"$trace\", function () { return _uirouter_core.trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nvar getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(_uirouter_core.isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(_uirouter_core.applyPairs, {});\n};\n\n/**\n * # Angular 1 injectable services\n *\n * This is a list of the objects which can be injected using angular's injector.\n *\n * There are three different kind of injectable objects:\n *\n * ## **Provider** objects\n * #### injectable into a `.config()` block during configtime\n *\n * - [[$uiRouterProvider]]: The UI-Router instance\n * - [[$stateProvider]]: State registration\n * - [[$transitionsProvider]]: Transition hooks\n * - [[$urlServiceProvider]]: All URL related public APIs\n *\n * - [[$uiViewScrollProvider]]: Disable ui-router view scrolling\n * - [[$urlRouterProvider]]: (deprecated) Url matching rules\n * - [[$urlMatcherFactoryProvider]]: (deprecated) Url parsing config\n *\n * ## **Service** objects\n * #### injectable globally during runtime\n *\n * - [[$uiRouter]]: The UI-Router instance\n * - [[$trace]]: Enable transition trace/debug\n * - [[$transitions]]: Transition hooks\n * - [[$state]]: Imperative state related APIs\n * - [[$stateRegistry]]: State registration\n * - [[$urlService]]: All URL related public APIs\n * - [[$uiRouterGlobals]]: Global variables\n * - [[$uiViewScroll]]: Scroll an element into view\n *\n * - [[$stateParams]]: (deprecated) Global state param values\n * - [[$urlRouter]]: (deprecated) URL synchronization\n * - [[$urlMatcherFactory]]: (deprecated) URL parsing config\n *\n * ## **Per-Transition** objects\n *\n * - These kind of objects are injectable into:\n *   - Resolves ([[Ng1StateDeclaration.resolve]]),\n *   - Transition Hooks ([[TransitionService.onStart]], etc),\n *   - Routed Controllers ([[Ng1ViewDeclaration.controller]])\n *\n * #### Different instances are injected based on the [[Transition]]\n *\n * - [[$transition$]]: The current Transition object\n * - [[$stateParams]]: State param values for pending Transition (deprecated)\n * - Any resolve data defined using [[Ng1StateDeclaration.resolve]]\n *\n * @ng1api\n * @preferred\n * @module injectables\n */ /** */\n/**\n * The current (or pending) State Parameters\n *\n * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n *\n * The values are not updated until *after* a `Transition` successfully completes.\n *\n * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n *\n * ### Deprecation warning:\n *\n * The value injected for `$stateParams` is different depending on where it is injected.\n *\n * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * ### Instead of using the global `$stateParams` service object,\n * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n *\n * ```js\n * MyService.$inject = ['$uiRouterGlobals'];\n * function MyService($uiRouterGlobals) {\n *   return {\n *     paramValues: function () {\n *       return $uiRouterGlobals.params;\n *     }\n *   }\n * }\n * ```\n *\n * ### Instead of using the per-transition `$stateParams` object,\n * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n *\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n *\n * ---\n *\n * This object can be injected into other services.\n *\n * #### Deprecated Example:\n * ```js\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n * @deprecated\n */\n\n/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @ng1api\n * @preferred\n * @module directives\n */ /** for typedoc */\n/** @hidden */\nfunction parseStateRef(ref) {\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, \" \").match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = _uirouter_core.parse('$cfg.path')($uiView);\n    return path ? _uirouter_core.tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = _uirouter_core.extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === \"FORM\";\n    return {\n        attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n        isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n        clickable: !isForm\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition = $timeout(function () {\n                $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount-- <= 0)\n                    $timeout.cancel(transition);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: \"sref\"\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!_uirouter_core.isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSref;\nuiSref = ['$uiRouter', '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val$$1) {\n                        rawDef.uiStateParams = _uirouter_core.extend({}, val$$1);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = _uirouter_core.extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiState;\nuiState = ['$uiRouter', '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return (acc[attr] = _uirouter_core.noop, acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the <div> and <a> elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActive;\nuiSrefActive = ['$state', '$stateParams', '$interpolate', '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: \"A\",\n            controller: ['$scope', '$element', '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [], activeEqClass, uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    if (_uirouter_core.isObject(uiSrefActive)) {\n                        _uirouter_core.forEach(uiSrefActive, function (stateOrName, activeClass) {\n                            if (_uirouter_core.isString(stateOrName)) {\n                                var ref = parseStateRef(stateOrName);\n                                addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                            }\n                        });\n                    }\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (_uirouter_core.isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, _uirouter_core.noop);\n                    }\n                    $scope.$on('$stateChangeSuccess', update);\n                    $scope.$on('$destroy', $uiRouter.transitionService.onStart({}, updateAfterTransition));\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            _uirouter_core.removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) {\n                            return str.split(/\\s/).filter(_uirouter_core.identity);\n                        };\n                        var getClasses = function (stateList) {\n                            return stateList.map(function (x) { return x.activeClass; }).map(splitClasses).reduce(_uirouter_core.unnestR, []);\n                        };\n                        var allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(_uirouter_core.uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(_uirouter_core.uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !_uirouter_core.inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                }]\n        };\n    }];\nng.module('ui.router.state')\n    .directive('uiSref', uiSref)\n    .directive('uiSrefActive', uiSrefActive)\n    .directive('uiSrefActiveEq', uiSrefActive)\n    .directive('uiState', uiState);\n\n/** @module ng1 */ /** for typedoc */\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nng.module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\n\n/**\n * @ng1api\n * @module directives\n */ /** for typedoc */\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * ### Attributes\n *\n * - `name`: (Optional) A view name.\n *   The name should be unique amongst the other views in the same state.\n *   You can have views of the same name that live in different states.\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n *\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n *   Uses [[$uiViewScroll]] to do the scrolling.\n *\n * - `onload`: Expression to evaluate whenever the view updates.\n *\n * #### Example:\n * A view can be unnamed or named.\n * ```html\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n *\n * <!-- Named (different style) -->\n * <ui-view name=\"viewName\"></ui-view>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n *\n * ```html\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n *\n * ```html\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * #### Examples for `autoscroll`:\n * ```html\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * #### Example:\n * ```js\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nvar uiView;\nuiView = ['$view', '$animate', '$uiViewScroll', '$interpolate', '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (ng.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (ng.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                }\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {}\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var previousEl, currentEl, currentScope, unregister, onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), viewConfig = undefined, inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + \".\" + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            var fromParentTagConfig = _uirouter_core.parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = _uirouter_core.parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        }\n                    };\n                    _uirouter_core.trace.traceUIViewEvent(\"Linking\", activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        _uirouter_core.trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on(\"$destroy\", function () {\n                        _uirouter_core.trace.traceUIViewEvent(\"Destroying/Unregistering\", activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            _uirouter_core.trace.traceUIViewEvent(\"Removing (previous) el\", previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            _uirouter_core.trace.traceUIViewEvent(\"Destroying scope\", activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            _uirouter_core.trace.traceUIViewEvent(\"Animate out\", _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if (_uirouter_core.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            }\n        };\n        return directive;\n    }];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = _uirouter_core.parse('viewDecl.controllerAs');\n    var getResolveAs = _uirouter_core.parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: ng_from_import.noop };\n                var resolveCtx = cfg.path && new _uirouter_core.ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                _uirouter_core.trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = $controller(controller, _uirouter_core.extend({}, locals, { $scope: scope, $element: $element }));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (_uirouter_core.isString(cfg.viewDecl.component)) {\n                    var cmp_1 = cfg.viewDecl.component;\n                    var kebobName = _uirouter_core.kebobString(cmp_1);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", \"i\");\n                    var getComponentController = function () {\n                        var directiveEl = [].slice.call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && ng.element(directiveEl).data(\"$\" + cmp_1 + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        }\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof ng.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (_uirouter_core.isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = _uirouter_core.tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onParamsChange\n    if (_uirouter_core.isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new _uirouter_core.ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params(\"to\");\n            var fromParams = $transition$.params(\"from\");\n            var toSchema = $transition$.treeChanges().to.map(function (node) { return node.paramSchema; }).reduce(_uirouter_core.unnestR, []);\n            var fromSchema = $transition$.treeChanges().from.map(function (node) { return node.paramSchema; }).reduce(_uirouter_core.unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = _uirouter_core.filter(toParams, function (val$$1, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (_uirouter_core.isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && (trans[cacheProp_1] && trans[cacheProp_1][id_1] === true || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise, ids = trans[cacheProp_1] = trans[cacheProp_1] || {};\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val$$1) { return ids[id_1] = (val$$1 !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nng.module('ui.router.state').directive('uiView', uiView);\nng.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\n/** @module ng1 */ /** */\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        }];\n}\nng.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * Main entry point for angular 1.x build\n * @module ng1\n */ /** */\nvar index = \"ui.router\";\n\nexports['default'] = index;\nexports.core = _uirouter_core;\nexports.watchDigests = watchDigests;\nexports.getLocals = getLocals;\nexports.getNg1ViewConfigFactory = getNg1ViewConfigFactory;\nexports.ng1ViewsBuilder = ng1ViewsBuilder;\nexports.Ng1ViewConfig = Ng1ViewConfig;\nexports.StateProvider = StateProvider;\nexports.UrlRouterProvider = UrlRouterProvider;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ui-router-angularjs.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/@uirouter/angularjs/release/ui-router-angularjs.js\n// module id = 69\n// module chunks = 1","/**\n * UI-Router Core: Framework agnostic, State-based routing for JavaScript Single Page Apps\n * @version v5.0.6\n * @link https://ui-router.github.io\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global['@uirouter/core'] = global['@uirouter/core'] || {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nfunction curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nfunction compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nfunction pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nvar prop = function (name) {\n    return function (obj) { return obj && obj[name]; };\n};\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nvar propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nvar parse = function (name) {\n    return pipe.apply(null, name.split(\".\").map(prop));\n};\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nvar not = function (fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    };\n};\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nfunction and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nfunction or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nvar all = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n};\nvar any = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n};\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nvar is = function (ctor) {\n    return function (obj) {\n        return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n    };\n};\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nvar eq = function (val) { return function (other) {\n    return val === other;\n}; };\n/** Given a value, returns a function which returns the value */\nvar val = function (v) { return function () { return v; }; };\nfunction invoke(fnName, args) {\n    return function (obj) {\n        return obj[fnName].apply(obj, args);\n    };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nfunction pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n\n/**\n * @coreapi\n * @module core\n */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text.split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        }).join('');\n        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n    }\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    return Glob;\n}());\n\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name) // might return null\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + \".\" + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return this.parent && this.parent.root() || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n        return inherited.concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (this.url && this.url.parameter(id, opts) ||\n            find(values(this.params), propEq('id', id)) ||\n            opts.inherit && this.parent && this.parent.parameter(id));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) {\n        return isObject(obj['__stateObjectCache']);\n    };\n    return StateObject;\n}());\n\n/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */\n/** */\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\nvar isUndefined = tis('undefined');\nvar isDefined = not(isUndefined);\nvar isNull = function (o) { return o === null; };\nvar isNullOrUndefined = or(isNull, isUndefined);\nvar isFunction = tis('function');\nvar isNumber = tis('number');\nvar isString = tis('string');\nvar isObject = function (x) { return x !== null && typeof x === 'object'; };\nvar isArray = Array.isArray;\nvar isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nvar isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\nvar isState = StateObject.isState;\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nfunction isInjectable(val$$1) {\n    if (isArray(val$$1) && val$$1.length) {\n        var head = val$$1.slice(0, -1), tail = val$$1.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val$$1);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nvar isPromise = and(isObject, pipe(prop('then'), isFunction));\n\nvar notImplemented = function (fnname) { return function () {\n    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded.\");\n}; };\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\n\n/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred\n * @module common\n */\n/** for typedoc */\nvar w = typeof window === 'undefined' ? {} : window;\nvar angular = w.angular || {};\nvar fromJson = angular.fromJson || JSON.parse.bind(JSON);\nvar toJson = angular.toJson || JSON.stringify.bind(JSON);\nvar copy = angular.copy || _copy;\nvar forEach = angular.forEach || _forEach;\nvar extend = Object.assign || _extend;\nvar equals = angular.equals || _equals;\nfunction identity(x) { return x; }\nfunction noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nfunction createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) {\n        return source()[fnName].bind(bind());\n    };\n    var makeLateRebindFn = function (fnName) { return function lateRebindFunction() {\n        target[fnName] = bindFunction(fnName);\n        return target[fnName].apply(null, arguments);\n    }; };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nvar inherit = function (parent, extra) {\n    return extend(Object.create(parent), extra);\n};\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nvar inArray = curry(_inArray);\nfunction _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nvar removeFrom = curry(_removeFrom);\nfunction _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nvar pushTo = curry(_pushTo);\nfunction _pushTo(arr, val$$1) {\n    return (arr.push(val$$1), val$$1);\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nvar deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nfunction defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var _defaultsList = defaultsList.concat({}).reverse();\n    var defaultVals = extend.apply(null, _defaultsList);\n    return extend({}, defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nvar mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n    var path = [];\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nfunction pick(obj, propNames) {\n    var objCopy = {};\n    for (var prop_1 in obj) {\n        if (propNames.indexOf(prop_1) !== -1) {\n            objCopy[prop_1] = obj[prop_1];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nfunction omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return (acc[key] = obj[key], acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nfunction pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nfunction filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nfunction find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nvar mapObj = map;\n/** Maps an array or object properties using a callback function */\nfunction map(collection, callback) {\n    var result = isArray(collection) ? [] : {};\n    forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n    return result;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nvar values = function (obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n};\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nvar allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nvar anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nvar unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nvar flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nfunction pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nvar uniqR = function (acc, token) {\n    return inArray(acc, token) ? acc : pushR(acc, token);\n};\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nvar unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nvar flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nvar assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nvar assertMap = assertFn;\nfunction assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nvar pairs = function (obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n};\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nfunction arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var i, result = [];\n    for (i = 0; i < maxArrayLen; i++) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nfunction applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error(\"invalid parameters to applyPairs\");\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nfunction tail(arr) {\n    return arr.length && arr[arr.length - 1] || undefined;\n}\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nfunction _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var key, keys = {};\n    for (key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nvar silenceUncaughtInPromise = function (promise) {\n    return promise.catch(function (e) { return 0; }) && promise;\n};\nvar silentRejection = function (error) {\n    return silenceUncaughtInPromise(services.$q.reject(error));\n};\n\n/**\n * @module common\n */ /** for typedoc */\nvar Queue = (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            items.shift();\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n\n(function (RejectType) {\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(exports.RejectType || (exports.RejectType = {}));\n/** @hidden */ var id = 0;\nvar Rejection = (function () {\n    function Rejection(type, message, detail) {\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) {\n            return d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d);\n        };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && (typeof obj.then === 'function') && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = \"The transition has been superseded by a different transition\";\n        var rejection = new Rejection(exports.RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = \"This transition is invalid\";\n        return new Rejection(exports.RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = \"The transition was ignored\";\n        return new Rejection(exports.RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = \"The transition has been aborted\";\n        return new Rejection(exports.RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = \"The transition errored\";\n        return new Rejection(exports.RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    return Rejection;\n}());\n\n/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @coreapi\n * @module trace\n */ /** for typedoc */\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? exports.Category[input] : exports.Category[exports.Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\n\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(exports.Category || (exports.Category = {}));\n/** @hidden */ var _tid = parse(\"$id\");\n/** @hidden */ var _rid = parse(\"router.$id\");\n/** @hidden */ var transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(exports.Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return exports.Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(exports.Category.HOOK))\n            return;\n        var event = parse(\"traceData.hookType\")(options) || \"internal\", context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\", name = functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(exports.Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(exports.Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(exports.Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(exports.Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = \"\"; }\n        if (!this.enabled(exports.Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(exports.Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(exports.Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(exports.Category.VIEWCONFIG))\n            return;\n        var mapping = pairs.map(function (_a) {\n            var uiViewData = _a[0], config = _a[1];\n            var uiView = uiViewData.$type + \":\" + uiViewData.fqn;\n            var view = config && config.viewDecl.$context.name + \": \" + config.viewDecl.$name + \" (\" + config.viewDecl.$type + \")\";\n            return { 'ui-view fqn': uiView, 'state: view name': view };\n        }).sort(function (a, b) { return a['ui-view fqn'].localeCompare(b['ui-view fqn']); });\n        console.table(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(exports.Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(exports.Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\n\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(exports.TransitionHookPhase || (exports.TransitionHookPhase = {}));\n\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(exports.TransitionHookScope || (exports.TransitionHookScope = {}));\n\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _definition The internal state representation, if exists.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_identifier, _definition, _params, _options) {\n        if (_options === void 0) { _options = {}; }\n        this._identifier = _identifier;\n        this._definition = _definition;\n        this._options = _options;\n        this._params = _params || {};\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return this._definition && this._definition.name || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + toJson(this.params());\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) {\n        return obj && obj.state && (isString(obj.state) || isString(obj.state.name));\n    };\n    return TargetState;\n}());\n\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () {\n            return _this.type.hookPhase === exports.TransitionHookPhase.RUN && !_this.options.transition.isActive();\n        };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () {\n            return hook.callback.call(options.bind, _this.transition, _this.stateContext);\n        };\n        var normalizeErr = function (err) {\n            return Rejection.normalize(err).toPromise();\n        };\n        var handleError = function (err) {\n            return hook.eventType.getErrorHandler(_this)(err);\n        };\n        var handleResult = function (result) {\n            return hook.eventType.getResultHandler(_this)(result);\n        };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr)\n                    .then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val$$1) { return _this.handleHookResult(val$$1); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted(\"Hook aborted transition\").toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse(\"traceData.hookType\")(options) || \"internal\", context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\", name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) {\n            return prev.then(function () { return nextHook.invokeHook(); });\n        };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult)\n                    .then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) {\n            return hook.logError(Rejection.normalize(err));\n        });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) {\n        return hook.logError(error);\n    }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) {\n        return silentRejection(error);\n    }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nfunction matchState(state, criterion) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this._deregistered = false;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return map(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === exports.TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name]);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges) {\n        var matches = this._getMatchingNodes(treeChanges);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    return RegisteredHook;\n}());\n/** @hidden Return a registration function of the requested type. */\nfunction makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = registry._registeredHooks = (registry._registeredHooks || {});\n    var hooks = _registeredHooks[eventType.name] = [];\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, options);\n        hooks.push(registeredHook);\n        return function deregisterEventHook() {\n            registeredHook._deregistered = true;\n            removeFrom(hooks)(registeredHook);\n        };\n    }\n    return hookRegistrationFn;\n}\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node }\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === exports.TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks.map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges) {\n        var isCreate = hookType.hookPhase === exports.TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries.map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n\n/**\n * @coreapi\n * @module params\n */\n/** */\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) { return true; };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) { return a == b; };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === \"auto\" && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : (isDefined(val) ? [val] : []);\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0: return undefined;\n            case 1: return mode === \"auto\" ? val[0] : val;\n            default: return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return (allTruthyMode === true) ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode\n    });\n}\n\n/**\n * @coreapi\n * @module params\n */ /** for typedoc */\n/** @hidden */ var hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */ var isShorthand = function (cfg) {\n    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\n\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(exports.DefType || (exports.DefType = {}));\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    return extend(cfg, {\n        $$fn: isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue,\n    });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === exports.DefType.CONFIG ? \"any\" :\n            location === exports.DefType.PATH ? \"path\" :\n                location === exports.DefType.SEARCH ? \"query\" : \"string\";\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var replace, configuredKeys, defaultPolicy = [\n        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") },\n    ];\n    replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    configuredKeys = map(replace, prop(\"from\"));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = (function () {\n    function Param(id, type, config, location, urlMatcherFactory) {\n        config = unwrapShorthand(config);\n        type = getType(config, type, location, id, urlMatcherFactory.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === exports.DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === exports.DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlMatcherFactory.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit$$1 = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: (location === exports.DefType.SEARCH ? \"auto\" : false) };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit$$1, array: arrayMode, config: config });\n    }\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error(\"Injectable functions cannot be called at configuration time\");\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val$$1) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val$$1)\n                    return tuple.to;\n            }\n            return val$$1;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === exports.DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    Param.values = function (params, values$$1) {\n        if (values$$1 === void 0) { values$$1 = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values$$1[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values$$1) {\n        if (values$$1 === void 0) { values$$1 = {}; }\n        return params.map(function (param) { return param.validates(values$$1[param.id]); }).reduce(allTrueR, true);\n    };\n    return Param;\n}());\n\n/** @module path */ /** for typedoc */\n/**\n * @internalapi\n *\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq(\"id\", name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /** Returns a clone of the PathNode */\n    PathNode.clone = function (node) {\n        return new PathNode(node);\n    };\n    return PathNode;\n}());\n\n/** @module path */ /** for typedoc */\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (path) {\n        var state = tail(path).state;\n        return new TargetState(state, state, path.map(prop(\"paramValues\")).reduce(mergeR, {}));\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath.map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n        var nodesMatch = function (node1, node2) {\n            return node1.equals(node2, PathUtils.nonDynamicParams);\n        };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = PathNode.clone(retainedNode);\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = (retainedWithToParams).concat(entering);\n        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length &&\n            PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false })\n            .filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) {\n        return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {});\n    };\n    return PathUtils;\n}());\n\n/**\n * @coreapi\n * @module resolve\n */ /** for typedoc */\n// TODO: explicitly make this user configurable\nvar defaultResolvePolicy = {\n    when: \"LAZY\",\n    async: \"WAIT\"\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error(\"new Resolvable(): token argument is required\");\n            if (!isFunction(resolveFn))\n                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && isFunction(arg1.resolveFn)) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = state && state.resolvePolicy || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) {\n                return resolvable.get(resolveContext, trans);\n            }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) {\n            return _this.resolveFn.apply(null, resolvedDeps);\n        };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached.take(1).toPromise().then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return this.promise = $q.when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue);\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) {\n        return new Resolvable(token, function () { return data; }, null, null, data);\n    };\n    return Resolvable;\n}());\n\n/** @internalapi */\nvar resolvePolicies = {\n    when: {\n        LAZY: \"LAZY\",\n        EAGER: \"EAGER\"\n    },\n    async: {\n        WAIT: \"WAIT\",\n        NOWAIT: \"NOWAIT\",\n        RXWAIT: \"RXWAIT\"\n    }\n};\n\n/** @module resolve */\n/** for typedoc */\nvar when = resolvePolicies.when;\nvar ALL_WHENS = [when.EAGER, when.LAZY];\nvar EAGER_WHENS = [when.EAGER];\nvar NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path.map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = \"LAZY\"; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : \"LAZY\";\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) {\n            return function (resolvable) {\n                return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n            };\n        };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) { return r.get(subContext, trans)\n                .then(function (value) { return ({ token: r.token, value: value }); }); };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (!fromInjector) {\n                throw new Error(\"Could not find Dependency Injection token: \" + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nvar UIInjectorImpl = (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error(\"Resolvable async .get() not complete:\" + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.native && this.native.get(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\n/** @hidden */\nvar stateSelf = prop(\"self\");\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () {\n            return _this.router.globals.transition === _this;\n        };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(exports.TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) { return; };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi._getEvents()\n            .filter(function (type) { return type.hookPhase !== exports.TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to)) ||\n            (compare.from && !matchState(this.$from(), compare.from)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return Object.freeze(this._treeChanges[pathname].map(prop(\"paramValues\")).reduce(mergeR, {}));\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `data` resolve\n     *   // even though `foo.bar` also has a `data` resolve\n     *   var fooData = trans.injector('foo').get('data');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `data` from the exiting state.\n     *   var fooData = trans.injector(null, 'foo.bar').get('data');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = \"to\"; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = \"\"; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = (typeof state === \"string\") ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state')).map(stateSelf).reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = \"entering\"; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path.map(prop(\"views\")).filter(identity).reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: \"redirect\" };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = new TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams)\n            .filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return \"SameAsPending\";\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return \"SameAsCurrent\";\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) {\n            return _this._hookBuilder.buildHooksForPhase(phase);\n        };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(exports.TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(exports.TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(exports.TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(exports.TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract)\n            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n        var paramDefs = state.parameters(), values$$1 = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values$$1[param.id]); });\n        if (invalidParams.length) {\n            return \"Param values not valid for state '\" + state.name + \"'. Invalid params: [ \" + invalidParams.map(function (param) { return param.id; }).join(', ') + \" ]\";\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : omit(params, [\"#\"]);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = toJson(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = toJson(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\n\n/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nfunction maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + \"...\";\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nfunction padString(length, str) {\n    while (str.length < length)\n        str += \" \";\n    return str;\n}\nfunction kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n}\nfunction functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || \"\";\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nfunction fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return _fn && _fn.toString() || \"undefined\";\n}\nvar stringifyPatternFn = null;\nvar stringifyPattern = function (value) {\n    var isRejection = Rejection.isRejectionPromise;\n    stringifyPatternFn = stringifyPatternFn || pattern([\n        [not(isDefined), val(\"undefined\")],\n        [isNull, val(\"null\")],\n        [isPromise, val(\"[Promise]\")],\n        [isRejection, function (x) { return x._transitionRejection.toString(); }],\n        [is(Rejection), invoke(\"toString\")],\n        [is(Transition), invoke(\"toString\")],\n        [is(Resolvable), invoke(\"toString\")],\n        [isInjectable, functionToString],\n        [val(true), identity]\n    ]);\n    return stringifyPatternFn(value);\n};\nfunction stringify(o) {\n    var seen = [];\n    function format(val$$1) {\n        if (isObject(val$$1)) {\n            if (seen.indexOf(val$$1) !== -1)\n                return '[circular ref]';\n            seen.push(val$$1);\n        }\n        return stringifyPattern(val$$1);\n    }\n    return JSON.stringify(o, function (key, val$$1) { return format(val$$1); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nvar beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nfunction splitOnDelim(delim) {\n    var re = new RegExp(\"(\" + delim + \")\", \"g\");\n    return function (str) {\n        return str.split(re).filter(identity);\n    };\n}\n\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nfunction joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n\n/** @module common */ /** for typedoc */\n\n/**\n * @coreapi\n * @module params\n */\n/** */\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n */\nvar ParamTypes = (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\"hash\", \"string\", \"query\", \"path\", \"int\", \"bool\", \"date\", \"json\", \"any\"]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) {\n            return new ParamType(extend({ name: name }, definition));\n        };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val$$1) {\n            return val$$1 != null ? val$$1.toString() : val$$1;\n        };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val$$1) { return parseInt(val$$1, 10); },\n            is: function (val$$1) {\n                return !isNullOrUndefined(val$$1) && this.decode(val$$1.toString()) === val$$1;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val$$1) { return val$$1 && 1 || 0; },\n            decode: function (val$$1) { return parseInt(val$$1, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/\n        }),\n        date: makeDefaultType({\n            encode: function (val$$1) {\n                return !this.is(val$$1) ? undefined : [\n                    val$$1.getFullYear(),\n                    ('0' + (val$$1.getMonth() + 1)).slice(-2),\n                    ('0' + val$$1.getDate()).slice(-2)\n                ].join(\"-\");\n            },\n            decode: function (val$$1) {\n                if (this.is(val$$1))\n                    return val$$1;\n                var match = this.capture.exec(val$$1);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val$$1) { return val$$1 instanceof Date && !isNaN(val$$1.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate']\n                    .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n\n/**\n * @coreapi\n * @module params\n */\n/** */\n/** @internalapi */\nvar StateParams = (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    \n    return StateParams;\n}());\n\n/** @module path */ /** for typedoc */\n\n/** @module resolve */ /** for typedoc */\n\n/** @module state */ /** for typedoc */\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(state) {\n        var stateDec = state;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n        }\n        var parsed = parseUrl(stateDec.url), parent = state.parent;\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n            params: state.params || {},\n            paramMap: function (paramConfig, isSearch) {\n                if (stateDec.reloadOnSearch === false && isSearch)\n                    paramConfig = extend(paramConfig || {}, { dynamic: true });\n                return paramConfig;\n            }\n        });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, config); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nfunction resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || \"deferred\";\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val))); };\n    /** extracts the token from a Provider or provide literal */\n    var token = function (p) { return p.provide || p.token; };\n    /** Given a literal resolve or provider object, returns a Resolvable */\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(token(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    var tuple2Resolvable = pattern([\n        [pipe(prop(\"val\"), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop(\"val\"), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop(\"val\"), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + stringify(obj)); }]\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(\"\"); };\n        var isRoot = function (state) { return state.name === \"\"; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder]\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || \"\";\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join(\".\");\n        }\n        if (!state.parent)\n            return \"\";\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + \".\" + name : name;\n    };\n    return StateBuilder;\n}());\n\n/** @module state */ /** for typedoc */\nvar StateMatcher = (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || \"\";\n        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== \"\")\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (state) {\n                return state.__stateObjectCache.nameGlob &&\n                    state.__stateObjectCache.nameGlob.matches(name);\n            });\n            if (matches.length > 1) {\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === \"\" && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === \"^\") {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join(\".\");\n        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n    };\n    return StateMatcher;\n}());\n\n/** @module state */ /** for typedoc */\n/** @internalapi */\nvar StateQueueManager = (function () {\n    function StateQueueManager($registry, $urlRouter, states, builder, listeners) {\n        this.$registry = $registry;\n        this.$urlRouter = $urlRouter;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n        this.matcher = $registry.matcher;\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error(\"State must have a valid name\");\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) {\n            return _this.states.hasOwnProperty(name) && _this.states[name];\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + \".**\");\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.$registry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        if (registered.length) {\n            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n        }\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        this.$urlRouter.rule(this.$urlRouter.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\n\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\nvar StateRegistry = (function () {\n    /** @internalapi */\n    function StateRegistry(_router) {\n        this._router = _router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, _router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(this, _router.urlRouter, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true }\n            },\n            abstract: true\n        };\n        var _root = this._root = this.stateQueue.register(rootStateDef);\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all$$1 = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var children = all$$1.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return children.length === 0 ? children : children.concat(getChildren(children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (state) {\n            var $ur = _this._router.urlRouter;\n            // Remove URL rule\n            $ur.rules().filter(propEq(\"state\", state)).forEach($ur.removeRule.bind($ur));\n            // Remove state from registry\n            delete _this.states[state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return found && found.self || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\n\n/**\n * @coreapi\n * @module url\n */\n/** for typedoc */\n/** @hidden */\nfunction quoteRegExp(string, param) {\n    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, prop$$1, fn) {\n    return obj[prop$$1] = obj[prop$$1] || fn();\n};\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param config  A configuration object\n     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n     */\n    function UrlMatcher(pattern$$1, paramTypes, paramFactory, config) {\n        var _this = this;\n        this.config = config;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.pattern = pattern$$1;\n        this.config = defaults(this.config, {\n            params: {},\n            strict: true,\n            caseInsensitive: false,\n            paramMap: identity\n        });\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern$$1 + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern$$1 + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (regexp) { return inherit(paramTypes.type(isSearch ? \"query\" : \"path\"), {\n                pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n            }); };\n            return {\n                id: id,\n                regexp: regexp,\n                cfg: _this.config.params[id],\n                segment: pattern$$1.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp)\n            };\n        };\n        var p, segment;\n        while ((m = placeholder.exec(pattern$$1))) {\n            p = matchDetails(m, false);\n            if (p.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(p.id);\n            this._params.push(paramFactory.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false)));\n            this._segments.push(p.segment);\n            patterns.push([p.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern$$1.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                while ((m = searchPlaceholder.exec(search))) {\n                    p = matchDetails(m, true);\n                    checkParamErrors(p.id);\n                    this._params.push(paramFactory.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true)));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (pattern$$1) { return quoteRegExp.apply(null, pattern$$1); }).concat(quoteRegExp(segment));\n    }\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '\\/?' : '',\n                '$'\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        //options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values$$1 = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(string) {\n            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n            var split = reverseString(string).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values$$1[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values$$1[param.id] = param.value(value);\n        });\n        if (hash)\n            values$$1[\"#\"] = hash;\n        return values$$1;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val$$1) {\n            return !param || param.validates(val$$1);\n        };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values$$1) {\n        if (values$$1 === void 0) { values$$1 = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return isString(x) ? x : getDetails(x); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers.map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values$$1[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, \"\");\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams.map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val$$1) { return param.id + \"=\" + val$$1; });\n        }).filter(identity).reduce(unnestR, []).join(\"&\");\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : \"\") + (values$$1[\"#\"] ? \"#\" + values$$1[\"#\"] : \"\");\n    };\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        return encodeURIComponent(str).replace(/-/g, function (c) { return \"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase(); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === exports.DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== \"\" && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === exports.DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return matcher._cache.segments = matcher._cache.segments ||\n                matcher._cache.path.map(UrlMatcher.pathSegmentsAndParams)\n                    .reduce(unnestR, [])\n                    .reduce(joinNeighborsR, [])\n                    .map(function (x) { return isString(x) ? splitOnSlash(x) : x; })\n                    .reduce(unnestR, []);\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return matcher._cache.weights = matcher._cache.weights ||\n                segments(matcher).map(function (segment) {\n                    // Sort slashes first, then static strings, the Params\n                    if (segment === '/')\n                        return 1;\n                    if (isString(segment))\n                        return 2;\n                    if (segment instanceof Param)\n                        return 3;\n                });\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var cmp, i, pairs$$1 = arrayTuples(weightsA, weightsB);\n        for (i = 0; i < pairs$$1.length; i++) {\n            cmp = pairs$$1[i][0] - pairs$$1[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\n\n/**\n * @internalapi\n * @module url\n */ /** for typedoc */\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nvar UrlMatcherFactory = (function () {\n    function UrlMatcherFactory() {\n        var _this = this;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @hidden */\n        this._getConfig = function (config) {\n            return extend({ strict: _this._isStrictMode, caseInsensitive: _this._isCaseInsensitive }, config);\n        };\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = {\n            /** Creates a new [[Param]] from a CONFIG block */\n            fromConfig: function (id, type, config) {\n                return new Param(id, type, config, exports.DefType.CONFIG, _this);\n            },\n            /** Creates a new [[Param]] from a url PATH */\n            fromPath: function (id, type, config) {\n                return new Param(id, type, config, exports.DefType.PATH, _this);\n            },\n            /** Creates a new [[Param]] from a url SEARCH */\n            fromSearch: function (id, type, config) {\n                return new Param(id, type, config, exports.DefType.SEARCH, _this);\n            },\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n        return this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.strictMode = function (value) {\n        return this._isStrictMode = isDefined(value) ? value : this._isStrictMode;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy;\n    };\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        return new UrlMatcher(pattern, this.paramTypes, this.paramFactory, this._getConfig(config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    \n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A [[ParamType]] can be used to generate URLs with typed parameters.\n     *\n     * @param name  The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     *\n     * Note: Register custom types *before using them* in a state definition.\n     *\n     * See [[ParamTypeDefinition]] for examples\n     */\n    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    \n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        this.paramTypes.enqueue = false;\n        this.paramTypes._flushTypeQueue();\n        return this;\n    };\n    \n    /** @internalapi */\n    UrlMatcherFactory.prototype.dispose = function () {\n        this.paramTypes.dispose();\n    };\n    return UrlMatcherFactory;\n}());\n\n/**\n * @coreapi\n * @module url\n */ /** */\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function match(url) {\n            var match = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(match) && match;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: \"URLMATCHER\" };\n        return extend(new BaseUrlRule(match, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: \"url\" });\n            }\n        };\n        var details = { state: state, type: \"STATE\" };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error(\"Rule RegExp must not be global or sticky\");\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n                return match[what === '$' ? 0 : Number(what)];\n            });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var match = function (url) {\n            return regexp.exec(url.path);\n        };\n        var details = { regexp: regexp, type: \"REGEXP\" };\n        return extend(new BaseUrlRule(match, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) {\n        return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); });\n    };\n    return UrlRuleFactory;\n}());\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = \"RAW\";\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\n\n/**\n * @internalapi\n * @module url\n */\n/** for typedoc */\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return baseHref.slice(0, -1) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/** @hidden */\nvar prioritySort = function (a, b) {\n    return (b.priority || 0) - (a.priority || 0);\n};\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { \"STATE\": 4, \"URLMATCHER\": 4, \"REGEXP\": 3, \"RAW\": 2, \"OTHER\": 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRulesApi.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @coreapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class updates the URL when the state changes.\n * It also responds to changes in the URL.\n */\nvar UrlRouter = (function () {\n    /** @hidden */\n    function UrlRouter(router) {\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this.interceptDeferred = false;\n        /** @hidden */ this._id = 0;\n        /** @hidden */ this._sorted = false;\n        this._router = router;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n        createProxyFunctions(val(UrlRouter.prototype), this, val(this));\n    }\n    /** @internalapi */\n    UrlRouter.prototype.dispose = function () {\n        this.listen(false);\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sort = function (compareFn) {\n        this._rules = this.stableSort(this._rules, this._sortFn = compareFn || this._sortFn);\n        this._sorted = true;\n    };\n    UrlRouter.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    UrlRouter.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0\n                ? wrapperA.idx - wrapperB.idx\n                : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Given a URL, check all rules and return the best [[MatchResult]]\n     * @param url\n     * @returns {MatchResult}\n     */\n    UrlRouter.prototype.match = function (url) {\n        var _this = this;\n        this.ensureSorted();\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules();\n        if (this._otherwiseFn)\n            rules.push(this._otherwiseFn);\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this._router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && this._sortFn(rules[i], best.rule) !== 0)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = (!best || current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var router = this._router, $url = router.urlService, $state = router.stateService;\n        var url = {\n            path: $url.path(), search: $url.search(), hash: $url.hash(),\n        };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return $url.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return $state.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return $state.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, router));\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopFn && this._stopFn();\n            delete this._stopFn;\n        }\n        else {\n            return this._stopFn = this._stopFn || this._router.urlService.onChange(function (evt) { return _this.sync(evt); });\n        }\n    };\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this._router.locationService;\n        if (read) {\n            this.location = $url.path();\n            return;\n        }\n        if ($url.path() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this._router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this._router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = \"#\" + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[UrlRouter.urlRuleFactory]], or create manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRouter.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error(\"invalid rule\");\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.slice();\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    \n    /** @inheritdoc */\n    UrlRouter.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    \n    /** @inheritdoc */\n    UrlRouter.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    \n    /** @inheritdoc */\n    UrlRouter.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    \n    return UrlRouter;\n}());\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n\n/**\n * @coreapi\n * @module view\n */ /** for typedoc */\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = (function () {\n    function ViewService() {\n        var _this = this;\n        this._uiViews = [];\n        this._viewConfigs = [];\n        this._viewConfigFactories = {};\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n        };\n    }\n    ViewService.prototype._rootViewContext = function (context) {\n        return this._rootContext = context || this._rootContext;\n    };\n    \n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) {\n                return context && context.parent ? stateDepth(context.parent) + 1 : 1;\n            };\n            return (uiView.fqn.split(\".\").length * 10000) + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return [uiView, matchingConfigs[0]];\n        };\n        var configureUIView = function (_a) {\n            var uiView = _a[0], viewConfig = _a[1];\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(uiView) !== -1)\n                uiView.configUpdated(viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var pairs$$1 = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        trace.traceViewSync(pairs$$1);\n        pairs$$1.forEach(configureUIView);\n    };\n    \n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    \n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop(\"fqn\"));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop(\"$config\")).map(prop(\"name\"));\n    };\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = \"\"; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split(\"@\");\n        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = \"\"; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n            uiViewContextAnchor = anchor.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split(\".\");\n        var uivSegments = uiView.fqn.split(\".\");\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = (1 - vcSegments.length) || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\n\n/**\n * @coreapi\n * @module core\n */ /** */\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\n\n/**\n * @coreapi\n * @module url\n */ /** */\n/** @hidden */\nvar makeStub = function (keys) {\n    return keys.reduce(function (acc, key) { return (acc[key] = notImplemented(key), acc); }, { dispose: noop });\n};\n/** @hidden */ var locationServicesFns = [\"url\", \"path\", \"search\", \"hash\", \"onChange\"];\n/** @hidden */ var locationConfigFns = [\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"];\n/** @hidden */ var umfFns = [\"type\", \"caseInsensitive\", \"strictMode\", \"defaultSquashPolicy\"];\n/** @hidden */ var rulesFns = [\"sort\", \"when\", \"initial\", \"otherwise\", \"rules\", \"rule\", \"removeRule\"];\n/** @hidden */ var syncFns = [\"deferIntercept\", \"listen\", \"sync\", \"match\"];\n/**\n * API for URL management\n */\nvar UrlService = (function () {\n    /** @hidden */\n    function UrlService(router, lateBind) {\n        if (lateBind === void 0) { lateBind = true; }\n        this.router = router;\n        this.rules = {};\n        this.config = {};\n        // proxy function calls from UrlService to the LocationService/LocationConfig\n        var locationServices = function () { return router.locationService; };\n        createProxyFunctions(locationServices, this, locationServices, locationServicesFns, lateBind);\n        var locationConfig = function () { return router.locationConfig; };\n        createProxyFunctions(locationConfig, this.config, locationConfig, locationConfigFns, lateBind);\n        var umf = function () { return router.urlMatcherFactory; };\n        createProxyFunctions(umf, this.config, umf, umfFns);\n        var urlRouter = function () { return router.urlRouter; };\n        createProxyFunctions(urlRouter, this.rules, urlRouter, rulesFns);\n        createProxyFunctions(urlRouter, this, urlRouter, syncFns);\n    }\n    UrlService.prototype.url = function (newurl, replace, state) { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.path = function () { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.search = function () { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.hash = function () { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.onChange = function (callback) { return; };\n    \n    /**\n     * Returns the current URL parts\n     *\n     * This method returns the current URL components as a [[UrlParts]] object.\n     *\n     * @returns the current url parts\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    UrlService.prototype.dispose = function () { };\n    /** @inheritdoc */\n    UrlService.prototype.sync = function (evt) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.listen = function (enabled) { return; };\n    \n    /** @inheritdoc */\n    UrlService.prototype.deferIntercept = function (defer) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.match = function (urlParts) { return; };\n    /** @hidden */\n    UrlService.locationServiceStub = makeStub(locationServicesFns);\n    /** @hidden */\n    UrlService.locationConfigStub = makeStub(locationConfigFns);\n    return UrlService;\n}());\n\n/**\n * @coreapi\n * @module core\n */ /** */\n/** @hidden */\nvar _routerInstance = 0;\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = UrlService.locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = UrlService.locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** @hidden */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlRouter);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error(\"Required property `name` missing on plugin: \" + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return this._plugins[pluginInstance.name] = pluginInstance;\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\n\n/** @module hooks */ /** */\nfunction addCoreResolvables(trans) {\n    trans.addResolvable({ token: UIRouter, deps: [], resolveFn: function () { return trans.router; }, data: trans.router }, \"\");\n    trans.addResolvable({ token: Transition, deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$transition$', deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$stateParams', deps: [], resolveFn: function () { return trans.params(); }, data: trans.params() }, \"\");\n    trans.entering().forEach(function (state) {\n        trans.addResolvable({ token: '$state$', deps: [], resolveFn: function () { return state; }, data: state }, state);\n    });\n}\nvar registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\n\n/** @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nvar registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nvar registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nvar registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nvar registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n\n/** @module hooks */\n/** for typedoc */\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(noop);\n};\nvar registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath(\"LAZY\", trans)\n        .then(noop);\n};\nvar registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: 1000 });\n};\n\n/** @module hooks */ /** for typedoc */\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views(\"entering\");\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nvar registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    var exitingViews = transition.views(\"exiting\");\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nvar registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nvar registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n\n/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nvar registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === \"STATE\") {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition.entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nvar registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nfunction lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] =\n            services.$q.when(lazyLoadFn(transition, state))\n                .then(updateStateRegistry)\n                .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (state) { return transition.router.stateRegistry.register(state); });\n        }\n        return result;\n    }\n    return promise;\n}\n\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = (function () {\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\n\n/** @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nvar registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n\n/** @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error());\n    }\n}\nvar registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nvar defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: \"unknown\"\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]);\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) { return; };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) { return hooksArray.forEach(function (hook) {\n            hook._deregistered = true;\n            removeFrom(hooksArray, hook);\n        }); });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = exports.TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var ASYNCHRONOUS = false, SYNCHRONOUS = true;\n        this._defineEvent(\"onCreate\", Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onBefore\", Phase.BEFORE, 0, paths.to);\n        this._defineEvent(\"onStart\", Phase.RUN, 0, paths.to);\n        this._defineEvent(\"onExit\", Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent(\"onRetain\", Phase.RUN, 200, paths.retained);\n        this._defineEvent(\"onEnter\", Phase.RUN, 300, paths.entering);\n        this._defineEvent(\"onFinish\", Phase.RUN, 400, paths.to);\n        this._defineEvent(\"onSuccess\", Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onError\", Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = exports.TransitionHookScope.STATE, TRANSITION = exports.TransitionHookScope.TRANSITION;\n        this._definePathType(\"to\", TRANSITION);\n        this._definePathType(\"from\", TRANSITION);\n        this._definePathType(\"exiting\", STATE);\n        this._definePathType(\"retained\", STATE);\n        this._definePathType(\"entering\", STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    \n    /** @hidden */\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase) ?\n            this._eventTypes.filter(function (type) { return type.hookPhase === phase; }) :\n            this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\n\n/**\n * @coreapi\n * @module state\n */\n/** */\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = (function () {\n    /** @internalapi */\n    function StateService(router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () { return this.router.globals.transition; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () { return this.router.globals.params; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () { return this.router.globals.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () { return this.router.globals.$current; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    \n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    \n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        var stateDefinition = reg.matcher.find(identifier, options.relative);\n        return new TargetState(identifier, stateDefinition, params, options);\n    };\n    \n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () {\n            return globals.transition;\n        };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (transition) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId === transition.$id;\n                if (error.type === exports.RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === exports.RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = transition.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === exports.RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    \n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    \n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    \n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = (state && options.lossy) ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, {\n            absolute: options.absolute,\n        });\n    };\n    \n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error(\"Can not lazy load \" + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\n\n/**\n * # Transition subsystem\n *\n * This module contains APIs related to a Transition.\n *\n * See:\n * - [[TransitionService]]\n * - [[Transition]]\n * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n *\n * @coreapi\n * @preferred\n * @module transition\n */ /** for typedoc */\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nvar $q = {\n    /** Normalizes a value as a promise */\n    when: function (val$$1) { return new Promise(function (resolve, reject) { return resolve(val$$1); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val$$1) { return new Promise(function (resolve, reject) { reject(val$$1); }); },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises)\n                .map(function (key) { return promises[key].then(function (val$$1) { return ({ key: key, val: val$$1 }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values$$1) {\n                return values$$1.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n            });\n        }\n    }\n};\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nvar $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all$$1 = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all$$1.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all$$1[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    }\n};\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar beforeAfterSubstr$1 = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nvar splitHash = beforeAfterSubstr$1(\"#\");\nvar splitQuery = beforeAfterSubstr$1(\"?\");\nvar splitEqual = beforeAfterSubstr$1(\"=\");\nvar trimHashVal = function (str) { return str ? str.replace(/^#/, \"\") : \"\"; };\nvar keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val$$1 = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val$$1;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val$$1);\n    }\n    else {\n        accum[key] = [accum[key], val$$1];\n    }\n    return accum;\n};\nvar getParams = function (queryString) {\n    return queryString.split(\"&\").filter(identity).map(splitEqual).reduce(keyValsToObjectR, {});\n};\nfunction parseUrl$1(url) {\n    var orEmptyString = function (x) { return x || \"\"; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nvar buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject).map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val$$1) { return key + \"=\" + val$$1; });\n    }).reduce(unnestR, []).join(\"&\");\n    return path + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\n};\nfunction locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (router) {\n        var service = router.locationService = new serviceClass(router);\n        var configuration = router.locationConfig = new configurationClass(router, isHtml5);\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n\n/**\n * @internalapi\n * @module vanilla\n */ /** */\n/** A base `LocationServices` */\nvar BaseLocationServices = (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this._listeners = [];\n        this.hash = function () { return parseUrl$1(_this._get()).hash; };\n        this.path = function () { return parseUrl$1(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl$1(_this._get()).search); };\n        this._location = window && window.location;\n        this._history = window && window.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                var evt_1 = extend(new Event(\"locationchange\"), { url: url });\n                this._listeners.forEach(function (cb) { return cb(evt_1); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        window.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\n\nvar __extends$1 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = (function (_super) {\n    __extends$1(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\n\nvar __extends$2 = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = (function (_super) {\n    __extends$2(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        window.addEventListener(\"popstate\", _this._listener, false);\n        return _this;\n    }\n    \n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        return pathname + (search ? \"?\" + search : \"\") + (hash ? \"$\" + search : \"\");\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var _a = this, _config = _a._config, _history = _a._history;\n        var fullUrl = _config.baseHref() + url;\n        if (replace) {\n            _history.replaceState(state, title, fullUrl);\n        }\n        else {\n            _history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener(\"popstate\", this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\n\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = \"http\";\n        this._host = \"localhost\";\n        this._hashPrefix = \"\";\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return isDefined(newval) ? _this._hashPrefix = newval : _this._hashPrefix; };\n        this.dispose = noop;\n    }\n    return MemoryLocationConfig;\n}());\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = \"\";\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? this._hashPrefix = newprefix : this._hashPrefix;\n    };\n    \n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        return isDefined(href) ? this._baseHref = href : this._baseHref || this.applyDocumentBaseHref();\n    };\n    BrowserLocationConfig.prototype.applyDocumentBaseHref = function () {\n        var baseTags = document.getElementsByTagName(\"base\");\n        return this._baseHref = baseTags.length ? baseTags[0].href.substr(location.origin.length) : \"\";\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nfunction servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: \"vanilla.services\", $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nvar hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nvar pushStateLocationPlugin = locationPluginFactory(\"vanilla.pushStateLocation\", true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nvar memoryLocationPlugin = locationPluginFactory(\"vanilla.memoryLocation\", false, MemoryLocationService, MemoryLocationConfig);\n\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n\n/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @coreapi\n * @preferred\n * @module core\n */ /** for typedoc */\n/** @internalapi */\nvar UIRouterPluginBase = (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\n\n/**\n * @coreapi\n * @module common\n */ /** */\n\nexports.fromJson = fromJson;\nexports.toJson = toJson;\nexports.copy = copy;\nexports.forEach = forEach;\nexports.extend = extend;\nexports.equals = equals;\nexports.identity = identity;\nexports.noop = noop;\nexports.createProxyFunctions = createProxyFunctions;\nexports.inherit = inherit;\nexports.inArray = inArray;\nexports._inArray = _inArray;\nexports.removeFrom = removeFrom;\nexports._removeFrom = _removeFrom;\nexports.pushTo = pushTo;\nexports._pushTo = _pushTo;\nexports.deregAll = deregAll;\nexports.defaults = defaults;\nexports.mergeR = mergeR;\nexports.ancestors = ancestors;\nexports.pick = pick;\nexports.omit = omit;\nexports.pluck = pluck;\nexports.filter = filter;\nexports.find = find;\nexports.mapObj = mapObj;\nexports.map = map;\nexports.values = values;\nexports.allTrueR = allTrueR;\nexports.anyTrueR = anyTrueR;\nexports.unnestR = unnestR;\nexports.flattenR = flattenR;\nexports.pushR = pushR;\nexports.uniqR = uniqR;\nexports.unnest = unnest;\nexports.flatten = flatten;\nexports.assertPredicate = assertPredicate;\nexports.assertMap = assertMap;\nexports.assertFn = assertFn;\nexports.pairs = pairs;\nexports.arrayTuples = arrayTuples;\nexports.applyPairs = applyPairs;\nexports.tail = tail;\nexports._extend = _extend;\nexports.silenceUncaughtInPromise = silenceUncaughtInPromise;\nexports.silentRejection = silentRejection;\nexports.notImplemented = notImplemented;\nexports.services = services;\nexports.Glob = Glob;\nexports.curry = curry;\nexports.compose = compose;\nexports.pipe = pipe;\nexports.prop = prop;\nexports.propEq = propEq;\nexports.parse = parse;\nexports.not = not;\nexports.and = and;\nexports.or = or;\nexports.all = all;\nexports.any = any;\nexports.is = is;\nexports.eq = eq;\nexports.val = val;\nexports.invoke = invoke;\nexports.pattern = pattern;\nexports.isUndefined = isUndefined;\nexports.isDefined = isDefined;\nexports.isNull = isNull;\nexports.isNullOrUndefined = isNullOrUndefined;\nexports.isFunction = isFunction;\nexports.isNumber = isNumber;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isArray = isArray;\nexports.isDate = isDate;\nexports.isRegExp = isRegExp;\nexports.isState = isState;\nexports.isInjectable = isInjectable;\nexports.isPromise = isPromise;\nexports.Queue = Queue;\nexports.maxLength = maxLength;\nexports.padString = padString;\nexports.kebobString = kebobString;\nexports.functionToString = functionToString;\nexports.fnToString = fnToString;\nexports.stringify = stringify;\nexports.beforeAfterSubstr = beforeAfterSubstr;\nexports.splitOnDelim = splitOnDelim;\nexports.joinNeighborsR = joinNeighborsR;\nexports.Trace = Trace;\nexports.trace = trace;\nexports.Param = Param;\nexports.ParamTypes = ParamTypes;\nexports.StateParams = StateParams;\nexports.ParamType = ParamType;\nexports.PathNode = PathNode;\nexports.PathUtils = PathUtils;\nexports.resolvePolicies = resolvePolicies;\nexports.defaultResolvePolicy = defaultResolvePolicy;\nexports.Resolvable = Resolvable;\nexports.NATIVE_INJECTOR_TOKEN = NATIVE_INJECTOR_TOKEN;\nexports.ResolveContext = ResolveContext;\nexports.resolvablesBuilder = resolvablesBuilder;\nexports.StateBuilder = StateBuilder;\nexports.StateObject = StateObject;\nexports.StateMatcher = StateMatcher;\nexports.StateQueueManager = StateQueueManager;\nexports.StateRegistry = StateRegistry;\nexports.StateService = StateService;\nexports.TargetState = TargetState;\nexports.HookBuilder = HookBuilder;\nexports.matchState = matchState;\nexports.RegisteredHook = RegisteredHook;\nexports.makeEvent = makeEvent;\nexports.Rejection = Rejection;\nexports.Transition = Transition;\nexports.TransitionHook = TransitionHook;\nexports.TransitionEventType = TransitionEventType;\nexports.defaultTransOpts = defaultTransOpts;\nexports.TransitionService = TransitionService;\nexports.UrlMatcher = UrlMatcher;\nexports.UrlMatcherFactory = UrlMatcherFactory;\nexports.UrlRouter = UrlRouter;\nexports.UrlRuleFactory = UrlRuleFactory;\nexports.BaseUrlRule = BaseUrlRule;\nexports.UrlService = UrlService;\nexports.ViewService = ViewService;\nexports.UIRouterGlobals = UIRouterGlobals;\nexports.UIRouter = UIRouter;\nexports.$q = $q;\nexports.$injector = $injector;\nexports.BaseLocationServices = BaseLocationServices;\nexports.HashLocationService = HashLocationService;\nexports.MemoryLocationService = MemoryLocationService;\nexports.PushStateLocationService = PushStateLocationService;\nexports.MemoryLocationConfig = MemoryLocationConfig;\nexports.BrowserLocationConfig = BrowserLocationConfig;\nexports.splitHash = splitHash;\nexports.splitQuery = splitQuery;\nexports.splitEqual = splitEqual;\nexports.trimHashVal = trimHashVal;\nexports.keyValsToObjectR = keyValsToObjectR;\nexports.getParams = getParams;\nexports.parseUrl = parseUrl$1;\nexports.buildUrl = buildUrl;\nexports.locationPluginFactory = locationPluginFactory;\nexports.servicesPlugin = servicesPlugin;\nexports.hashLocationPlugin = hashLocationPlugin;\nexports.pushStateLocationPlugin = pushStateLocationPlugin;\nexports.memoryLocationPlugin = memoryLocationPlugin;\nexports.UIRouterPluginBase = UIRouterPluginBase;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ui-router-core.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/@uirouter/core/_bundles/ui-router-core.js\n// module id = 70\n// module chunks = 1","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\")) : factory(root[\"angular\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!********************************!*\\\n  !*** ./src/angular-spinner.ts ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar SpinJSSpinner_1 = __webpack_require__(/*! ./Constants/SpinJSSpinner */ 1);\n\tvar UsSpinnerService_1 = __webpack_require__(/*! ./Services/UsSpinnerService */ 3);\n\tvar AngularSpinner_1 = __webpack_require__(/*! ./Directives/AngularSpinner */ 4);\n\tvar UsSpinnerConfig_1 = __webpack_require__(/*! ./Config/UsSpinnerConfig */ 6);\n\tvar angular = __webpack_require__(/*! angular */ 5);\n\texports.angularSpinner = angular\n\t    .module('angularSpinner', [])\n\t    .provider('usSpinnerConfig', UsSpinnerConfig_1.UsSpinnerConfig)\n\t    .constant('SpinJSSpinner', SpinJSSpinner_1.SpinJSSpinner)\n\t    .service('usSpinnerService', UsSpinnerService_1.UsSpinnerService)\n\t    .directive('usSpinner', AngularSpinner_1.usSpinner);\n\n\n/***/ },\n/* 1 */\n/*!****************************************!*\\\n  !*** ./src/Constants/SpinJSSpinner.ts ***!\n  \\****************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Spinner = __webpack_require__(/*! spin.js */ 2);\n\t/**\n\t * Exporting the Spinner prototype from spin.js library\n\t */\n\texports.SpinJSSpinner = Spinner;\n\n\n/***/ },\n/* 2 */\n/*!***************************!*\\\n  !*** ./~/spin.js/spin.js ***!\n  \\***************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * Copyright (c) 2011-2014 Felix Gnass\n\t * Licensed under the MIT license\n\t * http://spin.js.org/\n\t *\n\t * Example:\n\t    var opts = {\n\t      lines: 12             // The number of lines to draw\n\t    , length: 7             // The length of each line\n\t    , width: 5              // The line thickness\n\t    , radius: 10            // The radius of the inner circle\n\t    , scale: 1.0            // Scales overall size of the spinner\n\t    , corners: 1            // Roundness (0..1)\n\t    , color: '#000'         // #rgb or #rrggbb\n\t    , opacity: 1/4          // Opacity of the lines\n\t    , rotate: 0             // Rotation offset\n\t    , direction: 1          // 1: clockwise, -1: counterclockwise\n\t    , speed: 1              // Rounds per second\n\t    , trail: 100            // Afterglow percentage\n\t    , fps: 20               // Frames per second when using setTimeout()\n\t    , zIndex: 2e9           // Use a high z-index by default\n\t    , className: 'spinner'  // CSS class to assign to the element\n\t    , top: '50%'            // center vertically\n\t    , left: '50%'           // center horizontally\n\t    , shadow: false         // Whether to render a shadow\n\t    , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n\t    , position: 'absolute'  // Element positioning\n\t    }\n\t    var target = document.getElementById('foo')\n\t    var spinner = new Spinner(opts).spin(target)\n\t */\n\t;(function (root, factory) {\n\t\n\t  /* CommonJS */\n\t  if (typeof module == 'object' && module.exports) module.exports = factory()\n\t\n\t  /* AMD module */\n\t  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t\n\t  /* Browser global */\n\t  else root.Spinner = factory()\n\t}(this, function () {\n\t  \"use strict\"\n\t\n\t  var prefixes = ['webkit', 'Moz', 'ms', 'O'] /* Vendor prefixes */\n\t    , animations = {} /* Animation rules keyed by their name */\n\t    , useCssAnimations /* Whether to use CSS animations or setTimeout */\n\t    , sheet /* A stylesheet to hold the @keyframe or VML rules. */\n\t\n\t  /**\n\t   * Utility function to create elements. If no tag name is given,\n\t   * a DIV is created. Optionally properties can be passed.\n\t   */\n\t  function createEl (tag, prop) {\n\t    var el = document.createElement(tag || 'div')\n\t      , n\n\t\n\t    for (n in prop) el[n] = prop[n]\n\t    return el\n\t  }\n\t\n\t  /**\n\t   * Appends children and returns the parent.\n\t   */\n\t  function ins (parent /* child1, child2, ...*/) {\n\t    for (var i = 1, n = arguments.length; i < n; i++) {\n\t      parent.appendChild(arguments[i])\n\t    }\n\t\n\t    return parent\n\t  }\n\t\n\t  /**\n\t   * Creates an opacity keyframe animation rule and returns its name.\n\t   * Since most mobile Webkits have timing issues with animation-delay,\n\t   * we create separate rules for each line/segment.\n\t   */\n\t  function addAnimation (alpha, trail, i, lines) {\n\t    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-')\n\t      , start = 0.01 + i/lines * 100\n\t      , z = Math.max(1 - (1-alpha) / trail * (100-start), alpha)\n\t      , prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase()\n\t      , pre = prefix && '-' + prefix + '-' || ''\n\t\n\t    if (!animations[name]) {\n\t      sheet.insertRule(\n\t        '@' + pre + 'keyframes ' + name + '{' +\n\t        '0%{opacity:' + z + '}' +\n\t        start + '%{opacity:' + alpha + '}' +\n\t        (start+0.01) + '%{opacity:1}' +\n\t        (start+trail) % 100 + '%{opacity:' + alpha + '}' +\n\t        '100%{opacity:' + z + '}' +\n\t        '}', sheet.cssRules.length)\n\t\n\t      animations[name] = 1\n\t    }\n\t\n\t    return name\n\t  }\n\t\n\t  /**\n\t   * Tries various vendor prefixes and returns the first supported property.\n\t   */\n\t  function vendor (el, prop) {\n\t    var s = el.style\n\t      , pp\n\t      , i\n\t\n\t    prop = prop.charAt(0).toUpperCase() + prop.slice(1)\n\t    if (s[prop] !== undefined) return prop\n\t    for (i = 0; i < prefixes.length; i++) {\n\t      pp = prefixes[i]+prop\n\t      if (s[pp] !== undefined) return pp\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Sets multiple style properties at once.\n\t   */\n\t  function css (el, prop) {\n\t    for (var n in prop) {\n\t      el.style[vendor(el, n) || n] = prop[n]\n\t    }\n\t\n\t    return el\n\t  }\n\t\n\t  /**\n\t   * Fills in default values.\n\t   */\n\t  function merge (obj) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      var def = arguments[i]\n\t      for (var n in def) {\n\t        if (obj[n] === undefined) obj[n] = def[n]\n\t      }\n\t    }\n\t    return obj\n\t  }\n\t\n\t  /**\n\t   * Returns the line color from the given string or array.\n\t   */\n\t  function getColor (color, idx) {\n\t    return typeof color == 'string' ? color : color[idx % color.length]\n\t  }\n\t\n\t  // Built-in defaults\n\t\n\t  var defaults = {\n\t    lines: 12             // The number of lines to draw\n\t  , length: 7             // The length of each line\n\t  , width: 5              // The line thickness\n\t  , radius: 10            // The radius of the inner circle\n\t  , scale: 1.0            // Scales overall size of the spinner\n\t  , corners: 1            // Roundness (0..1)\n\t  , color: '#000'         // #rgb or #rrggbb\n\t  , opacity: 1/4          // Opacity of the lines\n\t  , rotate: 0             // Rotation offset\n\t  , direction: 1          // 1: clockwise, -1: counterclockwise\n\t  , speed: 1              // Rounds per second\n\t  , trail: 100            // Afterglow percentage\n\t  , fps: 20               // Frames per second when using setTimeout()\n\t  , zIndex: 2e9           // Use a high z-index by default\n\t  , className: 'spinner'  // CSS class to assign to the element\n\t  , top: '50%'            // center vertically\n\t  , left: '50%'           // center horizontally\n\t  , shadow: false         // Whether to render a shadow\n\t  , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n\t  , position: 'absolute'  // Element positioning\n\t  }\n\t\n\t  /** The constructor */\n\t  function Spinner (o) {\n\t    this.opts = merge(o || {}, Spinner.defaults, defaults)\n\t  }\n\t\n\t  // Global defaults that override the built-ins:\n\t  Spinner.defaults = {}\n\t\n\t  merge(Spinner.prototype, {\n\t    /**\n\t     * Adds the spinner to the given target element. If this instance is already\n\t     * spinning, it is automatically removed from its previous target b calling\n\t     * stop() internally.\n\t     */\n\t    spin: function (target) {\n\t      this.stop()\n\t\n\t      var self = this\n\t        , o = self.opts\n\t        , el = self.el = createEl(null, {className: o.className})\n\t\n\t      css(el, {\n\t        position: o.position\n\t      , width: 0\n\t      , zIndex: o.zIndex\n\t      , left: o.left\n\t      , top: o.top\n\t      })\n\t\n\t      if (target) {\n\t        target.insertBefore(el, target.firstChild || null)\n\t      }\n\t\n\t      el.setAttribute('role', 'progressbar')\n\t      self.lines(el, self.opts)\n\t\n\t      if (!useCssAnimations) {\n\t        // No CSS animation support, use setTimeout() instead\n\t        var i = 0\n\t          , start = (o.lines - 1) * (1 - o.direction) / 2\n\t          , alpha\n\t          , fps = o.fps\n\t          , f = fps / o.speed\n\t          , ostep = (1 - o.opacity) / (f * o.trail / 100)\n\t          , astep = f / o.lines\n\t\n\t        ;(function anim () {\n\t          i++\n\t          for (var j = 0; j < o.lines; j++) {\n\t            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity)\n\t\n\t            self.opacity(el, j * o.direction + start, alpha, o)\n\t          }\n\t          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps))\n\t        })()\n\t      }\n\t      return self\n\t    }\n\t\n\t    /**\n\t     * Stops and removes the Spinner.\n\t     */\n\t  , stop: function () {\n\t      var el = this.el\n\t      if (el) {\n\t        clearTimeout(this.timeout)\n\t        if (el.parentNode) el.parentNode.removeChild(el)\n\t        this.el = undefined\n\t      }\n\t      return this\n\t    }\n\t\n\t    /**\n\t     * Internal method that draws the individual lines. Will be overwritten\n\t     * in VML fallback mode below.\n\t     */\n\t  , lines: function (el, o) {\n\t      var i = 0\n\t        , start = (o.lines - 1) * (1 - o.direction) / 2\n\t        , seg\n\t\n\t      function fill (color, shadow) {\n\t        return css(createEl(), {\n\t          position: 'absolute'\n\t        , width: o.scale * (o.length + o.width) + 'px'\n\t        , height: o.scale * o.width + 'px'\n\t        , background: color\n\t        , boxShadow: shadow\n\t        , transformOrigin: 'left'\n\t        , transform: 'rotate(' + ~~(360/o.lines*i + o.rotate) + 'deg) translate(' + o.scale*o.radius + 'px' + ',0)'\n\t        , borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'\n\t        })\n\t      }\n\t\n\t      for (; i < o.lines; i++) {\n\t        seg = css(createEl(), {\n\t          position: 'absolute'\n\t        , top: 1 + ~(o.scale * o.width / 2) + 'px'\n\t        , transform: o.hwaccel ? 'translate3d(0,0,0)' : ''\n\t        , opacity: o.opacity\n\t        , animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'\n\t        })\n\t\n\t        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {top: '2px'}))\n\t        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')))\n\t      }\n\t      return el\n\t    }\n\t\n\t    /**\n\t     * Internal method that adjusts the opacity of a single line.\n\t     * Will be overwritten in VML fallback mode below.\n\t     */\n\t  , opacity: function (el, i, val) {\n\t      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val\n\t    }\n\t\n\t  })\n\t\n\t\n\t  function initVML () {\n\t\n\t    /* Utility function to create a VML tag */\n\t    function vml (tag, attr) {\n\t      return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr)\n\t    }\n\t\n\t    // No CSS transforms but VML support, add a CSS rule for VML elements:\n\t    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)')\n\t\n\t    Spinner.prototype.lines = function (el, o) {\n\t      var r = o.scale * (o.length + o.width)\n\t        , s = o.scale * 2 * r\n\t\n\t      function grp () {\n\t        return css(\n\t          vml('group', {\n\t            coordsize: s + ' ' + s\n\t          , coordorigin: -r + ' ' + -r\n\t          })\n\t        , { width: s, height: s }\n\t        )\n\t      }\n\t\n\t      var margin = -(o.width + o.length) * o.scale * 2 + 'px'\n\t        , g = css(grp(), {position: 'absolute', top: margin, left: margin})\n\t        , i\n\t\n\t      function seg (i, dx, filter) {\n\t        ins(\n\t          g\n\t        , ins(\n\t            css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx})\n\t          , ins(\n\t              css(\n\t                vml('roundrect', {arcsize: o.corners})\n\t              , { width: r\n\t                , height: o.scale * o.width\n\t                , left: o.scale * o.radius\n\t                , top: -o.scale * o.width >> 1\n\t                , filter: filter\n\t                }\n\t              )\n\t            , vml('fill', {color: getColor(o.color, i), opacity: o.opacity})\n\t            , vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n\t            )\n\t          )\n\t        )\n\t      }\n\t\n\t      if (o.shadow)\n\t        for (i = 1; i <= o.lines; i++) {\n\t          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')\n\t        }\n\t\n\t      for (i = 1; i <= o.lines; i++) seg(i)\n\t      return ins(el, g)\n\t    }\n\t\n\t    Spinner.prototype.opacity = function (el, i, val, o) {\n\t      var c = el.firstChild\n\t      o = o.shadow && o.lines || 0\n\t      if (c && i + o < c.childNodes.length) {\n\t        c = c.childNodes[i + o]; c = c && c.firstChild; c = c && c.firstChild\n\t        if (c) c.opacity = val\n\t      }\n\t    }\n\t  }\n\t\n\t  if (typeof document !== 'undefined') {\n\t    sheet = (function () {\n\t      var el = createEl('style', {type : 'text/css'})\n\t      ins(document.getElementsByTagName('head')[0], el)\n\t      return el.sheet || el.styleSheet\n\t    }())\n\t\n\t    var probe = css(createEl('group'), {behavior: 'url(#default#VML)'})\n\t\n\t    if (!vendor(probe, 'transform') && probe.adj) initVML()\n\t    else useCssAnimations = vendor(probe, 'animation')\n\t  }\n\t\n\t  return Spinner\n\t\n\t}));\n\n\n/***/ },\n/* 3 */\n/*!******************************************!*\\\n  !*** ./src/Services/UsSpinnerService.ts ***!\n  \\******************************************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * UsSpinnerService\n\t * This service let you control spin, start and stop\n\t */\n\tvar UsSpinnerService = (function () {\n\t    function UsSpinnerService($rootScope) {\n\t        this.$rootScope = $rootScope;\n\t    }\n\t    UsSpinnerService.prototype.spin = function (key) {\n\t        this.$rootScope.$broadcast('us-spinner:spin', key);\n\t    };\n\t    UsSpinnerService.prototype.stop = function (key) {\n\t        this.$rootScope.$broadcast('us-spinner:stop', key);\n\t    };\n\t    return UsSpinnerService;\n\t}());\n\tUsSpinnerService.$inject = ['$rootScope'];\n\texports.UsSpinnerService = UsSpinnerService;\n\n\n/***/ },\n/* 4 */\n/*!******************************************!*\\\n  !*** ./src/Directives/AngularSpinner.ts ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(/*! angular */ 5);\n\texports.usSpinner = function (SpinJSSpinner, usSpinnerConfig) {\n\t    return {\n\t        scope: true,\n\t        link: function (scope, element, attr) {\n\t            scope.spinner = null;\n\t            scope.key = angular.isDefined(attr.spinnerKey) ? attr.spinnerKey : false;\n\t            scope.startActive = (attr.spinnerStartActive) ?\n\t                scope.$eval(attr.spinnerStartActive) : scope.key ?\n\t                false : true;\n\t            function stopSpinner() {\n\t                if (scope.spinner) {\n\t                    scope.spinner.stop();\n\t                }\n\t            }\n\t            scope.spin = function () {\n\t                if (scope.spinner) {\n\t                    scope.spinner.spin(element[0]);\n\t                }\n\t            };\n\t            scope.stop = function () {\n\t                scope.startActive = false;\n\t                stopSpinner();\n\t            };\n\t            scope.$watch(attr.usSpinner, function (options) {\n\t                stopSpinner();\n\t                // order of precedence: element options, theme, defaults.\n\t                options = angular.extend({}, usSpinnerConfig.config, attr.spinnerTheme ? usSpinnerConfig.themes[attr.spinnerTheme] : undefined, options);\n\t                scope.spinner = new SpinJSSpinner(options);\n\t                if ((!scope.key || scope.startActive) && !attr.spinnerOn) {\n\t                    scope.spinner.spin(element[0]);\n\t                }\n\t            }, true);\n\t            if (attr.spinnerOn) {\n\t                scope.$watch(attr.spinnerOn, function (spin) {\n\t                    if (spin) {\n\t                        scope.spin();\n\t                    }\n\t                    else {\n\t                        scope.stop();\n\t                    }\n\t                });\n\t            }\n\t            scope.$on('us-spinner:spin', function (event, key) {\n\t                if (!key || key === scope.key) {\n\t                    scope.spin();\n\t                }\n\t            });\n\t            scope.$on('us-spinner:stop', function (event, key) {\n\t                if (!key || key === scope.key) {\n\t                    scope.stop();\n\t                }\n\t            });\n\t            scope.$on('$destroy', function () {\n\t                scope.stop();\n\t                scope.spinner = null;\n\t            });\n\t        }\n\t    };\n\t};\n\texports.usSpinner.$inject = ['SpinJSSpinner', 'usSpinnerConfig'];\n\n\n/***/ },\n/* 5 */\n/*!**************************!*\\\n  !*** external \"angular\" ***!\n  \\**************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/*!***************************************!*\\\n  !*** ./src/Config/UsSpinnerConfig.ts ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * UsSpinnerConfig\n\t */\n\tvar UsSpinnerConfig = (function () {\n\t    function UsSpinnerConfig() {\n\t        this.config = {};\n\t        this.themes = {};\n\t    }\n\t    UsSpinnerConfig.prototype.setDefaults = function (config) {\n\t        this.config = config || this.config;\n\t    };\n\t    UsSpinnerConfig.prototype.setTheme = function (name, config) {\n\t        this.themes[name] = config;\n\t    };\n\t    UsSpinnerConfig.prototype.$get = function () {\n\t        var _a = this, config = _a.config, themes = _a.themes;\n\t        return {\n\t            config: config,\n\t            themes: themes\n\t        };\n\t    };\n\t    return UsSpinnerConfig;\n\t}());\n\texports.UsSpinnerConfig = UsSpinnerConfig;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=angular-spinner.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/angular-spinner/dist/angular-spinner.js\n// module id = 71\n// module chunks = 1","'use strict';\n\n\n/*\n * DEPENDENCIES\n */\n\nvar convert = require('colr-convert');\n\n\n/*\n * CONSTRUCTOR\n */\n\nfunction Colr () {\n  if ((this instanceof Colr) === false) { return new Colr(); }\n  this._ = {};\n}\n\n\n/*\n * STATIC METHODS\n */\n\nColr.fromHex = function (hex) {\n  return (new Colr()).fromHex(hex);\n};\n\nColr.fromGrayscale = function (value) {\n  return (new Colr()).fromGrayscale(value);\n};\n\nColr.fromRgb = function (r, g, b) {\n  return (new Colr()).fromRgb(r, g, b);\n};\n\nColr.fromRgbArray = function (arr) {\n  return (new Colr()).fromRgb(arr[0], arr[1], arr[2]);\n};\n\nColr.fromRgbObject = function (obj) {\n  return (new Colr()).fromRgb(obj.r, obj.g, obj.b);\n};\nColr.fromHsl = function (h, s, l) {\n  return (new Colr()).fromHsl(h, s, l);\n};\n\nColr.fromHslArray = function (arr) {\n  return (new Colr()).fromHsl(arr[0], arr[1], arr[2]);\n};\n\nColr.fromHslObject = function (obj) {\n  return (new Colr()).fromHsl(obj.h, obj.s, obj.l);\n};\n\nColr.fromHsv = function (h, s, v) {\n  return (new Colr()).fromHsv(h, s, v);\n};\n\nColr.fromHsvArray = function (arr) {\n  return (new Colr()).fromHsv(arr[0], arr[1], arr[2]);\n};\n\nColr.fromHsvObject = function (obj) {\n  return (new Colr()).fromHsv(obj.h, obj.s, obj.v);\n};\n\n\n/*\n * IMPORTERS\n */\n\n// HEX\n\nColr.prototype.fromHex = function (input) {\n  var value = convert.hex.rgb(input);\n  this._ = { rgb: value };\n  return this;\n};\n\n// GRAYSCALE\n\nColr.prototype.fromGrayscale = function (input) {\n  input = clampByte(input);\n  var value = convert.grayscale.rgb(input);\n  this._ = { rgb: value };\n  return this;\n};\n\n// RGB\n\nColr.prototype.fromRgb = function (r, g, b) {\n  if (typeof(r) !== 'number' || typeof(g) !== 'number' || typeof(b) !== 'number') {\n    throw new Error('Arguments must be numbers');\n  }\n  var value = clampRgb(r, g, b);\n  this._ = { rgb: value };\n  return this;\n};\n\nColr.prototype.fromRgbArray = function (arr) {\n  return this.fromRgb(arr[0], arr[1], arr[2]);\n};\n\nColr.prototype.fromRgbObject = function (obj) {\n  return this.fromRgb(obj.r, obj.g, obj.b);\n};\n\n// HSL\n\nColr.prototype.fromHsl = function (h, s, l) {\n  if (typeof(h) !== 'number' || typeof(s) !== 'number' || typeof(l) !== 'number') {\n    throw new Error('Arguments must be numbers');\n  }\n  this._ = { hsl: clampHsx(h, s, l) };\n  return this;\n};\n\nColr.prototype.fromHslArray = function (arr) {\n  return this.fromHsl(arr[0], arr[1], arr[2]);\n};\n\nColr.prototype.fromHslObject = function (obj) {\n  return this.fromHsl(obj.h, obj.s, obj.l);\n};\n\n// HSV\n\nColr.prototype.fromHsv = function (h, s, v) {\n  if (typeof(h) !== 'number' || typeof(s) !== 'number' || typeof(v) !== 'number') {\n    throw new Error('Arguments must be numbers');\n  }\n  this._ = { hsv: clampHsx(h, s, v) };\n  return this;\n};\n\nColr.prototype.fromHsvArray = function (arr) {\n  return this.fromHsv(arr[0], arr[1], arr[2]);\n};\n\nColr.prototype.fromHsvObject = function (obj) {\n  return this.fromHsv(obj.h, obj.s, obj.v);\n};\n\n\n/*\n * EXPORTERS\n */\n\n// HEX\n\nColr.prototype.toHex = function () {\n  var cached = this._.hex;\n  if (cached !== undefined) { return cached; }\n\n  var input;\n  var cachedFrom = this._.rgb;\n\n  if (cachedFrom !== undefined) { input = cachedFrom; }\n  else { input = this.toRawRgbArray(); }\n\n  input[0] = Math.round(input[0]);\n  input[1] = Math.round(input[1]);\n  input[2] = Math.round(input[2]);\n\n  var value = convert.rgb.hex(input);\n  this._.hex = value;\n\n  return value;\n};\n\n// GRAYSCALE\n\nColr.prototype.toGrayscale = function () {\n  var cached = this._.grayscale;\n  if (cached !== undefined) { return cached; }\n\n  var input;\n  var cachedFrom = this._.rgb;\n\n  if (cachedFrom !== undefined) { input = cachedFrom; }\n  else { input = this.toRawRgbArray(); }\n\n  var value = convert.rgb.grayscale(input);\n  this._.grayscale = value;\n  return value;\n};\n\n// RGB\n\nColr.prototype.toRawRgbArray = function () {\n  var cached = this._.rgb;\n  if (cached !== undefined) { return cached; }\n\n  var value;\n\n  if ((value = this._.hsv) !== undefined) {\n    value = convert.hsv.rgb(value);\n  } else if ((value = this._.hsl) !== undefined) {\n    value = convert.hsl.rgb(value);\n  } else {\n    throw new Error('No data to convert');\n  }\n\n  this._.rgb = value;\n  return value;\n};\n\nColr.prototype.toRawRgbObject = function () {\n  var arr = this.toRawRgbArray();\n  return { r: arr[0], g: arr[1], b: arr[2] };\n};\n\nColr.prototype.toRgbArray = function () {\n  var arr = this.toRawRgbArray();\n  return [ Math.round(arr[0]), Math.round(arr[1]), Math.round(arr[2]) ];\n};\n\nColr.prototype.toRgbObject = function () {\n  var arr = this.toRgbArray();\n  return { r: arr[0], g: arr[1], b: arr[2] };\n};\n\n// HSL\n\nColr.prototype.toRawHslArray = function () {\n  var cached = this._.hsl;\n  if (cached !== undefined) { return cached; }\n\n  var value;\n\n  if ((value = this._.hsv) !== undefined) {\n    value = convert.hsv.hsl(value);\n  } else if ((value = this._.rgb) !== undefined) {\n    value = convert.rgb.hsl(value);\n  } else {\n    throw new Error('No data to convert');\n  }\n\n  this._.hsl = value;\n  return value;\n};\n\nColr.prototype.toRawHslObject = function () {\n  var arr = this.toRawHslArray();\n  return { h: arr[0], s: arr[1], l: arr[2] };\n};\n\nColr.prototype.toHslArray = function () {\n  var arr = this.toRawHslArray();\n  return [ Math.round(arr[0]), Math.round(arr[1]), Math.round(arr[2]) ];\n};\n\nColr.prototype.toHslObject = function () {\n  var arr = this.toHslArray();\n  return { h: arr[0], s: arr[1], l: arr[2] };\n};\n\n// HSV\n\nColr.prototype.toRawHsvArray = function () {\n  var cached = this._.hsv;\n  if (cached !== undefined) { return cached; }\n\n  var value;\n\n  if ((value = this._.hsl) !== undefined) {\n    value = convert.hsl.hsv(value);\n  } else if ((value = this._.rgb) !== undefined) {\n    value = convert.rgb.hsv(value);\n  } else {\n    throw new Error('No data to convert');\n  }\n\n  this._.hsv = value;\n  return value;\n};\n\nColr.prototype.toRawHsvObject = function () {\n  var arr = this.toRawHsvArray();\n  return { h: arr[0], s: arr[1], v: arr[2] };\n};\n\nColr.prototype.toHsvArray = function () {\n  var arr = this.toRawHsvArray();\n  return [ Math.round(arr[0]), Math.round(arr[1]), Math.round(arr[2]) ];\n};\n\nColr.prototype.toHsvObject = function () {\n  var arr = this.toHsvArray();\n  return { h: arr[0], s: arr[1], v: arr[2] };\n};\n\n\n/*\n * MODIFIERS\n */\n\nColr.prototype.lighten = function (amount) {\n  var hsl = this.toRawHslArray();\n  hsl[2] = clampPercentage(hsl[2] + amount);\n  this._ = { hsl: hsl };\n  return this;\n};\n\nColr.prototype.darken = function (amount) {\n  var hsl = this.toRawHslArray();\n  hsl[2] = clampPercentage(hsl[2] - amount);\n  this._ = { hsl: hsl };\n  return this;\n};\n\n/*\n * MISC\n */\n\nColr.prototype.clone = function () {\n  var colr = new Colr();\n  colr._.hex = this._.hex;\n  colr._.grayscale = this._.grayscale;\n\n  if (this._.rgb !== undefined) {\n    colr._.rgb = this._.rgb.slice(0);\n  }\n  if (this._.hsv !== undefined) {\n    colr._.hsv = this._.hsv.slice(0);\n  }\n  if (this._.hsl !== undefined) {\n    colr._.hsl = this._.hsl.slice(0);\n  }\n\n  return colr;\n};\n\n/*\n * UTILS\n */\n\nfunction clampPercentage (val) {\n  return Math.max(Math.min(val, 100), 0);\n}\n\nfunction clampByte (byte) {\n  return Math.max(Math.min(byte, 255), 0);\n}\n\nfunction clampRgb (r, g, b) {\n  return [\n    Math.max(Math.min(r, 255), 0),\n    Math.max(Math.min(g, 255), 0),\n    Math.max(Math.min(b, 255), 0),\n  ];\n}\n\nfunction clampHsx (h, s, x) {\n  return [\n    Math.max(Math.min(h, 360), 0),\n    Math.max(Math.min(s, 100), 0),\n    Math.max(Math.min(x, 100), 0),\n  ];\n}\n\n\nmodule.exports = Colr;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/colr/index.js\n// module id = 75\n// module chunks = 1","'use strict';\n\nmodule.exports = {\n  grayscale: {\n    rgb: grayscale2rgb\n  },\n  hex: {\n    rgb: hex2rgb,\n  },\n  rgb: {\n    hsl: rgb2hsl,\n    hsv: rgb2hsv,\n    hex: rgb2hex,\n    grayscale: rgb2grayscale\n  },\n  hsl: {\n    rgb: hsl2rgb,\n    hsv: hsl2hsv,\n  },\n  hsv: {\n    rgb: hsv2rgb,\n    hsl: hsv2hsl,\n  },\n};\n\n// convert a charcode to a hex val\nfunction hexVal (c) {\n  return (\n    c < 58 ? c - 48 : // 0 - 9\n    c < 71 ? c - 55 : // A - F\n    c - 87            // a - f\n  );\n}\n\nfunction hex2rgb (hex) {\n  var i = hex[0] === '#' ? 1 : 0;\n  var len = hex.length;\n\n  if (len - i < 3) {\n    throw new Error('hex input must be at least three chars long');\n  }\n\n  var r, g, b;\n\n  var h1 = hexVal(hex.charCodeAt(0+i));\n  var h2 = hexVal(hex.charCodeAt(1+i));\n  var h3 = hexVal(hex.charCodeAt(2+i));\n\n  if (len - i >= 6) {\n    r = (h1 << 4) + h2;\n    g = (h3 << 4) + hexVal(hex.charCodeAt(3+i));\n    b = (hexVal(hex.charCodeAt(4+i)) << 4) + hexVal(hex.charCodeAt(5+i));\n  } else {\n    r = (h1 << 4) + h1;\n    g = (h2 << 4) + h2;\n    b = (h3 << 4) + h3;\n  }\n\n  if (r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255) {\n    throw new Error('hex input is invalid');\n  }\n\n  return [r, g, b];\n}\n\n\nfunction rgb2hex (rgb) {\n  return '#' + (\n    '000000' +\n    ((rgb[0] << 16) +\n     (rgb[1] << 8) +\n      rgb[2]\n    ).toString(16)\n  ).slice(-6);\n}\n\nfunction rgb2hsl (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h, s, l;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0];\n  var g = rgb[1];\n  var b = rgb[2];\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h, s, v;\n\n  if (max === 0) {\n    s = 0;\n  } else {\n    s = delta / max * 100;\n  }\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  v = (max / 255) * 100;\n\n  return [h, s, v];\n}\n\nfunction hsl2rgb (hsl) {\n  var h = hsl[0] / 360;\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n\n  var r, g, b;\n\n  if (s === 0) { // monochrome\n    r = g = b = l;\n\n  } else {\n    var q = l < 0.5 ? l * (s + 1) : l + s - l * s;\n    var p = 2 * l - q;\n    var t;\n\n    // red\n    t = h + 1/3;\n    if      (t < 0) { t += 1; }\n    else if (t > 1) { t -= 1; }\n    if      (t < 1/6)  { r = p + (q - p) * t * 6; }\n    else if (t < 1/2 ) { r = q; }\n    else if (t < 2/3 ) { r = p + (q - p) * (2/3 - t) * 6; }\n    else               { r = p; }\n\n    // green\n    t = h;\n    if      (t < 0) { t += 1; }\n    else if (t > 1) { t -= 1; }\n    if      (t < 1/6)  { g = p + (q - p) * t * 6; }\n    else if (t < 1/2 ) { g = q; }\n    else if (t < 2/3 ) { g = p + (q - p) * (2/3 - t) * 6; }\n    else               { g = p; }\n\n    // blue\n    t = h - 1/3;\n    if      (t < 0) { t += 1; }\n    else if (t > 1) { t -= 1; }\n    if      (t < 1/6)  { b = p + (q - p) * t * 6; }\n    else if (t < 1/2 ) { b = q; }\n    else if (t < 2/3 ) { b = p + (q - p) * (2/3 - t) * 6; }\n    else               { b = p; }\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0];\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var sv, v;\n\n  if (s === 0) {\n    return [h, 0, l * 100];\n  }\n\n  if (l === 0) {\n    return [h, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60;\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n\n  var hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h);\n  var p = 255 * v * (1 - s);\n  var q = 255 * v * (1 - (s * f));\n  var t = 255 * v * (1 - (s * (1 - f)));\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0];\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var sl, l;\n\n  if (s === 0) {\n    return [h, 0, v * 100];\n  }\n\n  if (v === 0) {\n    return [h, 0, 0];\n  }\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction grayscale2rgb (value) {\n  return [value, value, value];\n}\n\nfunction rgb2grayscale (rgb) {\n  return (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/colr-convert/index.js\n// module id = 76\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/array/from.js\n// module id = 79\n// module chunks = 1","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/array/from.js\n// module id = 80\n// module chunks = 1","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_string-at.js\n// module id = 81\n// module chunks = 1","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_library.js\n// module id = 82\n// module chunks = 1","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_redefine.js\n// module id = 83\n// module chunks = 1","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-create.js\n// module id = 84\n// module chunks = 1","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-dps.js\n// module id = 85\n// module chunks = 1","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = 86\n// module chunks = 1","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-includes.js\n// module id = 87\n// module chunks = 1","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = 88\n// module chunks = 1","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_html.js\n// module id = 89\n// module chunks = 1","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-gpo.js\n// module id = 90\n// module chunks = 1","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.array.from.js\n// module id = 91\n// module chunks = 1","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_create-property.js\n// module id = 92\n// module chunks = 1","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_iter-detect.js\n// module id = 93\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/symbol/iterator.js\n// module id = 94\n// module chunks = 1","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/symbol/iterator.js\n// module id = 95\n// module chunks = 1","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = 96\n// module chunks = 1","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 97\n// module chunks = 1","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_wks-ext.js\n// module id = 98\n// module chunks = 1","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/map.js\n// module id = 99\n// module chunks = 1","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.map.js\n// module id = 100\n// module chunks = 1","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_set-species.js\n// module id = 101\n// module chunks = 1","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-methods.js\n// module id = 102\n// module chunks = 1","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-species-create.js\n// module id = 103\n// module chunks = 1","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-species-constructor.js\n// module id = 104\n// module chunks = 1","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_is-array.js\n// module id = 105\n// module chunks = 1","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.map.to-json.js\n// module id = 106\n// module chunks = 1","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_array-from-iterable.js\n// module id = 107\n// module chunks = 1","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.map.of.js\n// module id = 108\n// module chunks = 1","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.map.from.js\n// module id = 109\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/is-iterable.js\n// module id = 111\n// module chunks = 1","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/is-iterable.js\n// module id = 112\n// module chunks = 1","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/core.is-iterable.js\n// module id = 113\n// module chunks = 1","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/get-iterator.js\n// module id = 114\n// module chunks = 1","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/core.get-iterator.js\n// module id = 115\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/object/keys.js\n// module id = 117\n// module chunks = 1","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/object/keys.js\n// module id = 118\n// module chunks = 1","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.object.keys.js\n// module id = 119\n// module chunks = 1","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-sap.js\n// module id = 120\n// module chunks = 1","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('angular'), require('chartist')) :\n\ttypeof define === 'function' && define.amd ? define(['angular', 'chartist'], factory) :\n\t(global['angular-chartist'] = factory(global.angular,global.Chartist));\n}(this, (function (angular,Chartist) { 'use strict';\n\nangular = angular && angular.hasOwnProperty('default') ? angular['default'] : angular;\nChartist = Chartist && Chartist.hasOwnProperty('default') ? Chartist['default'] : Chartist;\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar angularChartistModule = angular.module('angular-chartist', []);\n\nvar AngularChartistCtrl = function () {\n  AngularChartistCtrl.$inject = [\"$scope\", \"$element\"];\n  function AngularChartistCtrl($scope, $element) {\n    'ngInject';\n\n    var _this = this;\n\n    classCallCheck(this, AngularChartistCtrl);\n    this.data = $scope.data;\n    this.chartType = $scope.chartType;\n\n    this.events = $scope.events() || {};\n    this.options = $scope.chartOptions() || null;\n    this.responsiveOptions = $scope.responsiveOptions() || null;\n\n    this.element = $element[0];\n\n    this.renderChart();\n\n    $scope.$watch(function () {\n      return {\n        data: $scope.data,\n        chartType: $scope.chartType,\n        chartOptions: $scope.chartOptions() || null,\n        responsiveOptions: $scope.responsiveOptions() || null,\n        events: $scope.events() || {}\n      };\n    }, this.update.bind(this), true);\n\n    $scope.$on('$destroy', function () {\n      if (_this.chart) {\n        _this.chart.detach();\n      }\n    });\n  }\n\n  createClass(AngularChartistCtrl, [{\n    key: 'bindEvents',\n    value: function bindEvents() {\n      var _this2 = this;\n\n      Object.keys(this.events).forEach(function (eventName) {\n        _this2.chart.on(eventName, _this2.events[eventName]);\n      });\n    }\n  }, {\n    key: 'unbindEvents',\n    value: function unbindEvents(events) {\n      var _this3 = this;\n\n      Object.keys(events).forEach(function (eventName) {\n        _this3.chart.off(eventName, events[eventName]);\n      });\n    }\n  }, {\n    key: 'renderChart',\n    value: function renderChart() {\n      // ensure that the chart does not get created without data\n      if (this.data) {\n        this.chart = Chartist[this.chartType](this.element, this.data, this.options, this.responsiveOptions);\n\n        this.bindEvents();\n\n        return this.chart;\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update(newConfig, oldConfig) {\n      // Update controller with new configuration\n      this.chartType = newConfig.chartType;\n      this.data = newConfig.data;\n      this.options = newConfig.chartOptions;\n      this.responsiveOptions = newConfig.responsiveOptions;\n      this.events = newConfig.events;\n\n      // If chart type changed we need to recreate whole chart, otherwise we can update\n      if (!this.chart || newConfig.chartType !== oldConfig.chartType) {\n        this.renderChart();\n      } else {\n        if (!angular.equals(newConfig.events, oldConfig.events)) {\n          this.unbindEvents(oldConfig.events);\n          this.bindEvents();\n        }\n        this.chart.update(this.data, this.options);\n      }\n    }\n  }]);\n  return AngularChartistCtrl;\n}();\n\nangularChartistModule.controller('AngularChartistCtrl', AngularChartistCtrl).directive('chartist', function () {\n  'ngInject';\n\n  return {\n    restrict: 'EA',\n    scope: {\n      // mandatory\n      data: '=chartistData',\n      chartType: '@chartistChartType',\n      // optional\n      events: '&chartistEvents',\n      chartOptions: '&chartistChartOptions',\n      responsiveOptions: '&chartistResponsiveOptions'\n    },\n    controller: 'AngularChartistCtrl'\n  };\n});\n\nvar angularChartist = angularChartistModule.name;\n\nreturn angularChartist;\n\n})));\n//# sourceMappingURL=angular-chartist.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/angular-chartist.js/dist/angular-chartist.js\n// module id = 126\n// module chunks = 1","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.0\n * Copyright © 2017 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.0'\n};\n\n(function (window, document, Chartist) {\n  'use strict';\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(window, document, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(window, document, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(window, document, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(window, document, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(window, document, Chartist));\n;/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(window, document, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(window, document, Chartist));\n\nreturn Chartist;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/chartist/dist/chartist.js\n// module id = 127\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/set\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/set.js\n// module id = 131\n// module chunks = 1","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nrequire('../modules/es7.set.of');\nrequire('../modules/es7.set.from');\nmodule.exports = require('../modules/_core').Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/set.js\n// module id = 132\n// module chunks = 1","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es6.set.js\n// module id = 133\n// module chunks = 1","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.set.to-json.js\n// module id = 134\n// module chunks = 1","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.set.of.js\n// module id = 135\n// module chunks = 1","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.set.from.js\n// module id = 136\n// module chunks = 1","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.XRegExp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*!\r\n * XRegExp.build 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2012-2017 MIT License\r\n * Inspired by Lea Verou's RegExp.create <lea.verou.me>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    var REGEX_DATA = 'xregexp';\r\n    var subParts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\r\n    var parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subParts], 'g', {\r\n        conjunction: 'or'\r\n    });\r\n\r\n    /**\r\n     * Strips a leading `^` and trailing unescaped `$`, if both are present.\r\n     *\r\n     * @private\r\n     * @param {String} pattern Pattern to process.\r\n     * @returns {String} Pattern with edge anchors removed.\r\n     */\r\n    function deanchor(pattern) {\r\n        // Allow any number of empty noncapturing groups before/after anchors, because regexes\r\n        // built/generated by XRegExp sometimes include them\r\n        var leadingAnchor = /^(?:\\(\\?:\\))*\\^/;\r\n        var trailingAnchor = /\\$(?:\\(\\?:\\))*$/;\r\n\r\n        if (\r\n            leadingAnchor.test(pattern) &&\r\n            trailingAnchor.test(pattern) &&\r\n            // Ensure that the trailing `$` isn't escaped\r\n            trailingAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, ''))\r\n        ) {\r\n            return pattern.replace(leadingAnchor, '').replace(trailingAnchor, '');\r\n        }\r\n\r\n        return pattern;\r\n    }\r\n\r\n    /**\r\n     * Converts the provided value to an XRegExp. Native RegExp flags are not preserved.\r\n     *\r\n     * @private\r\n     * @param {String|RegExp} value Value to convert.\r\n     * @param {Boolean} [addFlagX] Whether to apply the `x` flag in cases when `value` is not\r\n     *   already a regex generated by XRegExp\r\n     * @returns {RegExp} XRegExp object with XRegExp syntax applied.\r\n     */\r\n    function asXRegExp(value, addFlagX) {\r\n        var flags = addFlagX ? 'x' : '';\r\n        return XRegExp.isRegExp(value) ?\r\n            (value[REGEX_DATA] && value[REGEX_DATA].captureNames ?\r\n                // Don't recompile, to preserve capture names\r\n                value :\r\n                // Recompile as XRegExp\r\n                XRegExp(value.source, flags)\r\n            ) :\r\n            // Compile string as XRegExp\r\n            XRegExp(value, flags);\r\n    }\r\n\r\n    /**\r\n     * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in\r\n     * the outer pattern and provided subpatterns are automatically renumbered to work correctly.\r\n     * Native flags used by provided subpatterns are ignored in favor of the `flags` argument.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\r\n     *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\r\n     *   character classes.\r\n     * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\r\n     *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\r\n     * @param {String} [flags] Any combination of XRegExp flags.\r\n     * @returns {RegExp} Regex with interpolated subpatterns.\r\n     * @example\r\n     *\r\n     * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\r\n     *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\r\n     *     h12: /1[0-2]|0?[1-9]/,\r\n     *     h24: /2[0-3]|[01][0-9]/\r\n     *   }, 'x'),\r\n     *   minutes: /^[0-5][0-9]$/\r\n     * });\r\n     * time.test('10:59'); // -> true\r\n     * XRegExp.exec('10:59', time).minutes; // -> '59'\r\n     */\r\n    XRegExp.build = function(pattern, subs, flags) {\r\n        flags = flags || '';\r\n        // Used with `asXRegExp` calls for `pattern` and subpatterns in `subs`, to work around how\r\n        // some browsers convert `RegExp('\\n')` to a regex that contains the literal characters `\\`\r\n        // and `n`. See more details at <https://github.com/slevithan/xregexp/pull/163>.\r\n        var addFlagX = flags.indexOf('x') > -1;\r\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern);\r\n        // Add flags within a leading mode modifier to the overall pattern's flags\r\n        if (inlineFlags) {\r\n            flags = XRegExp._clipDuplicates(flags + inlineFlags[1]);\r\n        }\r\n\r\n        var data = {};\r\n        for (var p in subs) {\r\n            if (subs.hasOwnProperty(p)) {\r\n                // Passing to XRegExp enables extended syntax and ensures independent validity,\r\n                // lest an unescaped `(`, `)`, `[`, or trailing `\\` breaks the `(?:)` wrapper. For\r\n                // subpatterns provided as native regexes, it dies on octals and adds the property\r\n                // used to hold extended regex instance data, for simplicity.\r\n                var sub = asXRegExp(subs[p], addFlagX);\r\n                data[p] = {\r\n                    // Deanchoring allows embedding independently useful anchored regexes. If you\r\n                    // really need to keep your anchors, double them (i.e., `^^...$$`).\r\n                    pattern: deanchor(sub.source),\r\n                    names: sub[REGEX_DATA].captureNames || []\r\n                };\r\n            }\r\n        }\r\n\r\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\r\n        // helps keep this simple. Named captures will be put back.\r\n        var patternAsRegex = asXRegExp(pattern, addFlagX);\r\n\r\n        // 'Caps' is short for 'captures'\r\n        var numCaps = 0;\r\n        var numPriorCaps;\r\n        var numOuterCaps = 0;\r\n        var outerCapsMap = [0];\r\n        var outerCapNames = patternAsRegex[REGEX_DATA].captureNames || [];\r\n        var output = patternAsRegex.source.replace(parts, function($0, $1, $2, $3, $4) {\r\n            var subName = $1 || $2;\r\n            var capName;\r\n            var intro;\r\n            var localCapIndex;\r\n            // Named subpattern\r\n            if (subName) {\r\n                if (!data.hasOwnProperty(subName)) {\r\n                    throw new ReferenceError('Undefined property ' + $0);\r\n                }\r\n                // Named subpattern was wrapped in a capturing group\r\n                if ($1) {\r\n                    capName = outerCapNames[numOuterCaps];\r\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\r\n                    // as the capture name\r\n                    intro = '(?<' + (capName || subName) + '>';\r\n                } else {\r\n                    intro = '(?:';\r\n                }\r\n                numPriorCaps = numCaps;\r\n                return intro + data[subName].pattern.replace(subParts, function(match, paren, backref) {\r\n                    // Capturing group\r\n                    if (paren) {\r\n                        capName = data[subName].names[numCaps - numPriorCaps];\r\n                        ++numCaps;\r\n                        // If the current capture has a name, preserve the name\r\n                        if (capName) {\r\n                            return '(?<' + capName + '>';\r\n                        }\r\n                    // Backreference\r\n                    } else if (backref) {\r\n                        localCapIndex = +backref - 1;\r\n                        // Rewrite the backreference\r\n                        return data[subName].names[localCapIndex] ?\r\n                            // Need to preserve the backreference name in case using flag `n`\r\n                            '\\\\k<' + data[subName].names[localCapIndex] + '>' :\r\n                            '\\\\' + (+backref + numPriorCaps);\r\n                    }\r\n                    return match;\r\n                }) + ')';\r\n            }\r\n            // Capturing group\r\n            if ($3) {\r\n                capName = outerCapNames[numOuterCaps];\r\n                outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                // If the current capture has a name, preserve the name\r\n                if (capName) {\r\n                    return '(?<' + capName + '>';\r\n                }\r\n            // Backreference\r\n            } else if ($4) {\r\n                localCapIndex = +$4 - 1;\r\n                // Rewrite the backreference\r\n                return outerCapNames[localCapIndex] ?\r\n                    // Need to preserve the backreference name in case using flag `n`\r\n                    '\\\\k<' + outerCapNames[localCapIndex] + '>' :\r\n                    '\\\\' + outerCapsMap[+$4];\r\n            }\r\n            return $0;\r\n        });\r\n\r\n        return XRegExp(output, flags);\r\n    };\r\n\r\n};\r\n\n},{}],2:[function(require,module,exports){\n/*!\r\n * XRegExp.matchRecursive 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2009-2017 MIT License\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns a match detail object composed of the provided values.\r\n     *\r\n     * @private\r\n     */\r\n    function row(name, value, start, end) {\r\n        return {\r\n            name: name,\r\n            value: value,\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns an array of match strings between outermost left and right delimiters, or an array of\r\n     * objects with detailed match parts and position data. An error is thrown if delimiters are\r\n     * unbalanced within the data.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {String} str String to search.\r\n     * @param {String} left Left delimiter as an XRegExp pattern.\r\n     * @param {String} right Right delimiter as an XRegExp pattern.\r\n     * @param {String} [flags] Any native or XRegExp flags, used for the left and right delimiters.\r\n     * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\r\n     * @returns {Array} Array of matches, or an empty array.\r\n     * @example\r\n     *\r\n     * // Basic usage\r\n     * var str = '(t((e))s)t()(ing)';\r\n     * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\r\n     * // -> ['t((e))s', '', 'ing']\r\n     *\r\n     * // Extended information mode with valueNames\r\n     * str = 'Here is <div> <div>an</div></div> example';\r\n     * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\r\n     *   valueNames: ['between', 'left', 'match', 'right']\r\n     * });\r\n     * // -> [\r\n     * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\r\n     * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\r\n     * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\r\n     * // {name: 'right',   value: '</div>',         start: 27, end: 33},\r\n     * // {name: 'between', value: ' example',       start: 33, end: 41}\r\n     * // ]\r\n     *\r\n     * // Omitting unneeded parts with null valueNames, and using escapeChar\r\n     * str = '...{1}.\\\\{{function(x,y){return {y:x}}}';\r\n     * XRegExp.matchRecursive(str, '{', '}', 'g', {\r\n     *   valueNames: ['literal', null, 'value', null],\r\n     *   escapeChar: '\\\\'\r\n     * });\r\n     * // -> [\r\n     * // {name: 'literal', value: '...',  start: 0, end: 3},\r\n     * // {name: 'value',   value: '1',    start: 4, end: 5},\r\n     * // {name: 'literal', value: '.\\\\{', start: 6, end: 9},\r\n     * // {name: 'value',   value: 'function(x,y){return {y:x}}', start: 10, end: 37}\r\n     * // ]\r\n     *\r\n     * // Sticky mode via flag y\r\n     * str = '<1><<<2>>><3>4<5>';\r\n     * XRegExp.matchRecursive(str, '<', '>', 'gy');\r\n     * // -> ['1', '<<2>>', '3']\r\n     */\r\n    XRegExp.matchRecursive = function(str, left, right, flags, options) {\r\n        flags = flags || '';\r\n        options = options || {};\r\n        var global = flags.indexOf('g') > -1;\r\n        var sticky = flags.indexOf('y') > -1;\r\n        // Flag `y` is controlled internally\r\n        var basicFlags = flags.replace(/y/g, '');\r\n        var escapeChar = options.escapeChar;\r\n        var vN = options.valueNames;\r\n        var output = [];\r\n        var openTokens = 0;\r\n        var delimStart = 0;\r\n        var delimEnd = 0;\r\n        var lastOuterEnd = 0;\r\n        var outerStart;\r\n        var innerStart;\r\n        var leftMatch;\r\n        var rightMatch;\r\n        var esc;\r\n        left = XRegExp(left, basicFlags);\r\n        right = XRegExp(right, basicFlags);\r\n\r\n        if (escapeChar) {\r\n            if (escapeChar.length > 1) {\r\n                throw new Error('Cannot use more than one escape character');\r\n            }\r\n            escapeChar = XRegExp.escape(escapeChar);\r\n            // Example of concatenated `esc` regex:\r\n            // `escapeChar`: '%'\r\n            // `left`: '<'\r\n            // `right`: '>'\r\n            // Regex is: /(?:%[\\S\\s]|(?:(?!<|>)[^%])+)+/\r\n            esc = new RegExp(\r\n                '(?:' + escapeChar + '[\\\\S\\\\s]|(?:(?!' +\r\n                    // Using `XRegExp.union` safely rewrites backreferences in `left` and `right`.\r\n                    // Intentionally not passing `basicFlags` to `XRegExp.union` since any syntax\r\n                    // transformation resulting from those flags was already applied to `left` and\r\n                    // `right` when they were passed through the XRegExp constructor above.\r\n                    XRegExp.union([left, right], '', {conjunction: 'or'}).source +\r\n                    ')[^' + escapeChar + '])+)+',\r\n                // Flags `gy` not needed here\r\n                flags.replace(/[^imu]+/g, '')\r\n            );\r\n        }\r\n\r\n        while (true) {\r\n            // If using an escape character, advance to the delimiter's next starting position,\r\n            // skipping any escaped characters in between\r\n            if (escapeChar) {\r\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, 'sticky') || [''])[0].length;\r\n            }\r\n            leftMatch = XRegExp.exec(str, left, delimEnd);\r\n            rightMatch = XRegExp.exec(str, right, delimEnd);\r\n            // Keep the leftmost match only\r\n            if (leftMatch && rightMatch) {\r\n                if (leftMatch.index <= rightMatch.index) {\r\n                    rightMatch = null;\r\n                } else {\r\n                    leftMatch = null;\r\n                }\r\n            }\r\n            // Paths (LM: leftMatch, RM: rightMatch, OT: openTokens):\r\n            // LM | RM | OT | Result\r\n            // 1  | 0  | 1  | loop\r\n            // 1  | 0  | 0  | loop\r\n            // 0  | 1  | 1  | loop\r\n            // 0  | 1  | 0  | throw\r\n            // 0  | 0  | 1  | throw\r\n            // 0  | 0  | 0  | break\r\n            // The paths above don't include the sticky mode special case. The loop ends after the\r\n            // first completed match if not `global`.\r\n            if (leftMatch || rightMatch) {\r\n                delimStart = (leftMatch || rightMatch).index;\r\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n            } else if (!openTokens) {\r\n                break;\r\n            }\r\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n                break;\r\n            }\r\n            if (leftMatch) {\r\n                if (!openTokens) {\r\n                    outerStart = delimStart;\r\n                    innerStart = delimEnd;\r\n                }\r\n                ++openTokens;\r\n            } else if (rightMatch && openTokens) {\r\n                if (!--openTokens) {\r\n                    if (vN) {\r\n                        if (vN[0] && outerStart > lastOuterEnd) {\r\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\r\n                        }\r\n                        if (vN[1]) {\r\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\r\n                        }\r\n                        if (vN[2]) {\r\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\r\n                        }\r\n                        if (vN[3]) {\r\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\r\n                        }\r\n                    } else {\r\n                        output.push(str.slice(innerStart, delimStart));\r\n                    }\r\n                    lastOuterEnd = delimEnd;\r\n                    if (!global) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('Unbalanced delimiter found in string');\r\n            }\r\n            // If the delimiter matched an empty string, avoid an infinite loop\r\n            if (delimStart === delimEnd) {\r\n                ++delimEnd;\r\n            }\r\n        }\r\n\r\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\r\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n};\r\n\n},{}],3:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Base 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2008-2017 MIT License\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds base support for Unicode matching:\r\n     * - Adds syntax `\\p{..}` for matching Unicode tokens. Tokens can be inverted using `\\P{..}` or\r\n     *   `\\p{^..}`. Token names ignore case, spaces, hyphens, and underscores. You can omit the\r\n     *   braces for token names that are a single letter (e.g. `\\pL` or `PL`).\r\n     * - Adds flag A (astral), which enables 21-bit Unicode support.\r\n     * - Adds the `XRegExp.addUnicodeData` method used by other addons to provide character data.\r\n     *\r\n     * Unicode Base relies on externally provided Unicode character data. Official addons are\r\n     * available to provide data for Unicode categories, scripts, blocks, and properties.\r\n     *\r\n     * @requires XRegExp\r\n     */\r\n\r\n    // ==--------------------------==\r\n    // Private stuff\r\n    // ==--------------------------==\r\n\r\n    // Storage for Unicode data\r\n    var unicode = {};\r\n\r\n    // Reuse utils\r\n    var dec = XRegExp._dec;\r\n    var hex = XRegExp._hex;\r\n    var pad4 = XRegExp._pad4;\r\n\r\n    // Generates a token lookup name: lowercase, with hyphens, spaces, and underscores removed\r\n    function normalize(name) {\r\n        return name.replace(/[- _]+/g, '').toLowerCase();\r\n    }\r\n\r\n    // Gets the decimal code of a literal code unit, \\xHH, \\uHHHH, or a backslash-escaped literal\r\n    function charCode(chr) {\r\n        var esc = /^\\\\[xu](.+)/.exec(chr);\r\n        return esc ?\r\n            dec(esc[1]) :\r\n            chr.charCodeAt(chr.charAt(0) === '\\\\' ? 1 : 0);\r\n    }\r\n\r\n    // Inverts a list of ordered BMP characters and ranges\r\n    function invertBmp(range) {\r\n        var output = '';\r\n        var lastEnd = -1;\r\n\r\n        XRegExp.forEach(\r\n            range,\r\n            /(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?/,\r\n            function(m) {\r\n                var start = charCode(m[1]);\r\n                if (start > (lastEnd + 1)) {\r\n                    output += '\\\\u' + pad4(hex(lastEnd + 1));\r\n                    if (start > (lastEnd + 2)) {\r\n                        output += '-\\\\u' + pad4(hex(start - 1));\r\n                    }\r\n                }\r\n                lastEnd = charCode(m[2] || m[1]);\r\n            }\r\n        );\r\n\r\n        if (lastEnd < 0xFFFF) {\r\n            output += '\\\\u' + pad4(hex(lastEnd + 1));\r\n            if (lastEnd < 0xFFFE) {\r\n                output += '-\\\\uFFFF';\r\n            }\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    // Generates an inverted BMP range on first use\r\n    function cacheInvertedBmp(slug) {\r\n        var prop = 'b!';\r\n        return (\r\n            unicode[slug][prop] ||\r\n            (unicode[slug][prop] = invertBmp(unicode[slug].bmp))\r\n        );\r\n    }\r\n\r\n    // Combines and optionally negates BMP and astral data\r\n    function buildAstral(slug, isNegated) {\r\n        var item = unicode[slug];\r\n        var combined = '';\r\n\r\n        if (item.bmp && !item.isBmpLast) {\r\n            combined = '[' + item.bmp + ']' + (item.astral ? '|' : '');\r\n        }\r\n        if (item.astral) {\r\n            combined += item.astral;\r\n        }\r\n        if (item.isBmpLast && item.bmp) {\r\n            combined += (item.astral ? '|' : '') + '[' + item.bmp + ']';\r\n        }\r\n\r\n        // Astral Unicode tokens always match a code point, never a code unit\r\n        return isNegated ?\r\n            '(?:(?!' + combined + ')(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\0-\\uFFFF]))' :\r\n            '(?:' + combined + ')';\r\n    }\r\n\r\n    // Builds a complete astral pattern on first use\r\n    function cacheAstral(slug, isNegated) {\r\n        var prop = isNegated ? 'a!' : 'a=';\r\n        return (\r\n            unicode[slug][prop] ||\r\n            (unicode[slug][prop] = buildAstral(slug, isNegated))\r\n        );\r\n    }\r\n\r\n    // ==--------------------------==\r\n    // Core functionality\r\n    // ==--------------------------==\r\n\r\n    /*\r\n     * Add astral mode (flag A) and Unicode token syntax: `\\p{..}`, `\\P{..}`, `\\p{^..}`, `\\pC`.\r\n     */\r\n    XRegExp.addToken(\r\n        // Use `*` instead of `+` to avoid capturing `^` as the token name in `\\p{^}`\r\n        /\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))/,\r\n        function(match, scope, flags) {\r\n            var ERR_DOUBLE_NEG = 'Invalid double negation ';\r\n            var ERR_UNKNOWN_NAME = 'Unknown Unicode token ';\r\n            var ERR_UNKNOWN_REF = 'Unicode token missing data ';\r\n            var ERR_ASTRAL_ONLY = 'Astral mode required for Unicode token ';\r\n            var ERR_ASTRAL_IN_CLASS = 'Astral mode does not support Unicode tokens within character classes';\r\n            // Negated via \\P{..} or \\p{^..}\r\n            var isNegated = match[1] === 'P' || !!match[2];\r\n            // Switch from BMP (0-FFFF) to astral (0-10FFFF) mode via flag A\r\n            var isAstralMode = flags.indexOf('A') > -1;\r\n            // Token lookup name. Check `[4]` first to avoid passing `undefined` via `\\p{}`\r\n            var slug = normalize(match[4] || match[3]);\r\n            // Token data object\r\n            var item = unicode[slug];\r\n\r\n            if (match[1] === 'P' && match[2]) {\r\n                throw new SyntaxError(ERR_DOUBLE_NEG + match[0]);\r\n            }\r\n            if (!unicode.hasOwnProperty(slug)) {\r\n                throw new SyntaxError(ERR_UNKNOWN_NAME + match[0]);\r\n            }\r\n\r\n            // Switch to the negated form of the referenced Unicode token\r\n            if (item.inverseOf) {\r\n                slug = normalize(item.inverseOf);\r\n                if (!unicode.hasOwnProperty(slug)) {\r\n                    throw new ReferenceError(ERR_UNKNOWN_REF + match[0] + ' -> ' + item.inverseOf);\r\n                }\r\n                item = unicode[slug];\r\n                isNegated = !isNegated;\r\n            }\r\n\r\n            if (!(item.bmp || isAstralMode)) {\r\n                throw new SyntaxError(ERR_ASTRAL_ONLY + match[0]);\r\n            }\r\n            if (isAstralMode) {\r\n                if (scope === 'class') {\r\n                    throw new SyntaxError(ERR_ASTRAL_IN_CLASS);\r\n                }\r\n\r\n                return cacheAstral(slug, isNegated);\r\n            }\r\n\r\n            return scope === 'class' ?\r\n                (isNegated ? cacheInvertedBmp(slug) : item.bmp) :\r\n                (isNegated ? '[^' : '[') + item.bmp + ']';\r\n        },\r\n        {\r\n            scope: 'all',\r\n            optionalFlags: 'A',\r\n            leadChar: '\\\\'\r\n        }\r\n    );\r\n\r\n    /**\r\n     * Adds to the list of Unicode tokens that XRegExp regexes can match via `\\p` or `\\P`.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {Array} data Objects with named character ranges. Each object may have properties\r\n     *   `name`, `alias`, `isBmpLast`, `inverseOf`, `bmp`, and `astral`. All but `name` are\r\n     *   optional, although one of `bmp` or `astral` is required (unless `inverseOf` is set). If\r\n     *   `astral` is absent, the `bmp` data is used for BMP and astral modes. If `bmp` is absent,\r\n     *   the name errors in BMP mode but works in astral mode. If both `bmp` and `astral` are\r\n     *   provided, the `bmp` data only is used in BMP mode, and the combination of `bmp` and\r\n     *   `astral` data is used in astral mode. `isBmpLast` is needed when a token matches orphan\r\n     *   high surrogates *and* uses surrogate pairs to match astral code points. The `bmp` and\r\n     *   `astral` data should be a combination of literal characters and `\\xHH` or `\\uHHHH` escape\r\n     *   sequences, with hyphens to create ranges. Any regex metacharacters in the data should be\r\n     *   escaped, apart from range-creating hyphens. The `astral` data can additionally use\r\n     *   character classes and alternation, and should use surrogate pairs to represent astral code\r\n     *   points. `inverseOf` can be used to avoid duplicating character data if a Unicode token is\r\n     *   defined as the exact inverse of another token.\r\n     * @example\r\n     *\r\n     * // Basic use\r\n     * XRegExp.addUnicodeData([{\r\n     *   name: 'XDigit',\r\n     *   alias: 'Hexadecimal',\r\n     *   bmp: '0-9A-Fa-f'\r\n     * }]);\r\n     * XRegExp('\\\\p{XDigit}:\\\\p{Hexadecimal}+').test('0:3D'); // -> true\r\n     */\r\n    XRegExp.addUnicodeData = function(data) {\r\n        var ERR_NO_NAME = 'Unicode token requires name';\r\n        var ERR_NO_DATA = 'Unicode token has no character data ';\r\n        var item;\r\n\r\n        for (var i = 0; i < data.length; ++i) {\r\n            item = data[i];\r\n            if (!item.name) {\r\n                throw new Error(ERR_NO_NAME);\r\n            }\r\n            if (!(item.inverseOf || item.bmp || item.astral)) {\r\n                throw new Error(ERR_NO_DATA + item.name);\r\n            }\r\n            unicode[normalize(item.name)] = item;\r\n            if (item.alias) {\r\n                unicode[normalize(item.alias)] = item;\r\n            }\r\n        }\r\n\r\n        // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and\r\n        // flags might now produce different results\r\n        XRegExp.cache.flush('patterns');\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Return a reference to the internal Unicode definition structure for the given Unicode\r\n     * Property if the given name is a legal Unicode Property for use in XRegExp `\\p` or `\\P` regex\r\n     * constructs.\r\n     *\r\n     * @memberOf XRegExp\r\n     * @param {String} name Name by which the Unicode Property may be recognized (case-insensitive),\r\n     *   e.g. `'N'` or `'Number'`. The given name is matched against all registered Unicode\r\n     *   Properties and Property Aliases.\r\n     * @returns {Object} Reference to definition structure when the name matches a Unicode Property.\r\n     *\r\n     * @note\r\n     * For more info on Unicode Properties, see also http://unicode.org/reports/tr18/#Categories.\r\n     *\r\n     * @note\r\n     * This method is *not* part of the officially documented API and may change or be removed in\r\n     * the future. It is meant for userland code that wishes to reuse the (large) internal Unicode\r\n     * structures set up by XRegExp.\r\n     */\r\n    XRegExp._getUnicodeProperty = function(name) {\r\n        var slug = normalize(name);\r\n        return unicode[slug];\r\n    };\r\n\r\n};\r\n\n},{}],4:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Blocks 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2010-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for all Unicode blocks. Block names use the prefix 'In'. E.g.,\r\n     * `\\p{InBasicLatin}`. Token names are case insensitive, and any spaces, hyphens, and\r\n     * underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Blocks');\r\n    }\r\n\r\n    XRegExp.addUnicodeData([\r\n        {\r\n            name: 'InAdlam',\r\n            astral: '\\uD83A[\\uDD00-\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'InAegean_Numbers',\r\n            astral: '\\uD800[\\uDD00-\\uDD3F]'\r\n        },\r\n        {\r\n            name: 'InAhom',\r\n            astral: '\\uD805[\\uDF00-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'InAlchemical_Symbols',\r\n            astral: '\\uD83D[\\uDF00-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InAlphabetic_Presentation_Forms',\r\n            bmp: '\\uFB00-\\uFB4F'\r\n        },\r\n        {\r\n            name: 'InAnatolian_Hieroglyphs',\r\n            astral: '\\uD811[\\uDC00-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InAncient_Greek_Musical_Notation',\r\n            astral: '\\uD834[\\uDE00-\\uDE4F]'\r\n        },\r\n        {\r\n            name: 'InAncient_Greek_Numbers',\r\n            astral: '\\uD800[\\uDD40-\\uDD8F]'\r\n        },\r\n        {\r\n            name: 'InAncient_Symbols',\r\n            astral: '\\uD800[\\uDD90-\\uDDCF]'\r\n        },\r\n        {\r\n            name: 'InArabic',\r\n            bmp: '\\u0600-\\u06FF'\r\n        },\r\n        {\r\n            name: 'InArabic_Extended_A',\r\n            bmp: '\\u08A0-\\u08FF'\r\n        },\r\n        {\r\n            name: 'InArabic_Mathematical_Alphabetic_Symbols',\r\n            astral: '\\uD83B[\\uDE00-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InArabic_Presentation_Forms_A',\r\n            bmp: '\\uFB50-\\uFDFF'\r\n        },\r\n        {\r\n            name: 'InArabic_Presentation_Forms_B',\r\n            bmp: '\\uFE70-\\uFEFF'\r\n        },\r\n        {\r\n            name: 'InArabic_Supplement',\r\n            bmp: '\\u0750-\\u077F'\r\n        },\r\n        {\r\n            name: 'InArmenian',\r\n            bmp: '\\u0530-\\u058F'\r\n        },\r\n        {\r\n            name: 'InArrows',\r\n            bmp: '\\u2190-\\u21FF'\r\n        },\r\n        {\r\n            name: 'InAvestan',\r\n            astral: '\\uD802[\\uDF00-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'InBalinese',\r\n            bmp: '\\u1B00-\\u1B7F'\r\n        },\r\n        {\r\n            name: 'InBamum',\r\n            bmp: '\\uA6A0-\\uA6FF'\r\n        },\r\n        {\r\n            name: 'InBamum_Supplement',\r\n            astral: '\\uD81A[\\uDC00-\\uDE3F]'\r\n        },\r\n        {\r\n            name: 'InBasic_Latin',\r\n            bmp: '\\0-\\x7F'\r\n        },\r\n        {\r\n            name: 'InBassa_Vah',\r\n            astral: '\\uD81A[\\uDED0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InBatak',\r\n            bmp: '\\u1BC0-\\u1BFF'\r\n        },\r\n        {\r\n            name: 'InBengali',\r\n            bmp: '\\u0980-\\u09FF'\r\n        },\r\n        {\r\n            name: 'InBhaiksuki',\r\n            astral: '\\uD807[\\uDC00-\\uDC6F]'\r\n        },\r\n        {\r\n            name: 'InBlock_Elements',\r\n            bmp: '\\u2580-\\u259F'\r\n        },\r\n        {\r\n            name: 'InBopomofo',\r\n            bmp: '\\u3100-\\u312F'\r\n        },\r\n        {\r\n            name: 'InBopomofo_Extended',\r\n            bmp: '\\u31A0-\\u31BF'\r\n        },\r\n        {\r\n            name: 'InBox_Drawing',\r\n            bmp: '\\u2500-\\u257F'\r\n        },\r\n        {\r\n            name: 'InBrahmi',\r\n            astral: '\\uD804[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InBraille_Patterns',\r\n            bmp: '\\u2800-\\u28FF'\r\n        },\r\n        {\r\n            name: 'InBuginese',\r\n            bmp: '\\u1A00-\\u1A1F'\r\n        },\r\n        {\r\n            name: 'InBuhid',\r\n            bmp: '\\u1740-\\u175F'\r\n        },\r\n        {\r\n            name: 'InByzantine_Musical_Symbols',\r\n            astral: '\\uD834[\\uDC00-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility',\r\n            bmp: '\\u3300-\\u33FF'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility_Forms',\r\n            bmp: '\\uFE30-\\uFE4F'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility_Ideographs',\r\n            bmp: '\\uF900-\\uFAFF'\r\n        },\r\n        {\r\n            name: 'InCJK_Compatibility_Ideographs_Supplement',\r\n            astral: '\\uD87E[\\uDC00-\\uDE1F]'\r\n        },\r\n        {\r\n            name: 'InCJK_Radicals_Supplement',\r\n            bmp: '\\u2E80-\\u2EFF'\r\n        },\r\n        {\r\n            name: 'InCJK_Strokes',\r\n            bmp: '\\u31C0-\\u31EF'\r\n        },\r\n        {\r\n            name: 'InCJK_Symbols_and_Punctuation',\r\n            bmp: '\\u3000-\\u303F'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs',\r\n            bmp: '\\u4E00-\\u9FFF'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_A',\r\n            bmp: '\\u3400-\\u4DBF'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_B',\r\n            astral: '[\\uD840-\\uD868][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDEDF]'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_C',\r\n            astral: '\\uD869[\\uDF00-\\uDFFF]|[\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_D',\r\n            astral: '\\uD86D[\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1F]'\r\n        },\r\n        {\r\n            name: 'InCJK_Unified_Ideographs_Extension_E',\r\n            astral: '\\uD86E[\\uDC20-\\uDFFF]|[\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD873[\\uDC00-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'InCarian',\r\n            astral: '\\uD800[\\uDEA0-\\uDEDF]'\r\n        },\r\n        {\r\n            name: 'InCaucasian_Albanian',\r\n            astral: '\\uD801[\\uDD30-\\uDD6F]'\r\n        },\r\n        {\r\n            name: 'InChakma',\r\n            astral: '\\uD804[\\uDD00-\\uDD4F]'\r\n        },\r\n        {\r\n            name: 'InCham',\r\n            bmp: '\\uAA00-\\uAA5F'\r\n        },\r\n        {\r\n            name: 'InCherokee',\r\n            bmp: '\\u13A0-\\u13FF'\r\n        },\r\n        {\r\n            name: 'InCherokee_Supplement',\r\n            bmp: '\\uAB70-\\uABBF'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks',\r\n            bmp: '\\u0300-\\u036F'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks_Extended',\r\n            bmp: '\\u1AB0-\\u1AFF'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks_Supplement',\r\n            bmp: '\\u1DC0-\\u1DFF'\r\n        },\r\n        {\r\n            name: 'InCombining_Diacritical_Marks_for_Symbols',\r\n            bmp: '\\u20D0-\\u20FF'\r\n        },\r\n        {\r\n            name: 'InCombining_Half_Marks',\r\n            bmp: '\\uFE20-\\uFE2F'\r\n        },\r\n        {\r\n            name: 'InCommon_Indic_Number_Forms',\r\n            bmp: '\\uA830-\\uA83F'\r\n        },\r\n        {\r\n            name: 'InControl_Pictures',\r\n            bmp: '\\u2400-\\u243F'\r\n        },\r\n        {\r\n            name: 'InCoptic',\r\n            bmp: '\\u2C80-\\u2CFF'\r\n        },\r\n        {\r\n            name: 'InCoptic_Epact_Numbers',\r\n            astral: '\\uD800[\\uDEE0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InCounting_Rod_Numerals',\r\n            astral: '\\uD834[\\uDF60-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InCuneiform',\r\n            astral: '\\uD808[\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InCuneiform_Numbers_and_Punctuation',\r\n            astral: '\\uD809[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InCurrency_Symbols',\r\n            bmp: '\\u20A0-\\u20CF'\r\n        },\r\n        {\r\n            name: 'InCypriot_Syllabary',\r\n            astral: '\\uD802[\\uDC00-\\uDC3F]'\r\n        },\r\n        {\r\n            name: 'InCyrillic',\r\n            bmp: '\\u0400-\\u04FF'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Extended_A',\r\n            bmp: '\\u2DE0-\\u2DFF'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Extended_B',\r\n            bmp: '\\uA640-\\uA69F'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Extended_C',\r\n            bmp: '\\u1C80-\\u1C8F'\r\n        },\r\n        {\r\n            name: 'InCyrillic_Supplement',\r\n            bmp: '\\u0500-\\u052F'\r\n        },\r\n        {\r\n            name: 'InDeseret',\r\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\r\n        },\r\n        {\r\n            name: 'InDevanagari',\r\n            bmp: '\\u0900-\\u097F'\r\n        },\r\n        {\r\n            name: 'InDevanagari_Extended',\r\n            bmp: '\\uA8E0-\\uA8FF'\r\n        },\r\n        {\r\n            name: 'InDingbats',\r\n            bmp: '\\u2700-\\u27BF'\r\n        },\r\n        {\r\n            name: 'InDomino_Tiles',\r\n            astral: '\\uD83C[\\uDC30-\\uDC9F]'\r\n        },\r\n        {\r\n            name: 'InDuployan',\r\n            astral: '\\uD82F[\\uDC00-\\uDC9F]'\r\n        },\r\n        {\r\n            name: 'InEarly_Dynastic_Cuneiform',\r\n            astral: '\\uD809[\\uDC80-\\uDD4F]'\r\n        },\r\n        {\r\n            name: 'InEgyptian_Hieroglyphs',\r\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F]'\r\n        },\r\n        {\r\n            name: 'InElbasan',\r\n            astral: '\\uD801[\\uDD00-\\uDD2F]'\r\n        },\r\n        {\r\n            name: 'InEmoticons',\r\n            astral: '\\uD83D[\\uDE00-\\uDE4F]'\r\n        },\r\n        {\r\n            name: 'InEnclosed_Alphanumeric_Supplement',\r\n            astral: '\\uD83C[\\uDD00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InEnclosed_Alphanumerics',\r\n            bmp: '\\u2460-\\u24FF'\r\n        },\r\n        {\r\n            name: 'InEnclosed_CJK_Letters_and_Months',\r\n            bmp: '\\u3200-\\u32FF'\r\n        },\r\n        {\r\n            name: 'InEnclosed_Ideographic_Supplement',\r\n            astral: '\\uD83C[\\uDE00-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InEthiopic',\r\n            bmp: '\\u1200-\\u137F'\r\n        },\r\n        {\r\n            name: 'InEthiopic_Extended',\r\n            bmp: '\\u2D80-\\u2DDF'\r\n        },\r\n        {\r\n            name: 'InEthiopic_Extended_A',\r\n            bmp: '\\uAB00-\\uAB2F'\r\n        },\r\n        {\r\n            name: 'InEthiopic_Supplement',\r\n            bmp: '\\u1380-\\u139F'\r\n        },\r\n        {\r\n            name: 'InGeneral_Punctuation',\r\n            bmp: '\\u2000-\\u206F'\r\n        },\r\n        {\r\n            name: 'InGeometric_Shapes',\r\n            bmp: '\\u25A0-\\u25FF'\r\n        },\r\n        {\r\n            name: 'InGeometric_Shapes_Extended',\r\n            astral: '\\uD83D[\\uDF80-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InGeorgian',\r\n            bmp: '\\u10A0-\\u10FF'\r\n        },\r\n        {\r\n            name: 'InGeorgian_Supplement',\r\n            bmp: '\\u2D00-\\u2D2F'\r\n        },\r\n        {\r\n            name: 'InGlagolitic',\r\n            bmp: '\\u2C00-\\u2C5F'\r\n        },\r\n        {\r\n            name: 'InGlagolitic_Supplement',\r\n            astral: '\\uD838[\\uDC00-\\uDC2F]'\r\n        },\r\n        {\r\n            name: 'InGothic',\r\n            astral: '\\uD800[\\uDF30-\\uDF4F]'\r\n        },\r\n        {\r\n            name: 'InGrantha',\r\n            astral: '\\uD804[\\uDF00-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InGreek_Extended',\r\n            bmp: '\\u1F00-\\u1FFF'\r\n        },\r\n        {\r\n            name: 'InGreek_and_Coptic',\r\n            bmp: '\\u0370-\\u03FF'\r\n        },\r\n        {\r\n            name: 'InGujarati',\r\n            bmp: '\\u0A80-\\u0AFF'\r\n        },\r\n        {\r\n            name: 'InGurmukhi',\r\n            bmp: '\\u0A00-\\u0A7F'\r\n        },\r\n        {\r\n            name: 'InHalfwidth_and_Fullwidth_Forms',\r\n            bmp: '\\uFF00-\\uFFEF'\r\n        },\r\n        {\r\n            name: 'InHangul_Compatibility_Jamo',\r\n            bmp: '\\u3130-\\u318F'\r\n        },\r\n        {\r\n            name: 'InHangul_Jamo',\r\n            bmp: '\\u1100-\\u11FF'\r\n        },\r\n        {\r\n            name: 'InHangul_Jamo_Extended_A',\r\n            bmp: '\\uA960-\\uA97F'\r\n        },\r\n        {\r\n            name: 'InHangul_Jamo_Extended_B',\r\n            bmp: '\\uD7B0-\\uD7FF'\r\n        },\r\n        {\r\n            name: 'InHangul_Syllables',\r\n            bmp: '\\uAC00-\\uD7AF'\r\n        },\r\n        {\r\n            name: 'InHanunoo',\r\n            bmp: '\\u1720-\\u173F'\r\n        },\r\n        {\r\n            name: 'InHatran',\r\n            astral: '\\uD802[\\uDCE0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InHebrew',\r\n            bmp: '\\u0590-\\u05FF'\r\n        },\r\n        {\r\n            name: 'InHigh_Private_Use_Surrogates',\r\n            bmp: '\\uDB80-\\uDBFF'\r\n        },\r\n        {\r\n            name: 'InHigh_Surrogates',\r\n            bmp: '\\uD800-\\uDB7F'\r\n        },\r\n        {\r\n            name: 'InHiragana',\r\n            bmp: '\\u3040-\\u309F'\r\n        },\r\n        {\r\n            name: 'InIPA_Extensions',\r\n            bmp: '\\u0250-\\u02AF'\r\n        },\r\n        {\r\n            name: 'InIdeographic_Description_Characters',\r\n            bmp: '\\u2FF0-\\u2FFF'\r\n        },\r\n        {\r\n            name: 'InIdeographic_Symbols_and_Punctuation',\r\n            astral: '\\uD81B[\\uDFE0-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InImperial_Aramaic',\r\n            astral: '\\uD802[\\uDC40-\\uDC5F]'\r\n        },\r\n        {\r\n            name: 'InInscriptional_Pahlavi',\r\n            astral: '\\uD802[\\uDF60-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InInscriptional_Parthian',\r\n            astral: '\\uD802[\\uDF40-\\uDF5F]'\r\n        },\r\n        {\r\n            name: 'InJavanese',\r\n            bmp: '\\uA980-\\uA9DF'\r\n        },\r\n        {\r\n            name: 'InKaithi',\r\n            astral: '\\uD804[\\uDC80-\\uDCCF]'\r\n        },\r\n        {\r\n            name: 'InKana_Supplement',\r\n            astral: '\\uD82C[\\uDC00-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InKanbun',\r\n            bmp: '\\u3190-\\u319F'\r\n        },\r\n        {\r\n            name: 'InKangxi_Radicals',\r\n            bmp: '\\u2F00-\\u2FDF'\r\n        },\r\n        {\r\n            name: 'InKannada',\r\n            bmp: '\\u0C80-\\u0CFF'\r\n        },\r\n        {\r\n            name: 'InKatakana',\r\n            bmp: '\\u30A0-\\u30FF'\r\n        },\r\n        {\r\n            name: 'InKatakana_Phonetic_Extensions',\r\n            bmp: '\\u31F0-\\u31FF'\r\n        },\r\n        {\r\n            name: 'InKayah_Li',\r\n            bmp: '\\uA900-\\uA92F'\r\n        },\r\n        {\r\n            name: 'InKharoshthi',\r\n            astral: '\\uD802[\\uDE00-\\uDE5F]'\r\n        },\r\n        {\r\n            name: 'InKhmer',\r\n            bmp: '\\u1780-\\u17FF'\r\n        },\r\n        {\r\n            name: 'InKhmer_Symbols',\r\n            bmp: '\\u19E0-\\u19FF'\r\n        },\r\n        {\r\n            name: 'InKhojki',\r\n            astral: '\\uD804[\\uDE00-\\uDE4F]'\r\n        },\r\n        {\r\n            name: 'InKhudawadi',\r\n            astral: '\\uD804[\\uDEB0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InLao',\r\n            bmp: '\\u0E80-\\u0EFF'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_Additional',\r\n            bmp: '\\u1E00-\\u1EFF'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_A',\r\n            bmp: '\\u0100-\\u017F'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_B',\r\n            bmp: '\\u0180-\\u024F'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_C',\r\n            bmp: '\\u2C60-\\u2C7F'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_D',\r\n            bmp: '\\uA720-\\uA7FF'\r\n        },\r\n        {\r\n            name: 'InLatin_Extended_E',\r\n            bmp: '\\uAB30-\\uAB6F'\r\n        },\r\n        {\r\n            name: 'InLatin_1_Supplement',\r\n            bmp: '\\x80-\\xFF'\r\n        },\r\n        {\r\n            name: 'InLepcha',\r\n            bmp: '\\u1C00-\\u1C4F'\r\n        },\r\n        {\r\n            name: 'InLetterlike_Symbols',\r\n            bmp: '\\u2100-\\u214F'\r\n        },\r\n        {\r\n            name: 'InLimbu',\r\n            bmp: '\\u1900-\\u194F'\r\n        },\r\n        {\r\n            name: 'InLinear_A',\r\n            astral: '\\uD801[\\uDE00-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InLinear_B_Ideograms',\r\n            astral: '\\uD800[\\uDC80-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InLinear_B_Syllabary',\r\n            astral: '\\uD800[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InLisu',\r\n            bmp: '\\uA4D0-\\uA4FF'\r\n        },\r\n        {\r\n            name: 'InLow_Surrogates',\r\n            bmp: '\\uDC00-\\uDFFF'\r\n        },\r\n        {\r\n            name: 'InLycian',\r\n            astral: '\\uD800[\\uDE80-\\uDE9F]'\r\n        },\r\n        {\r\n            name: 'InLydian',\r\n            astral: '\\uD802[\\uDD20-\\uDD3F]'\r\n        },\r\n        {\r\n            name: 'InMahajani',\r\n            astral: '\\uD804[\\uDD50-\\uDD7F]'\r\n        },\r\n        {\r\n            name: 'InMahjong_Tiles',\r\n            astral: '\\uD83C[\\uDC00-\\uDC2F]'\r\n        },\r\n        {\r\n            name: 'InMalayalam',\r\n            bmp: '\\u0D00-\\u0D7F'\r\n        },\r\n        {\r\n            name: 'InMandaic',\r\n            bmp: '\\u0840-\\u085F'\r\n        },\r\n        {\r\n            name: 'InManichaean',\r\n            astral: '\\uD802[\\uDEC0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InMarchen',\r\n            astral: '\\uD807[\\uDC70-\\uDCBF]'\r\n        },\r\n        {\r\n            name: 'InMathematical_Alphanumeric_Symbols',\r\n            astral: '\\uD835[\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InMathematical_Operators',\r\n            bmp: '\\u2200-\\u22FF'\r\n        },\r\n        {\r\n            name: 'InMeetei_Mayek',\r\n            bmp: '\\uABC0-\\uABFF'\r\n        },\r\n        {\r\n            name: 'InMeetei_Mayek_Extensions',\r\n            bmp: '\\uAAE0-\\uAAFF'\r\n        },\r\n        {\r\n            name: 'InMende_Kikakui',\r\n            astral: '\\uD83A[\\uDC00-\\uDCDF]'\r\n        },\r\n        {\r\n            name: 'InMeroitic_Cursive',\r\n            astral: '\\uD802[\\uDDA0-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InMeroitic_Hieroglyphs',\r\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\r\n        },\r\n        {\r\n            name: 'InMiao',\r\n            astral: '\\uD81B[\\uDF00-\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Mathematical_Symbols_A',\r\n            bmp: '\\u27C0-\\u27EF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Mathematical_Symbols_B',\r\n            bmp: '\\u2980-\\u29FF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Symbols',\r\n            bmp: '\\u2600-\\u26FF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Symbols_and_Arrows',\r\n            bmp: '\\u2B00-\\u2BFF'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Symbols_and_Pictographs',\r\n            astral: '\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InMiscellaneous_Technical',\r\n            bmp: '\\u2300-\\u23FF'\r\n        },\r\n        {\r\n            name: 'InModi',\r\n            astral: '\\uD805[\\uDE00-\\uDE5F]'\r\n        },\r\n        {\r\n            name: 'InModifier_Tone_Letters',\r\n            bmp: '\\uA700-\\uA71F'\r\n        },\r\n        {\r\n            name: 'InMongolian',\r\n            bmp: '\\u1800-\\u18AF'\r\n        },\r\n        {\r\n            name: 'InMongolian_Supplement',\r\n            astral: '\\uD805[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InMro',\r\n            astral: '\\uD81A[\\uDE40-\\uDE6F]'\r\n        },\r\n        {\r\n            name: 'InMultani',\r\n            astral: '\\uD804[\\uDE80-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'InMusical_Symbols',\r\n            astral: '\\uD834[\\uDD00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InMyanmar',\r\n            bmp: '\\u1000-\\u109F'\r\n        },\r\n        {\r\n            name: 'InMyanmar_Extended_A',\r\n            bmp: '\\uAA60-\\uAA7F'\r\n        },\r\n        {\r\n            name: 'InMyanmar_Extended_B',\r\n            bmp: '\\uA9E0-\\uA9FF'\r\n        },\r\n        {\r\n            name: 'InNKo',\r\n            bmp: '\\u07C0-\\u07FF'\r\n        },\r\n        {\r\n            name: 'InNabataean',\r\n            astral: '\\uD802[\\uDC80-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'InNew_Tai_Lue',\r\n            bmp: '\\u1980-\\u19DF'\r\n        },\r\n        {\r\n            name: 'InNewa',\r\n            astral: '\\uD805[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InNumber_Forms',\r\n            bmp: '\\u2150-\\u218F'\r\n        },\r\n        {\r\n            name: 'InOgham',\r\n            bmp: '\\u1680-\\u169F'\r\n        },\r\n        {\r\n            name: 'InOl_Chiki',\r\n            bmp: '\\u1C50-\\u1C7F'\r\n        },\r\n        {\r\n            name: 'InOld_Hungarian',\r\n            astral: '\\uD803[\\uDC80-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InOld_Italic',\r\n            astral: '\\uD800[\\uDF00-\\uDF2F]'\r\n        },\r\n        {\r\n            name: 'InOld_North_Arabian',\r\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\r\n        },\r\n        {\r\n            name: 'InOld_Permic',\r\n            astral: '\\uD800[\\uDF50-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'InOld_Persian',\r\n            astral: '\\uD800[\\uDFA0-\\uDFDF]'\r\n        },\r\n        {\r\n            name: 'InOld_South_Arabian',\r\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InOld_Turkic',\r\n            astral: '\\uD803[\\uDC00-\\uDC4F]'\r\n        },\r\n        {\r\n            name: 'InOptical_Character_Recognition',\r\n            bmp: '\\u2440-\\u245F'\r\n        },\r\n        {\r\n            name: 'InOriya',\r\n            bmp: '\\u0B00-\\u0B7F'\r\n        },\r\n        {\r\n            name: 'InOrnamental_Dingbats',\r\n            astral: '\\uD83D[\\uDE50-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InOsage',\r\n            astral: '\\uD801[\\uDCB0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InOsmanya',\r\n            astral: '\\uD801[\\uDC80-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'InPahawh_Hmong',\r\n            astral: '\\uD81A[\\uDF00-\\uDF8F]'\r\n        },\r\n        {\r\n            name: 'InPalmyrene',\r\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InPau_Cin_Hau',\r\n            astral: '\\uD806[\\uDEC0-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InPhags_pa',\r\n            bmp: '\\uA840-\\uA87F'\r\n        },\r\n        {\r\n            name: 'InPhaistos_Disc',\r\n            astral: '\\uD800[\\uDDD0-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InPhoenician',\r\n            astral: '\\uD802[\\uDD00-\\uDD1F]'\r\n        },\r\n        {\r\n            name: 'InPhonetic_Extensions',\r\n            bmp: '\\u1D00-\\u1D7F'\r\n        },\r\n        {\r\n            name: 'InPhonetic_Extensions_Supplement',\r\n            bmp: '\\u1D80-\\u1DBF'\r\n        },\r\n        {\r\n            name: 'InPlaying_Cards',\r\n            astral: '\\uD83C[\\uDCA0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InPrivate_Use_Area',\r\n            bmp: '\\uE000-\\uF8FF'\r\n        },\r\n        {\r\n            name: 'InPsalter_Pahlavi',\r\n            astral: '\\uD802[\\uDF80-\\uDFAF]'\r\n        },\r\n        {\r\n            name: 'InRejang',\r\n            bmp: '\\uA930-\\uA95F'\r\n        },\r\n        {\r\n            name: 'InRumi_Numeral_Symbols',\r\n            astral: '\\uD803[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'InRunic',\r\n            bmp: '\\u16A0-\\u16FF'\r\n        },\r\n        {\r\n            name: 'InSamaritan',\r\n            bmp: '\\u0800-\\u083F'\r\n        },\r\n        {\r\n            name: 'InSaurashtra',\r\n            bmp: '\\uA880-\\uA8DF'\r\n        },\r\n        {\r\n            name: 'InSharada',\r\n            astral: '\\uD804[\\uDD80-\\uDDDF]'\r\n        },\r\n        {\r\n            name: 'InShavian',\r\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InShorthand_Format_Controls',\r\n            astral: '\\uD82F[\\uDCA0-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'InSiddham',\r\n            astral: '\\uD805[\\uDD80-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InSinhala',\r\n            bmp: '\\u0D80-\\u0DFF'\r\n        },\r\n        {\r\n            name: 'InSinhala_Archaic_Numbers',\r\n            astral: '\\uD804[\\uDDE0-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InSmall_Form_Variants',\r\n            bmp: '\\uFE50-\\uFE6F'\r\n        },\r\n        {\r\n            name: 'InSora_Sompeng',\r\n            astral: '\\uD804[\\uDCD0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InSpacing_Modifier_Letters',\r\n            bmp: '\\u02B0-\\u02FF'\r\n        },\r\n        {\r\n            name: 'InSpecials',\r\n            bmp: '\\uFFF0-\\uFFFF'\r\n        },\r\n        {\r\n            name: 'InSundanese',\r\n            bmp: '\\u1B80-\\u1BBF'\r\n        },\r\n        {\r\n            name: 'InSundanese_Supplement',\r\n            bmp: '\\u1CC0-\\u1CCF'\r\n        },\r\n        {\r\n            name: 'InSuperscripts_and_Subscripts',\r\n            bmp: '\\u2070-\\u209F'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Arrows_A',\r\n            bmp: '\\u27F0-\\u27FF'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Arrows_B',\r\n            bmp: '\\u2900-\\u297F'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Arrows_C',\r\n            astral: '\\uD83E[\\uDC00-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Mathematical_Operators',\r\n            bmp: '\\u2A00-\\u2AFF'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Punctuation',\r\n            bmp: '\\u2E00-\\u2E7F'\r\n        },\r\n        {\r\n            name: 'InSupplemental_Symbols_and_Pictographs',\r\n            astral: '\\uD83E[\\uDD00-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'InSupplementary_Private_Use_Area_A',\r\n            astral: '[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InSupplementary_Private_Use_Area_B',\r\n            astral: '[\\uDBC0-\\uDBFF][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InSutton_SignWriting',\r\n            astral: '\\uD836[\\uDC00-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'InSyloti_Nagri',\r\n            bmp: '\\uA800-\\uA82F'\r\n        },\r\n        {\r\n            name: 'InSyriac',\r\n            bmp: '\\u0700-\\u074F'\r\n        },\r\n        {\r\n            name: 'InTagalog',\r\n            bmp: '\\u1700-\\u171F'\r\n        },\r\n        {\r\n            name: 'InTagbanwa',\r\n            bmp: '\\u1760-\\u177F'\r\n        },\r\n        {\r\n            name: 'InTags',\r\n            astral: '\\uDB40[\\uDC00-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'InTai_Le',\r\n            bmp: '\\u1950-\\u197F'\r\n        },\r\n        {\r\n            name: 'InTai_Tham',\r\n            bmp: '\\u1A20-\\u1AAF'\r\n        },\r\n        {\r\n            name: 'InTai_Viet',\r\n            bmp: '\\uAA80-\\uAADF'\r\n        },\r\n        {\r\n            name: 'InTai_Xuan_Jing_Symbols',\r\n            astral: '\\uD834[\\uDF00-\\uDF5F]'\r\n        },\r\n        {\r\n            name: 'InTakri',\r\n            astral: '\\uD805[\\uDE80-\\uDECF]'\r\n        },\r\n        {\r\n            name: 'InTamil',\r\n            bmp: '\\u0B80-\\u0BFF'\r\n        },\r\n        {\r\n            name: 'InTangut',\r\n            astral: '[\\uD81C-\\uD821][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'InTangut_Components',\r\n            astral: '\\uD822[\\uDC00-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InTelugu',\r\n            bmp: '\\u0C00-\\u0C7F'\r\n        },\r\n        {\r\n            name: 'InThaana',\r\n            bmp: '\\u0780-\\u07BF'\r\n        },\r\n        {\r\n            name: 'InThai',\r\n            bmp: '\\u0E00-\\u0E7F'\r\n        },\r\n        {\r\n            name: 'InTibetan',\r\n            bmp: '\\u0F00-\\u0FFF'\r\n        },\r\n        {\r\n            name: 'InTifinagh',\r\n            bmp: '\\u2D30-\\u2D7F'\r\n        },\r\n        {\r\n            name: 'InTirhuta',\r\n            astral: '\\uD805[\\uDC80-\\uDCDF]'\r\n        },\r\n        {\r\n            name: 'InTransport_and_Map_Symbols',\r\n            astral: '\\uD83D[\\uDE80-\\uDEFF]'\r\n        },\r\n        {\r\n            name: 'InUgaritic',\r\n            astral: '\\uD800[\\uDF80-\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'InUnified_Canadian_Aboriginal_Syllabics',\r\n            bmp: '\\u1400-\\u167F'\r\n        },\r\n        {\r\n            name: 'InUnified_Canadian_Aboriginal_Syllabics_Extended',\r\n            bmp: '\\u18B0-\\u18FF'\r\n        },\r\n        {\r\n            name: 'InVai',\r\n            bmp: '\\uA500-\\uA63F'\r\n        },\r\n        {\r\n            name: 'InVariation_Selectors',\r\n            bmp: '\\uFE00-\\uFE0F'\r\n        },\r\n        {\r\n            name: 'InVariation_Selectors_Supplement',\r\n            astral: '\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'InVedic_Extensions',\r\n            bmp: '\\u1CD0-\\u1CFF'\r\n        },\r\n        {\r\n            name: 'InVertical_Forms',\r\n            bmp: '\\uFE10-\\uFE1F'\r\n        },\r\n        {\r\n            name: 'InWarang_Citi',\r\n            astral: '\\uD806[\\uDCA0-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'InYi_Radicals',\r\n            bmp: '\\uA490-\\uA4CF'\r\n        },\r\n        {\r\n            name: 'InYi_Syllables',\r\n            bmp: '\\uA000-\\uA48F'\r\n        },\r\n        {\r\n            name: 'InYijing_Hexagram_Symbols',\r\n            bmp: '\\u4DC0-\\u4DFF'\r\n        }\r\n    ]);\r\n\r\n};\r\n\n},{}],5:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Categories 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2010-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for Unicode's general categories. E.g., `\\p{Lu}` or `\\p{Uppercase Letter}`. See\r\n     * category descriptions in UAX #44 <http://unicode.org/reports/tr44/#GC_Values_Table>. Token\r\n     * names are case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Categories');\r\n    }\r\n\r\n    XRegExp.addUnicodeData([\r\n        {\r\n            name: 'C',\r\n            alias: 'Other',\r\n            isBmpLast: true,\r\n            bmp: '\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5\\u08BE-\\u08D3\\u08E2\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180E\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E45-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF',\r\n            astral: '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCBD\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5A\\uDC5C\\uDC5E-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFDF\\uDFE1-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA0-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDD73-\\uDD7A\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4B-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDDAD-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD83D[\\uDED3-\\uDEDF\\uDEED-\\uDEEF\\uDEF7-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD1F\\uDD28-\\uDD2F\\uDD31\\uDD32\\uDD3F\\uDD4C-\\uDD4F\\uDD5F-\\uDD7F\\uDD92-\\uDDBF\\uDDC1-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Cc',\r\n            alias: 'Control',\r\n            bmp: '\\0-\\x1F\\x7F-\\x9F'\r\n        },\r\n        {\r\n            name: 'Cf',\r\n            alias: 'Format',\r\n            bmp: '\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB',\r\n            astral: '\\uD804\\uDCBD|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Cn',\r\n            alias: 'Unassigned',\r\n            bmp: '\\u0378\\u0379\\u0380-\\u0383\\u038B\\u038D\\u03A2\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B\\u058C\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u05FF\\u061D\\u070E\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08B5\\u08BE-\\u08D3\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0AF8\\u0AFA-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0BFF\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D00\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D50-\\u0D53\\u0D64\\u0D65\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F6\\u13F7\\u13FE\\u13FF\\u169D-\\u169F\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C89-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7\\u1CFA-\\u1CFF\\u1DF6-\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u2065\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BF-\\u20CF\\u20F1-\\u20FF\\u218C-\\u218F\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2B74\\u2B75\\u2B96\\u2B97\\u2BBA-\\u2BBC\\u2BC9\\u2BD2-\\u2BEB\\u2BF0-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E45-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FD6-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA6F8-\\uA6FF\\uA7AF\\uA7B8-\\uA7F6\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C6-\\uA8CD\\uA8DA-\\uA8DF\\uA8FE\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB66-\\uAB6F\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD\\uFEFE\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFF8\\uFFFE\\uFFFF',\r\n            astral: '\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDCFF\\uDD03-\\uDD06\\uDD34-\\uDD36\\uDD8F\\uDD9C-\\uDD9F\\uDDA1-\\uDDCF\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEFC-\\uDEFF\\uDF24-\\uDF2F\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDFC4-\\uDFC7\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6E\\uDD70-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1E\\uDD3A-\\uDD3E\\uDD40-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE34-\\uDE37\\uDE3B-\\uDE3E\\uDE48-\\uDE4F\\uDE59-\\uDE5F\\uDEA0-\\uDEBF\\uDEE7-\\uDEEA\\uDEF7-\\uDEFF\\uDF36-\\uDF38\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDF98\\uDF9D-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD00-\\uDE5F\\uDE7F-\\uDFFF]|\\uD804[\\uDC4E-\\uDC51\\uDC70-\\uDC7E\\uDCC2-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD44-\\uDD4F\\uDD77-\\uDD7F\\uDDCE\\uDDCF\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEAA-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF3B\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC5A\\uDC5C\\uDC5E-\\uDC7F\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDDE-\\uDDFF\\uDE45-\\uDE4F\\uDE5A-\\uDE5F\\uDE6D-\\uDE7F\\uDEB8-\\uDEBF\\uDECA-\\uDEFF\\uDF1A-\\uDF1C\\uDF2C-\\uDF2F\\uDF40-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCF3-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC46-\\uDC4F\\uDC6D-\\uDC6F\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F\\uDC75-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83F\\uD874-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDB7F][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6D\\uDE70-\\uDECF\\uDEEE\\uDEEF\\uDEF6-\\uDEFF\\uDF46-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF7F-\\uDF8E\\uDFA0-\\uDFDF\\uDFE1-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A\\uDC9B\\uDCA4-\\uDFFF]|\\uD834[\\uDCF6-\\uDCFF\\uDD27\\uDD28\\uDDE9-\\uDDFF\\uDE46-\\uDEFF\\uDF57-\\uDF5F\\uDF72-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]|\\uD836[\\uDE8C-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD7-\\uDCFF\\uDD4B-\\uDD4F\\uDD5A-\\uDD5D\\uDD60-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDEEF\\uDEF2-\\uDFFF]|\\uD83C[\\uDC2C-\\uDC2F\\uDC94-\\uDC9F\\uDCAF\\uDCB0\\uDCC0\\uDCD0\\uDCF6-\\uDCFF\\uDD0D-\\uDD0F\\uDD2F\\uDD6C-\\uDD6F\\uDDAD-\\uDDE5\\uDE03-\\uDE0F\\uDE3C-\\uDE3F\\uDE49-\\uDE4F\\uDE52-\\uDEFF]|\\uD83D[\\uDED3-\\uDEDF\\uDEED-\\uDEEF\\uDEF7-\\uDEFF\\uDF74-\\uDF7F\\uDFD5-\\uDFFF]|\\uD83E[\\uDC0C-\\uDC0F\\uDC48-\\uDC4F\\uDC5A-\\uDC5F\\uDC88-\\uDC8F\\uDCAE-\\uDD0F\\uDD1F\\uDD28-\\uDD2F\\uDD31\\uDD32\\uDD3F\\uDD4C-\\uDD4F\\uDD5F-\\uDD7F\\uDD92-\\uDDBF\\uDDC1-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00\\uDC02-\\uDC1F\\uDC80-\\uDCFF\\uDDF0-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Co',\r\n            alias: 'Private_Use',\r\n            bmp: '\\uE000-\\uF8FF',\r\n            astral: '[\\uDB80-\\uDBBE\\uDBC0-\\uDBFE][\\uDC00-\\uDFFF]|[\\uDBBF\\uDBFF][\\uDC00-\\uDFFD]'\r\n        },\r\n        {\r\n            name: 'Cs',\r\n            alias: 'Surrogate',\r\n            bmp: '\\uD800-\\uDFFF'\r\n        },\r\n        {\r\n            name: 'L',\r\n            alias: 'Letter',\r\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Ll',\r\n            alias: 'Lowercase_Letter',\r\n            bmp: 'a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\r\n            astral: '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Lm',\r\n            alias: 'Modifier_Letter',\r\n            bmp: '\\u02B0-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0374\\u037A\\u0559\\u0640\\u06E5\\u06E6\\u07F4\\u07F5\\u07FA\\u081A\\u0824\\u0828\\u0971\\u0E46\\u0EC6\\u10FC\\u17D7\\u1843\\u1AA7\\u1C78-\\u1C7D\\u1D2C-\\u1D6A\\u1D78\\u1D9B-\\u1DBF\\u2071\\u207F\\u2090-\\u209C\\u2C7C\\u2C7D\\u2D6F\\u2E2F\\u3005\\u3031-\\u3035\\u303B\\u309D\\u309E\\u30FC-\\u30FE\\uA015\\uA4F8-\\uA4FD\\uA60C\\uA67F\\uA69C\\uA69D\\uA717-\\uA71F\\uA770\\uA788\\uA7F8\\uA7F9\\uA9CF\\uA9E6\\uAA70\\uAADD\\uAAF3\\uAAF4\\uAB5C-\\uAB5F\\uFF70\\uFF9E\\uFF9F',\r\n            astral: '\\uD81A[\\uDF40-\\uDF43]|\\uD81B[\\uDF93-\\uDF9F\\uDFE0]'\r\n        },\r\n        {\r\n            name: 'Lo',\r\n            alias: 'Other_Letter',\r\n            bmp: '\\xAA\\xBA\\u01BB\\u01C0-\\u01C3\\u0294\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u0800-\\u0815\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0972-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E45\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10D0-\\u10FA\\u10FD-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17DC\\u1820-\\u1842\\u1844-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C77\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u2135-\\u2138\\u2D30-\\u2D67\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3006\\u303C\\u3041-\\u3096\\u309F\\u30A1-\\u30FA\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA014\\uA016-\\uA48C\\uA4D0-\\uA4F7\\uA500-\\uA60B\\uA610-\\uA61F\\uA62A\\uA62B\\uA66E\\uA6A0-\\uA6E5\\uA78F\\uA7F7\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9E0-\\uA9E4\\uA9E7-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA6F\\uAA71-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB\\uAADC\\uAAE0-\\uAAEA\\uAAF2\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF66-\\uFF6F\\uFF71-\\uFF9D\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC50-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Lt',\r\n            alias: 'Titlecase_Letter',\r\n            bmp: '\\u01C5\\u01C8\\u01CB\\u01F2\\u1F88-\\u1F8F\\u1F98-\\u1F9F\\u1FA8-\\u1FAF\\u1FBC\\u1FCC\\u1FFC'\r\n        },\r\n        {\r\n            name: 'Lu',\r\n            alias: 'Uppercase_Letter',\r\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\r\n            astral: '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]'\r\n        },\r\n        {\r\n            name: 'M',\r\n            alias: 'Mark',\r\n            bmp: '\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\r\n            astral: '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDDCA-\\uDDCC\\uDE2C-\\uDE37\\uDE3E\\uDEDF-\\uDEEA\\uDF00-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC35-\\uDC46\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDDDC\\uDDDD\\uDE30-\\uDE40\\uDEAB-\\uDEB7\\uDF1D-\\uDF2B]|\\uD807[\\uDC2F-\\uDC36\\uDC38-\\uDC3F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'Mc',\r\n            alias: 'Spacing_Mark',\r\n            bmp: '\\u0903\\u093B\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u094F\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1A19\\u1A1A\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\u1CF3\\u302E\\u302F\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uAA7D\\uAAEB\\uAAEE\\uAAEF\\uAAF5\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC',\r\n            astral: '\\uD804[\\uDC00\\uDC02\\uDC82\\uDCB0-\\uDCB2\\uDCB7\\uDCB8\\uDD2C\\uDD82\\uDDB3-\\uDDB5\\uDDBF\\uDDC0\\uDE2C-\\uDE2E\\uDE32\\uDE33\\uDE35\\uDEE0-\\uDEE2\\uDF02\\uDF03\\uDF3E\\uDF3F\\uDF41-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63]|\\uD805[\\uDC35-\\uDC37\\uDC40\\uDC41\\uDC45\\uDCB0-\\uDCB2\\uDCB9\\uDCBB-\\uDCBE\\uDCC1\\uDDAF-\\uDDB1\\uDDB8-\\uDDBB\\uDDBE\\uDE30-\\uDE32\\uDE3B\\uDE3C\\uDE3E\\uDEAC\\uDEAE\\uDEAF\\uDEB6\\uDF20\\uDF21\\uDF26]|\\uD807[\\uDC2F\\uDC3E\\uDCA9\\uDCB1\\uDCB4]|\\uD81B[\\uDF51-\\uDF7E]|\\uD834[\\uDD65\\uDD66\\uDD6D-\\uDD72]'\r\n        },\r\n        {\r\n            name: 'Me',\r\n            alias: 'Enclosing_Mark',\r\n            bmp: '\\u0488\\u0489\\u1ABE\\u20DD-\\u20E0\\u20E2-\\u20E4\\uA670-\\uA672'\r\n        },\r\n        {\r\n            name: 'Mn',\r\n            alias: 'Nonspacing_Mark',\r\n            bmp: '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D01\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABD\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F',\r\n            astral: '\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC01\\uDC38-\\uDC46\\uDC7F-\\uDC81\\uDCB3-\\uDCB6\\uDCB9\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD2B\\uDD2D-\\uDD34\\uDD73\\uDD80\\uDD81\\uDDB6-\\uDDBE\\uDDCA-\\uDDCC\\uDE2F-\\uDE31\\uDE34\\uDE36\\uDE37\\uDE3E\\uDEDF\\uDEE3-\\uDEEA\\uDF00\\uDF01\\uDF3C\\uDF40\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC38-\\uDC3F\\uDC42-\\uDC44\\uDC46\\uDCB3-\\uDCB8\\uDCBA\\uDCBF\\uDCC0\\uDCC2\\uDCC3\\uDDB2-\\uDDB5\\uDDBC\\uDDBD\\uDDBF\\uDDC0\\uDDDC\\uDDDD\\uDE33-\\uDE3A\\uDE3D\\uDE3F\\uDE40\\uDEAB\\uDEAD\\uDEB0-\\uDEB5\\uDEB7\\uDF1D-\\uDF1F\\uDF22-\\uDF25\\uDF27-\\uDF2B]|\\uD807[\\uDC30-\\uDC36\\uDC38-\\uDC3D\\uDC3F\\uDC92-\\uDCA7\\uDCAA-\\uDCB0\\uDCB2\\uDCB3\\uDCB5\\uDCB6]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDCD0-\\uDCD6\\uDD44-\\uDD4A]|\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'N',\r\n            alias: 'Number',\r\n            bmp: '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\r\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD801[\\uDCA0-\\uDCA9]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD804[\\uDC52-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDDE1-\\uDDF4\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF3B]|\\uD806[\\uDCE0-\\uDCF2]|\\uD807[\\uDC50-\\uDC6C]|\\uD809[\\uDC00-\\uDC6E]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDCC7-\\uDCCF\\uDD50-\\uDD59]|\\uD83C[\\uDD00-\\uDD0C]'\r\n        },\r\n        {\r\n            name: 'Nd',\r\n            alias: 'Decimal_Number',\r\n            bmp: '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19',\r\n            astral: '\\uD801[\\uDCA0-\\uDCA9]|\\uD804[\\uDC66-\\uDC6F\\uDCF0-\\uDCF9\\uDD36-\\uDD3F\\uDDD0-\\uDDD9\\uDEF0-\\uDEF9]|\\uD805[\\uDC50-\\uDC59\\uDCD0-\\uDCD9\\uDE50-\\uDE59\\uDEC0-\\uDEC9\\uDF30-\\uDF39]|\\uD806[\\uDCE0-\\uDCE9]|\\uD807[\\uDC50-\\uDC59]|\\uD81A[\\uDE60-\\uDE69\\uDF50-\\uDF59]|\\uD835[\\uDFCE-\\uDFFF]|\\uD83A[\\uDD50-\\uDD59]'\r\n        },\r\n        {\r\n            name: 'Nl',\r\n            alias: 'Letter_Number',\r\n            bmp: '\\u16EE-\\u16F0\\u2160-\\u2182\\u2185-\\u2188\\u3007\\u3021-\\u3029\\u3038-\\u303A\\uA6E6-\\uA6EF',\r\n            astral: '\\uD800[\\uDD40-\\uDD74\\uDF41\\uDF4A\\uDFD1-\\uDFD5]|\\uD809[\\uDC00-\\uDC6E]'\r\n        },\r\n        {\r\n            name: 'No',\r\n            alias: 'Other_Number',\r\n            bmp: '\\xB2\\xB3\\xB9\\xBC-\\xBE\\u09F4-\\u09F9\\u0B72-\\u0B77\\u0BF0-\\u0BF2\\u0C78-\\u0C7E\\u0D58-\\u0D5E\\u0D70-\\u0D78\\u0F2A-\\u0F33\\u1369-\\u137C\\u17F0-\\u17F9\\u19DA\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u215F\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA830-\\uA835',\r\n            astral: '\\uD800[\\uDD07-\\uDD33\\uDD75-\\uDD78\\uDD8A\\uDD8B\\uDEE1-\\uDEFB\\uDF20-\\uDF23]|\\uD802[\\uDC58-\\uDC5F\\uDC79-\\uDC7F\\uDCA7-\\uDCAF\\uDCFB-\\uDCFF\\uDD16-\\uDD1B\\uDDBC\\uDDBD\\uDDC0-\\uDDCF\\uDDD2-\\uDDFF\\uDE40-\\uDE47\\uDE7D\\uDE7E\\uDE9D-\\uDE9F\\uDEEB-\\uDEEF\\uDF58-\\uDF5F\\uDF78-\\uDF7F\\uDFA9-\\uDFAF]|\\uD803[\\uDCFA-\\uDCFF\\uDE60-\\uDE7E]|\\uD804[\\uDC52-\\uDC65\\uDDE1-\\uDDF4]|\\uD805[\\uDF3A\\uDF3B]|\\uD806[\\uDCEA-\\uDCF2]|\\uD807[\\uDC5A-\\uDC6C]|\\uD81A[\\uDF5B-\\uDF61]|\\uD834[\\uDF60-\\uDF71]|\\uD83A[\\uDCC7-\\uDCCF]|\\uD83C[\\uDD00-\\uDD0C]'\r\n        },\r\n        {\r\n            name: 'P',\r\n            alias: 'Punctuation',\r\n            bmp: '\\x21-\\x23\\x25-\\\\x2A\\x2C-\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5B-\\\\x5D\\x5F\\\\x7B\\x7D\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E44\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65',\r\n            astral: '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'Pc',\r\n            alias: 'Connector_Punctuation',\r\n            bmp: '\\x5F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F'\r\n        },\r\n        {\r\n            name: 'Pd',\r\n            alias: 'Dash_Punctuation',\r\n            bmp: '\\\\x2D\\u058A\\u05BE\\u1400\\u1806\\u2010-\\u2015\\u2E17\\u2E1A\\u2E3A\\u2E3B\\u2E40\\u301C\\u3030\\u30A0\\uFE31\\uFE32\\uFE58\\uFE63\\uFF0D'\r\n        },\r\n        {\r\n            name: 'Pe',\r\n            alias: 'Close_Punctuation',\r\n            bmp: '\\\\x29\\\\x5D\\x7D\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\u301E\\u301F\\uFD3E\\uFE18\\uFE36\\uFE38\\uFE3A\\uFE3C\\uFE3E\\uFE40\\uFE42\\uFE44\\uFE48\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63'\r\n        },\r\n        {\r\n            name: 'Pf',\r\n            alias: 'Final_Punctuation',\r\n            bmp: '\\xBB\\u2019\\u201D\\u203A\\u2E03\\u2E05\\u2E0A\\u2E0D\\u2E1D\\u2E21'\r\n        },\r\n        {\r\n            name: 'Pi',\r\n            alias: 'Initial_Punctuation',\r\n            bmp: '\\xAB\\u2018\\u201B\\u201C\\u201F\\u2039\\u2E02\\u2E04\\u2E09\\u2E0C\\u2E1C\\u2E20'\r\n        },\r\n        {\r\n            name: 'Po',\r\n            alias: 'Other_Punctuation',\r\n            bmp: '\\x21-\\x23\\x25-\\x27\\\\x2A\\x2C\\\\x2E\\x2F\\x3A\\x3B\\\\x3F\\x40\\\\x5C\\xA1\\xA7\\xB6\\xB7\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u166D\\u166E\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u1805\\u1807-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203B-\\u203E\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205E\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00\\u2E01\\u2E06-\\u2E08\\u2E0B\\u2E0E-\\u2E16\\u2E18\\u2E19\\u2E1B\\u2E1E\\u2E1F\\u2E2A-\\u2E2E\\u2E30-\\u2E39\\u2E3C-\\u2E3F\\u2E41\\u2E43\\u2E44\\u3001-\\u3003\\u303D\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFE10-\\uFE16\\uFE19\\uFE30\\uFE45\\uFE46\\uFE49-\\uFE4C\\uFE50-\\uFE52\\uFE54-\\uFE57\\uFE5F-\\uFE61\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF07\\uFF0A\\uFF0C\\uFF0E\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3C\\uFF61\\uFF64\\uFF65',\r\n            astral: '\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'Ps',\r\n            alias: 'Open_Punctuation',\r\n            bmp: '\\\\x28\\\\x5B\\\\x7B\\u0F3A\\u0F3C\\u169B\\u201A\\u201E\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E42\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\u301D\\uFD3F\\uFE17\\uFE35\\uFE37\\uFE39\\uFE3B\\uFE3D\\uFE3F\\uFE41\\uFE43\\uFE47\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62'\r\n        },\r\n        {\r\n            name: 'S',\r\n            alias: 'Symbol',\r\n            bmp: '\\\\x24\\\\x2B\\x3C-\\x3E\\\\x5E\\x60\\\\x7C\\x7E\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BE\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u23FE\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD',\r\n            astral: '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD83B[\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED2\\uDEE0-\\uDEEC\\uDEF0-\\uDEF6\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD1E\\uDD20-\\uDD27\\uDD30\\uDD33-\\uDD3E\\uDD40-\\uDD4B\\uDD50-\\uDD5E\\uDD80-\\uDD91\\uDDC0]'\r\n        },\r\n        {\r\n            name: 'Sc',\r\n            alias: 'Currency_Symbol',\r\n            bmp: '\\\\x24\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BE\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\r\n        },\r\n        {\r\n            name: 'Sk',\r\n            alias: 'Modifier_Symbol',\r\n            bmp: '\\\\x5E\\x60\\xA8\\xAF\\xB4\\xB8\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u309B\\u309C\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uAB5B\\uFBB2-\\uFBC1\\uFF3E\\uFF40\\uFFE3',\r\n            astral: '\\uD83C[\\uDFFB-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Sm',\r\n            alias: 'Math_Symbol',\r\n            bmp: '\\\\x2B\\x3C-\\x3E\\\\x7C\\x7E\\xAC\\xB1\\xD7\\xF7\\u03F6\\u0606-\\u0608\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u2118\\u2140-\\u2144\\u214B\\u2190-\\u2194\\u219A\\u219B\\u21A0\\u21A3\\u21A6\\u21AE\\u21CE\\u21CF\\u21D2\\u21D4\\u21F4-\\u22FF\\u2320\\u2321\\u237C\\u239B-\\u23B3\\u23DC-\\u23E1\\u25B7\\u25C1\\u25F8-\\u25FF\\u266F\\u27C0-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u27FF\\u2900-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2AFF\\u2B30-\\u2B44\\u2B47-\\u2B4C\\uFB29\\uFE62\\uFE64-\\uFE66\\uFF0B\\uFF1C-\\uFF1E\\uFF5C\\uFF5E\\uFFE2\\uFFE9-\\uFFEC',\r\n            astral: '\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD83B[\\uDEF0\\uDEF1]'\r\n        },\r\n        {\r\n            name: 'So',\r\n            alias: 'Other_Symbol',\r\n            bmp: '\\xA6\\xA9\\xAE\\xB0\\u0482\\u058D\\u058E\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u09FA\\u0B70\\u0BF3-\\u0BF8\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116\\u2117\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u214A\\u214C\\u214D\\u214F\\u218A\\u218B\\u2195-\\u2199\\u219C-\\u219F\\u21A1\\u21A2\\u21A4\\u21A5\\u21A7-\\u21AD\\u21AF-\\u21CD\\u21D0\\u21D1\\u21D3\\u21D5-\\u21F3\\u2300-\\u2307\\u230C-\\u231F\\u2322-\\u2328\\u232B-\\u237B\\u237D-\\u239A\\u23B4-\\u23DB\\u23E2-\\u23FE\\u2400-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u25B6\\u25B8-\\u25C0\\u25C2-\\u25F7\\u2600-\\u266E\\u2670-\\u2767\\u2794-\\u27BF\\u2800-\\u28FF\\u2B00-\\u2B2F\\u2B45\\u2B46\\u2B4D-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u32FE\\u3300-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA828-\\uA82B\\uA836\\uA837\\uA839\\uAA77-\\uAA79\\uFDFD\\uFFE4\\uFFE8\\uFFED\\uFFEE\\uFFFC\\uFFFD',\r\n            astral: '\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFA]|\\uD83D[\\uDC00-\\uDED2\\uDEE0-\\uDEEC\\uDEF0-\\uDEF6\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD1E\\uDD20-\\uDD27\\uDD30\\uDD33-\\uDD3E\\uDD40-\\uDD4B\\uDD50-\\uDD5E\\uDD80-\\uDD91\\uDDC0]'\r\n        },\r\n        {\r\n            name: 'Z',\r\n            alias: 'Separator',\r\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\r\n        },\r\n        {\r\n            name: 'Zl',\r\n            alias: 'Line_Separator',\r\n            bmp: '\\u2028'\r\n        },\r\n        {\r\n            name: 'Zp',\r\n            alias: 'Paragraph_Separator',\r\n            bmp: '\\u2029'\r\n        },\r\n        {\r\n            name: 'Zs',\r\n            alias: 'Space_Separator',\r\n            bmp: '\\x20\\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000'\r\n        }\r\n    ]);\r\n\r\n};\r\n\n},{}],6:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Properties 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2012-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\r\n     * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\r\n     * UAX #44 <http://unicode.org/reports/tr44/>:\r\n     *\r\n     * - Alphabetic\r\n     *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\r\n     *   Lo + Nl + Other_Alphabetic.\r\n     *\r\n     * - Default_Ignorable_Code_Point\r\n     *   For programmatic determination of default ignorable code points. New characters that should\r\n     *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\r\n     *   permitting programs to correctly handle the default rendering of such characters when not\r\n     *   otherwise supported.\r\n     *\r\n     * - Lowercase\r\n     *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\r\n     *\r\n     * - Noncharacter_Code_Point\r\n     *   Code points permanently reserved for internal use.\r\n     *\r\n     * - Uppercase\r\n     *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\r\n     *\r\n     * - White_Space\r\n     *   Spaces, separator characters and other control characters which should be treated by\r\n     *   programming languages as \"white space\" for the purpose of parsing elements.\r\n     *\r\n     * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\r\n     * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\r\n     * included in XRegExp's Unicode Categories and Unicode Scripts addons.\r\n     *\r\n     * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\r\n    }\r\n\r\n    var unicodeData = [\r\n        {\r\n            name: 'ASCII',\r\n            bmp: '\\0-\\x7F'\r\n        },\r\n        {\r\n            name: 'Alphabetic',\r\n            bmp: 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08DF\\u08E3-\\u08E9\\u08F0-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09F0\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1DE7-\\u1DF4\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8C5\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC45\\uDC82-\\uDCB8\\uDCD0-\\uDCE8\\uDD00-\\uDD32\\uDD50-\\uDD72\\uDD76\\uDD80-\\uDDBF\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE34\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEE8\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D-\\uDF44\\uDF47\\uDF48\\uDF4B\\uDF4C\\uDF50\\uDF57\\uDF5D-\\uDF63]|\\uD805[\\uDC00-\\uDC41\\uDC43-\\uDC45\\uDC47-\\uDC4A\\uDC80-\\uDCC1\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDB5\\uDDB8-\\uDDBE\\uDDD8-\\uDDDD\\uDE00-\\uDE3E\\uDE40\\uDE44\\uDE80-\\uDEB5\\uDF00-\\uDF19\\uDF1D-\\uDF2A]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC3E\\uDC40\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9E]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD47]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Any',\r\n            isBmpLast: true,\r\n            bmp: '\\0-\\uFFFF',\r\n            astral: '[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Default_Ignorable_Code_Point',\r\n            bmp: '\\xAD\\u034F\\u061C\\u115F\\u1160\\u17B4\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8',\r\n            astral: '\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|[\\uDB40-\\uDB43][\\uDC00-\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Lowercase',\r\n            bmp: 'a-z\\xAA\\xB5\\xBA\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02B8\\u02C0\\u02C1\\u02E0-\\u02E4\\u0345\\u0371\\u0373\\u0377\\u037A-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1C80-\\u1C88\\u1D00-\\u1DBF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u2071\\u207F\\u2090-\\u209C\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2170-\\u217F\\u2184\\u24D0-\\u24E9\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA69D\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7F8-\\uA7FA\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A',\r\n            astral: '\\uD801[\\uDC28-\\uDC4F\\uDCD8-\\uDCFB]|\\uD803[\\uDCC0-\\uDCF2]|\\uD806[\\uDCC0-\\uDCDF]|\\uD835[\\uDC1A-\\uDC33\\uDC4E-\\uDC54\\uDC56-\\uDC67\\uDC82-\\uDC9B\\uDCB6-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDCEA-\\uDD03\\uDD1E-\\uDD37\\uDD52-\\uDD6B\\uDD86-\\uDD9F\\uDDBA-\\uDDD3\\uDDEE-\\uDE07\\uDE22-\\uDE3B\\uDE56-\\uDE6F\\uDE8A-\\uDEA5\\uDEC2-\\uDEDA\\uDEDC-\\uDEE1\\uDEFC-\\uDF14\\uDF16-\\uDF1B\\uDF36-\\uDF4E\\uDF50-\\uDF55\\uDF70-\\uDF88\\uDF8A-\\uDF8F\\uDFAA-\\uDFC2\\uDFC4-\\uDFC9\\uDFCB]|\\uD83A[\\uDD22-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Noncharacter_Code_Point',\r\n            bmp: '\\uFDD0-\\uFDEF\\uFFFE\\uFFFF',\r\n            astral: '[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]'\r\n        },\r\n        {\r\n            name: 'Uppercase',\r\n            bmp: 'A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AE\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A',\r\n            astral: '\\uD801[\\uDC00-\\uDC27\\uDCB0-\\uDCD3]|\\uD803[\\uDC80-\\uDCB2]|\\uD806[\\uDCA0-\\uDCBF]|\\uD835[\\uDC00-\\uDC19\\uDC34-\\uDC4D\\uDC68-\\uDC81\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB5\\uDCD0-\\uDCE9\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD38\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD6C-\\uDD85\\uDDA0-\\uDDB9\\uDDD4-\\uDDED\\uDE08-\\uDE21\\uDE3C-\\uDE55\\uDE70-\\uDE89\\uDEA8-\\uDEC0\\uDEE2-\\uDEFA\\uDF1C-\\uDF34\\uDF56-\\uDF6E\\uDF90-\\uDFA8\\uDFCA]|\\uD83A[\\uDD00-\\uDD21]|\\uD83C[\\uDD30-\\uDD49\\uDD50-\\uDD69\\uDD70-\\uDD89]'\r\n        },\r\n        {\r\n            name: 'White_Space',\r\n            bmp: '\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\r\n        }\r\n    ];\r\n\r\n    // Add non-generated data\r\n    unicodeData.push({\r\n        name: 'Assigned',\r\n        // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\r\n        // Categories addon is required to use this property\r\n        inverseOf: 'Cn'\r\n    });\r\n\r\n    XRegExp.addUnicodeData(unicodeData);\r\n\r\n};\r\n\n},{}],7:[function(require,module,exports){\n/*!\r\n * XRegExp Unicode Scripts 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2010-2017 MIT License\r\n * Unicode data by Mathias Bynens <mathiasbynens.be>\r\n */\r\n\r\nmodule.exports = function(XRegExp) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Adds support for all Unicode scripts. E.g., `\\p{Latin}`. Token names are case insensitive,\r\n     * and any spaces, hyphens, and underscores are ignored.\r\n     *\r\n     * Uses Unicode 9.0.0.\r\n     *\r\n     * @requires XRegExp, Unicode Base\r\n     */\r\n\r\n    if (!XRegExp.addUnicodeData) {\r\n        throw new ReferenceError('Unicode Base must be loaded before Unicode Scripts');\r\n    }\r\n\r\n    XRegExp.addUnicodeData([\r\n        {\r\n            name: 'Adlam',\r\n            astral: '\\uD83A[\\uDD00-\\uDD4A\\uDD50-\\uDD59\\uDD5E\\uDD5F]'\r\n        },\r\n        {\r\n            name: 'Ahom',\r\n            astral: '\\uD805[\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'Anatolian_Hieroglyphs',\r\n            astral: '\\uD811[\\uDC00-\\uDE46]'\r\n        },\r\n        {\r\n            name: 'Arabic',\r\n            bmp: '\\u0600-\\u0604\\u0606-\\u060B\\u060D-\\u061A\\u061E\\u0620-\\u063F\\u0641-\\u064A\\u0656-\\u066F\\u0671-\\u06DC\\u06DE-\\u06FF\\u0750-\\u077F\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u08FF\\uFB50-\\uFBC1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFD\\uFE70-\\uFE74\\uFE76-\\uFEFC',\r\n            astral: '\\uD803[\\uDE60-\\uDE7E]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB\\uDEF0\\uDEF1]'\r\n        },\r\n        {\r\n            name: 'Armenian',\r\n            bmp: '\\u0531-\\u0556\\u0559-\\u055F\\u0561-\\u0587\\u058A\\u058D-\\u058F\\uFB13-\\uFB17'\r\n        },\r\n        {\r\n            name: 'Avestan',\r\n            astral: '\\uD802[\\uDF00-\\uDF35\\uDF39-\\uDF3F]'\r\n        },\r\n        {\r\n            name: 'Balinese',\r\n            bmp: '\\u1B00-\\u1B4B\\u1B50-\\u1B7C'\r\n        },\r\n        {\r\n            name: 'Bamum',\r\n            bmp: '\\uA6A0-\\uA6F7',\r\n            astral: '\\uD81A[\\uDC00-\\uDE38]'\r\n        },\r\n        {\r\n            name: 'Bassa_Vah',\r\n            astral: '\\uD81A[\\uDED0-\\uDEED\\uDEF0-\\uDEF5]'\r\n        },\r\n        {\r\n            name: 'Batak',\r\n            bmp: '\\u1BC0-\\u1BF3\\u1BFC-\\u1BFF'\r\n        },\r\n        {\r\n            name: 'Bengali',\r\n            bmp: '\\u0980-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FB'\r\n        },\r\n        {\r\n            name: 'Bhaiksuki',\r\n            astral: '\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC45\\uDC50-\\uDC6C]'\r\n        },\r\n        {\r\n            name: 'Bopomofo',\r\n            bmp: '\\u02EA\\u02EB\\u3105-\\u312D\\u31A0-\\u31BA'\r\n        },\r\n        {\r\n            name: 'Brahmi',\r\n            astral: '\\uD804[\\uDC00-\\uDC4D\\uDC52-\\uDC6F\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Braille',\r\n            bmp: '\\u2800-\\u28FF'\r\n        },\r\n        {\r\n            name: 'Buginese',\r\n            bmp: '\\u1A00-\\u1A1B\\u1A1E\\u1A1F'\r\n        },\r\n        {\r\n            name: 'Buhid',\r\n            bmp: '\\u1740-\\u1753'\r\n        },\r\n        {\r\n            name: 'Canadian_Aboriginal',\r\n            bmp: '\\u1400-\\u167F\\u18B0-\\u18F5'\r\n        },\r\n        {\r\n            name: 'Carian',\r\n            astral: '\\uD800[\\uDEA0-\\uDED0]'\r\n        },\r\n        {\r\n            name: 'Caucasian_Albanian',\r\n            astral: '\\uD801[\\uDD30-\\uDD63\\uDD6F]'\r\n        },\r\n        {\r\n            name: 'Chakma',\r\n            astral: '\\uD804[\\uDD00-\\uDD34\\uDD36-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Cham',\r\n            bmp: '\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA5F'\r\n        },\r\n        {\r\n            name: 'Cherokee',\r\n            bmp: '\\u13A0-\\u13F5\\u13F8-\\u13FD\\uAB70-\\uABBF'\r\n        },\r\n        {\r\n            name: 'Common',\r\n            bmp: '\\0-\\x40\\\\x5B-\\x60\\\\x7B-\\xA9\\xAB-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9-\\u02DF\\u02E5-\\u02E9\\u02EC-\\u02FF\\u0374\\u037E\\u0385\\u0387\\u0589\\u0605\\u060C\\u061B\\u061C\\u061F\\u0640\\u06DD\\u08E2\\u0964\\u0965\\u0E3F\\u0FD5-\\u0FD8\\u10FB\\u16EB-\\u16ED\\u1735\\u1736\\u1802\\u1803\\u1805\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u2000-\\u200B\\u200E-\\u2064\\u2066-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20BE\\u2100-\\u2125\\u2127-\\u2129\\u212C-\\u2131\\u2133-\\u214D\\u214F-\\u215F\\u2189-\\u218B\\u2190-\\u23FE\\u2400-\\u2426\\u2440-\\u244A\\u2460-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BB9\\u2BBD-\\u2BC8\\u2BCA-\\u2BD1\\u2BEC-\\u2BEF\\u2E00-\\u2E44\\u2FF0-\\u2FFB\\u3000-\\u3004\\u3006\\u3008-\\u3020\\u3030-\\u3037\\u303C-\\u303F\\u309B\\u309C\\u30A0\\u30FB\\u30FC\\u3190-\\u319F\\u31C0-\\u31E3\\u3220-\\u325F\\u327F-\\u32CF\\u3358-\\u33FF\\u4DC0-\\u4DFF\\uA700-\\uA721\\uA788-\\uA78A\\uA830-\\uA839\\uA92E\\uA9CF\\uAB5B\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFF70\\uFF9E\\uFF9F\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD',\r\n            astral: '\\uD800[\\uDD00-\\uDD02\\uDD07-\\uDD33\\uDD37-\\uDD3F\\uDD90-\\uDD9B\\uDDD0-\\uDDFC\\uDEE1-\\uDEFB]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD66\\uDD6A-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDF00-\\uDF56\\uDF60-\\uDF71]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD00-\\uDD0C\\uDD10-\\uDD2E\\uDD30-\\uDD6B\\uDD70-\\uDDAC\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED2\\uDEE0-\\uDEEC\\uDEF0-\\uDEF6\\uDF00-\\uDF73\\uDF80-\\uDFD4]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD10-\\uDD1E\\uDD20-\\uDD27\\uDD30\\uDD33-\\uDD3E\\uDD40-\\uDD4B\\uDD50-\\uDD5E\\uDD80-\\uDD91\\uDDC0]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Coptic',\r\n            bmp: '\\u03E2-\\u03EF\\u2C80-\\u2CF3\\u2CF9-\\u2CFF'\r\n        },\r\n        {\r\n            name: 'Cuneiform',\r\n            astral: '\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC70-\\uDC74\\uDC80-\\uDD43]'\r\n        },\r\n        {\r\n            name: 'Cypriot',\r\n            astral: '\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F]'\r\n        },\r\n        {\r\n            name: 'Cyrillic',\r\n            bmp: '\\u0400-\\u0484\\u0487-\\u052F\\u1C80-\\u1C88\\u1D2B\\u1D78\\u2DE0-\\u2DFF\\uA640-\\uA69F\\uFE2E\\uFE2F'\r\n        },\r\n        {\r\n            name: 'Deseret',\r\n            astral: '\\uD801[\\uDC00-\\uDC4F]'\r\n        },\r\n        {\r\n            name: 'Devanagari',\r\n            bmp: '\\u0900-\\u0950\\u0953-\\u0963\\u0966-\\u097F\\uA8E0-\\uA8FD'\r\n        },\r\n        {\r\n            name: 'Duployan',\r\n            astral: '\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9C-\\uDC9F]'\r\n        },\r\n        {\r\n            name: 'Egyptian_Hieroglyphs',\r\n            astral: '\\uD80C[\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]'\r\n        },\r\n        {\r\n            name: 'Elbasan',\r\n            astral: '\\uD801[\\uDD00-\\uDD27]'\r\n        },\r\n        {\r\n            name: 'Ethiopic',\r\n            bmp: '\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E'\r\n        },\r\n        {\r\n            name: 'Georgian',\r\n            bmp: '\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u10FF\\u2D00-\\u2D25\\u2D27\\u2D2D'\r\n        },\r\n        {\r\n            name: 'Glagolitic',\r\n            bmp: '\\u2C00-\\u2C2E\\u2C30-\\u2C5E',\r\n            astral: '\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]'\r\n        },\r\n        {\r\n            name: 'Gothic',\r\n            astral: '\\uD800[\\uDF30-\\uDF4A]'\r\n        },\r\n        {\r\n            name: 'Grantha',\r\n            astral: '\\uD804[\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]'\r\n        },\r\n        {\r\n            name: 'Greek',\r\n            bmp: '\\u0370-\\u0373\\u0375-\\u0377\\u037A-\\u037D\\u037F\\u0384\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03E1\\u03F0-\\u03FF\\u1D26-\\u1D2A\\u1D5D-\\u1D61\\u1D66-\\u1D6A\\u1DBF\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u2126\\uAB65',\r\n            astral: '\\uD800[\\uDD40-\\uDD8E\\uDDA0]|\\uD834[\\uDE00-\\uDE45]'\r\n        },\r\n        {\r\n            name: 'Gujarati',\r\n            bmp: '\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9'\r\n        },\r\n        {\r\n            name: 'Gurmukhi',\r\n            bmp: '\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75'\r\n        },\r\n        {\r\n            name: 'Han',\r\n            bmp: '\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uF900-\\uFA6D\\uFA70-\\uFAD9',\r\n            astral: '[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]'\r\n        },\r\n        {\r\n            name: 'Hangul',\r\n            bmp: '\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\r\n        },\r\n        {\r\n            name: 'Hanunoo',\r\n            bmp: '\\u1720-\\u1734'\r\n        },\r\n        {\r\n            name: 'Hatran',\r\n            astral: '\\uD802[\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'Hebrew',\r\n            bmp: '\\u0591-\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F4\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFB4F'\r\n        },\r\n        {\r\n            name: 'Hiragana',\r\n            bmp: '\\u3041-\\u3096\\u309D-\\u309F',\r\n            astral: '\\uD82C\\uDC01|\\uD83C\\uDE00'\r\n        },\r\n        {\r\n            name: 'Imperial_Aramaic',\r\n            astral: '\\uD802[\\uDC40-\\uDC55\\uDC57-\\uDC5F]'\r\n        },\r\n        {\r\n            name: 'Inherited',\r\n            bmp: '\\u0300-\\u036F\\u0485\\u0486\\u064B-\\u0655\\u0670\\u0951\\u0952\\u1AB0-\\u1ABE\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u200C\\u200D\\u20D0-\\u20F0\\u302A-\\u302D\\u3099\\u309A\\uFE00-\\uFE0F\\uFE20-\\uFE2D',\r\n            astral: '\\uD800[\\uDDFD\\uDEE0]|\\uD834[\\uDD67-\\uDD69\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD]|\\uDB40[\\uDD00-\\uDDEF]'\r\n        },\r\n        {\r\n            name: 'Inscriptional_Pahlavi',\r\n            astral: '\\uD802[\\uDF60-\\uDF72\\uDF78-\\uDF7F]'\r\n        },\r\n        {\r\n            name: 'Inscriptional_Parthian',\r\n            astral: '\\uD802[\\uDF40-\\uDF55\\uDF58-\\uDF5F]'\r\n        },\r\n        {\r\n            name: 'Javanese',\r\n            bmp: '\\uA980-\\uA9CD\\uA9D0-\\uA9D9\\uA9DE\\uA9DF'\r\n        },\r\n        {\r\n            name: 'Kaithi',\r\n            astral: '\\uD804[\\uDC80-\\uDCC1]'\r\n        },\r\n        {\r\n            name: 'Kannada',\r\n            bmp: '\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2'\r\n        },\r\n        {\r\n            name: 'Katakana',\r\n            bmp: '\\u30A1-\\u30FA\\u30FD-\\u30FF\\u31F0-\\u31FF\\u32D0-\\u32FE\\u3300-\\u3357\\uFF66-\\uFF6F\\uFF71-\\uFF9D',\r\n            astral: '\\uD82C\\uDC00'\r\n        },\r\n        {\r\n            name: 'Kayah_Li',\r\n            bmp: '\\uA900-\\uA92D\\uA92F'\r\n        },\r\n        {\r\n            name: 'Kharoshthi',\r\n            astral: '\\uD802[\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F-\\uDE47\\uDE50-\\uDE58]'\r\n        },\r\n        {\r\n            name: 'Khmer',\r\n            bmp: '\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u19E0-\\u19FF'\r\n        },\r\n        {\r\n            name: 'Khojki',\r\n            astral: '\\uD804[\\uDE00-\\uDE11\\uDE13-\\uDE3E]'\r\n        },\r\n        {\r\n            name: 'Khudawadi',\r\n            astral: '\\uD804[\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9]'\r\n        },\r\n        {\r\n            name: 'Lao',\r\n            bmp: '\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF'\r\n        },\r\n        {\r\n            name: 'Latin',\r\n            bmp: 'A-Za-z\\xAA\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02E0-\\u02E4\\u1D00-\\u1D25\\u1D2C-\\u1D5C\\u1D62-\\u1D65\\u1D6B-\\u1D77\\u1D79-\\u1DBE\\u1E00-\\u1EFF\\u2071\\u207F\\u2090-\\u209C\\u212A\\u212B\\u2132\\u214E\\u2160-\\u2188\\u2C60-\\u2C7F\\uA722-\\uA787\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA7FF\\uAB30-\\uAB5A\\uAB5C-\\uAB64\\uFB00-\\uFB06\\uFF21-\\uFF3A\\uFF41-\\uFF5A'\r\n        },\r\n        {\r\n            name: 'Lepcha',\r\n            bmp: '\\u1C00-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C4F'\r\n        },\r\n        {\r\n            name: 'Limbu',\r\n            bmp: '\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u194F'\r\n        },\r\n        {\r\n            name: 'Linear_A',\r\n            astral: '\\uD801[\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]'\r\n        },\r\n        {\r\n            name: 'Linear_B',\r\n            astral: '\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA]'\r\n        },\r\n        {\r\n            name: 'Lisu',\r\n            bmp: '\\uA4D0-\\uA4FF'\r\n        },\r\n        {\r\n            name: 'Lycian',\r\n            astral: '\\uD800[\\uDE80-\\uDE9C]'\r\n        },\r\n        {\r\n            name: 'Lydian',\r\n            astral: '\\uD802[\\uDD20-\\uDD39\\uDD3F]'\r\n        },\r\n        {\r\n            name: 'Mahajani',\r\n            astral: '\\uD804[\\uDD50-\\uDD76]'\r\n        },\r\n        {\r\n            name: 'Malayalam',\r\n            bmp: '\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F'\r\n        },\r\n        {\r\n            name: 'Mandaic',\r\n            bmp: '\\u0840-\\u085B\\u085E'\r\n        },\r\n        {\r\n            name: 'Manichaean',\r\n            astral: '\\uD802[\\uDEC0-\\uDEE6\\uDEEB-\\uDEF6]'\r\n        },\r\n        {\r\n            name: 'Marchen',\r\n            astral: '\\uD807[\\uDC70-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]'\r\n        },\r\n        {\r\n            name: 'Meetei_Mayek',\r\n            bmp: '\\uAAE0-\\uAAF6\\uABC0-\\uABED\\uABF0-\\uABF9'\r\n        },\r\n        {\r\n            name: 'Mende_Kikakui',\r\n            astral: '\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCD6]'\r\n        },\r\n        {\r\n            name: 'Meroitic_Cursive',\r\n            astral: '\\uD802[\\uDDA0-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDDFF]'\r\n        },\r\n        {\r\n            name: 'Meroitic_Hieroglyphs',\r\n            astral: '\\uD802[\\uDD80-\\uDD9F]'\r\n        },\r\n        {\r\n            name: 'Miao',\r\n            astral: '\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'Modi',\r\n            astral: '\\uD805[\\uDE00-\\uDE44\\uDE50-\\uDE59]'\r\n        },\r\n        {\r\n            name: 'Mongolian',\r\n            bmp: '\\u1800\\u1801\\u1804\\u1806-\\u180E\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA',\r\n            astral: '\\uD805[\\uDE60-\\uDE6C]'\r\n        },\r\n        {\r\n            name: 'Mro',\r\n            astral: '\\uD81A[\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE6E\\uDE6F]'\r\n        },\r\n        {\r\n            name: 'Multani',\r\n            astral: '\\uD804[\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA9]'\r\n        },\r\n        {\r\n            name: 'Myanmar',\r\n            bmp: '\\u1000-\\u109F\\uA9E0-\\uA9FE\\uAA60-\\uAA7F'\r\n        },\r\n        {\r\n            name: 'Nabataean',\r\n            astral: '\\uD802[\\uDC80-\\uDC9E\\uDCA7-\\uDCAF]'\r\n        },\r\n        {\r\n            name: 'New_Tai_Lue',\r\n            bmp: '\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE\\u19DF'\r\n        },\r\n        {\r\n            name: 'Newa',\r\n            astral: '\\uD805[\\uDC00-\\uDC59\\uDC5B\\uDC5D]'\r\n        },\r\n        {\r\n            name: 'Nko',\r\n            bmp: '\\u07C0-\\u07FA'\r\n        },\r\n        {\r\n            name: 'Ogham',\r\n            bmp: '\\u1680-\\u169C'\r\n        },\r\n        {\r\n            name: 'Ol_Chiki',\r\n            bmp: '\\u1C50-\\u1C7F'\r\n        },\r\n        {\r\n            name: 'Old_Hungarian',\r\n            astral: '\\uD803[\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'Old_Italic',\r\n            astral: '\\uD800[\\uDF00-\\uDF23]'\r\n        },\r\n        {\r\n            name: 'Old_North_Arabian',\r\n            astral: '\\uD802[\\uDE80-\\uDE9F]'\r\n        },\r\n        {\r\n            name: 'Old_Permic',\r\n            astral: '\\uD800[\\uDF50-\\uDF7A]'\r\n        },\r\n        {\r\n            name: 'Old_Persian',\r\n            astral: '\\uD800[\\uDFA0-\\uDFC3\\uDFC8-\\uDFD5]'\r\n        },\r\n        {\r\n            name: 'Old_South_Arabian',\r\n            astral: '\\uD802[\\uDE60-\\uDE7F]'\r\n        },\r\n        {\r\n            name: 'Old_Turkic',\r\n            astral: '\\uD803[\\uDC00-\\uDC48]'\r\n        },\r\n        {\r\n            name: 'Oriya',\r\n            bmp: '\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77'\r\n        },\r\n        {\r\n            name: 'Osage',\r\n            astral: '\\uD801[\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB]'\r\n        },\r\n        {\r\n            name: 'Osmanya',\r\n            astral: '\\uD801[\\uDC80-\\uDC9D\\uDCA0-\\uDCA9]'\r\n        },\r\n        {\r\n            name: 'Pahawh_Hmong',\r\n            astral: '\\uD81A[\\uDF00-\\uDF45\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]'\r\n        },\r\n        {\r\n            name: 'Palmyrene',\r\n            astral: '\\uD802[\\uDC60-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Pau_Cin_Hau',\r\n            astral: '\\uD806[\\uDEC0-\\uDEF8]'\r\n        },\r\n        {\r\n            name: 'Phags_Pa',\r\n            bmp: '\\uA840-\\uA877'\r\n        },\r\n        {\r\n            name: 'Phoenician',\r\n            astral: '\\uD802[\\uDD00-\\uDD1B\\uDD1F]'\r\n        },\r\n        {\r\n            name: 'Psalter_Pahlavi',\r\n            astral: '\\uD802[\\uDF80-\\uDF91\\uDF99-\\uDF9C\\uDFA9-\\uDFAF]'\r\n        },\r\n        {\r\n            name: 'Rejang',\r\n            bmp: '\\uA930-\\uA953\\uA95F'\r\n        },\r\n        {\r\n            name: 'Runic',\r\n            bmp: '\\u16A0-\\u16EA\\u16EE-\\u16F8'\r\n        },\r\n        {\r\n            name: 'Samaritan',\r\n            bmp: '\\u0800-\\u082D\\u0830-\\u083E'\r\n        },\r\n        {\r\n            name: 'Saurashtra',\r\n            bmp: '\\uA880-\\uA8C5\\uA8CE-\\uA8D9'\r\n        },\r\n        {\r\n            name: 'Sharada',\r\n            astral: '\\uD804[\\uDD80-\\uDDCD\\uDDD0-\\uDDDF]'\r\n        },\r\n        {\r\n            name: 'Shavian',\r\n            astral: '\\uD801[\\uDC50-\\uDC7F]'\r\n        },\r\n        {\r\n            name: 'Siddham',\r\n            astral: '\\uD805[\\uDD80-\\uDDB5\\uDDB8-\\uDDDD]'\r\n        },\r\n        {\r\n            name: 'SignWriting',\r\n            astral: '\\uD836[\\uDC00-\\uDE8B\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]'\r\n        },\r\n        {\r\n            name: 'Sinhala',\r\n            bmp: '\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4',\r\n            astral: '\\uD804[\\uDDE1-\\uDDF4]'\r\n        },\r\n        {\r\n            name: 'Sora_Sompeng',\r\n            astral: '\\uD804[\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9]'\r\n        },\r\n        {\r\n            name: 'Sundanese',\r\n            bmp: '\\u1B80-\\u1BBF\\u1CC0-\\u1CC7'\r\n        },\r\n        {\r\n            name: 'Syloti_Nagri',\r\n            bmp: '\\uA800-\\uA82B'\r\n        },\r\n        {\r\n            name: 'Syriac',\r\n            bmp: '\\u0700-\\u070D\\u070F-\\u074A\\u074D-\\u074F'\r\n        },\r\n        {\r\n            name: 'Tagalog',\r\n            bmp: '\\u1700-\\u170C\\u170E-\\u1714'\r\n        },\r\n        {\r\n            name: 'Tagbanwa',\r\n            bmp: '\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773'\r\n        },\r\n        {\r\n            name: 'Tai_Le',\r\n            bmp: '\\u1950-\\u196D\\u1970-\\u1974'\r\n        },\r\n        {\r\n            name: 'Tai_Tham',\r\n            bmp: '\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD'\r\n        },\r\n        {\r\n            name: 'Tai_Viet',\r\n            bmp: '\\uAA80-\\uAAC2\\uAADB-\\uAADF'\r\n        },\r\n        {\r\n            name: 'Takri',\r\n            astral: '\\uD805[\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]'\r\n        },\r\n        {\r\n            name: 'Tamil',\r\n            bmp: '\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA'\r\n        },\r\n        {\r\n            name: 'Tangut',\r\n            astral: '\\uD81B\\uDFE0|[\\uD81C-\\uD820][\\uDC00-\\uDFFF]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]'\r\n        },\r\n        {\r\n            name: 'Telugu',\r\n            bmp: '\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C78-\\u0C7F'\r\n        },\r\n        {\r\n            name: 'Thaana',\r\n            bmp: '\\u0780-\\u07B1'\r\n        },\r\n        {\r\n            name: 'Thai',\r\n            bmp: '\\u0E01-\\u0E3A\\u0E40-\\u0E5B'\r\n        },\r\n        {\r\n            name: 'Tibetan',\r\n            bmp: '\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FD4\\u0FD9\\u0FDA'\r\n        },\r\n        {\r\n            name: 'Tifinagh',\r\n            bmp: '\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F'\r\n        },\r\n        {\r\n            name: 'Tirhuta',\r\n            astral: '\\uD805[\\uDC80-\\uDCC7\\uDCD0-\\uDCD9]'\r\n        },\r\n        {\r\n            name: 'Ugaritic',\r\n            astral: '\\uD800[\\uDF80-\\uDF9D\\uDF9F]'\r\n        },\r\n        {\r\n            name: 'Vai',\r\n            bmp: '\\uA500-\\uA62B'\r\n        },\r\n        {\r\n            name: 'Warang_Citi',\r\n            astral: '\\uD806[\\uDCA0-\\uDCF2\\uDCFF]'\r\n        },\r\n        {\r\n            name: 'Yi',\r\n            bmp: '\\uA000-\\uA48C\\uA490-\\uA4C6'\r\n        }\r\n    ]);\r\n\r\n};\r\n\n},{}],8:[function(require,module,exports){\nvar XRegExp = require('./xregexp');\r\n\r\nrequire('./addons/build')(XRegExp);\r\nrequire('./addons/matchrecursive')(XRegExp);\r\nrequire('./addons/unicode-base')(XRegExp);\r\nrequire('./addons/unicode-blocks')(XRegExp);\r\nrequire('./addons/unicode-categories')(XRegExp);\r\nrequire('./addons/unicode-properties')(XRegExp);\r\nrequire('./addons/unicode-scripts')(XRegExp);\r\n\r\nmodule.exports = XRegExp;\r\n\n},{\"./addons/build\":1,\"./addons/matchrecursive\":2,\"./addons/unicode-base\":3,\"./addons/unicode-blocks\":4,\"./addons/unicode-categories\":5,\"./addons/unicode-properties\":6,\"./addons/unicode-scripts\":7,\"./xregexp\":9}],9:[function(require,module,exports){\n/*!\r\n * XRegExp 3.2.0\r\n * <xregexp.com>\r\n * Steven Levithan (c) 2007-2017 MIT License\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * XRegExp provides augmented, extensible regular expressions. You get additional regex syntax and\r\n * flags, beyond what browsers support natively. XRegExp is also a regex utility belt with tools to\r\n * make your client-side grepping simpler and more powerful, while freeing you from related\r\n * cross-browser inconsistencies.\r\n */\r\n\r\n// ==--------------------------==\r\n// Private stuff\r\n// ==--------------------------==\r\n\r\n// Property name used for extended regex instance data\r\nvar REGEX_DATA = 'xregexp';\r\n// Optional features that can be installed and uninstalled\r\nvar features = {\r\n    astral: false,\r\n    natives: false\r\n};\r\n// Native methods to use and restore ('native' is an ES3 reserved keyword)\r\nvar nativ = {\r\n    exec: RegExp.prototype.exec,\r\n    test: RegExp.prototype.test,\r\n    match: String.prototype.match,\r\n    replace: String.prototype.replace,\r\n    split: String.prototype.split\r\n};\r\n// Storage for fixed/extended native methods\r\nvar fixed = {};\r\n// Storage for regexes cached by `XRegExp.cache`\r\nvar regexCache = {};\r\n// Storage for pattern details cached by the `XRegExp` constructor\r\nvar patternCache = {};\r\n// Storage for regex syntax tokens added internally or by `XRegExp.addToken`\r\nvar tokens = [];\r\n// Token scopes\r\nvar defaultScope = 'default';\r\nvar classScope = 'class';\r\n// Regexes that match native regex syntax, including octals\r\nvar nativeTokens = {\r\n    // Any native multicharacter token in default scope, or any single character\r\n    'default': /\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]/,\r\n    // Any native multicharacter token in character class scope, or any single character\r\n    'class': /\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]/\r\n};\r\n// Any backreference or dollar-prefixed character in replacement strings\r\nvar replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g;\r\n// Check for correct `exec` handling of nonparticipating capturing groups\r\nvar correctExecNpcg = nativ.exec.call(/()??/, '')[1] === undefined;\r\n// Check for ES6 `flags` prop support\r\nvar hasFlagsProp = /x/.flags !== undefined;\r\n// Shortcut to `Object.prototype.toString`\r\nvar toString = {}.toString;\r\n\r\nfunction hasNativeFlag(flag) {\r\n    // Can't check based on the presence of properties/getters since browsers might support such\r\n    // properties even when they don't support the corresponding flag in regex construction (tested\r\n    // in Chrome 48, where `'unicode' in /x/` is true but trying to construct a regex with flag `u`\r\n    // throws an error)\r\n    var isSupported = true;\r\n    try {\r\n        // Can't use regex literals for testing even in a `try` because regex literals with\r\n        // unsupported flags cause a compilation error in IE\r\n        new RegExp('', flag);\r\n    } catch (exception) {\r\n        isSupported = false;\r\n    }\r\n    return isSupported;\r\n}\r\n// Check for ES6 `u` flag support\r\nvar hasNativeU = hasNativeFlag('u');\r\n// Check for ES6 `y` flag support\r\nvar hasNativeY = hasNativeFlag('y');\r\n// Tracker for known flags, including addon flags\r\nvar registeredFlags = {\r\n    g: true,\r\n    i: true,\r\n    m: true,\r\n    u: hasNativeU,\r\n    y: hasNativeY\r\n};\r\n\r\n/**\r\n * Attaches extended data and `XRegExp.prototype` properties to a regex object.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to augment.\r\n * @param {Array} captureNames Array with capture names, or `null`.\r\n * @param {String} xSource XRegExp pattern used to generate `regex`, or `null` if N/A.\r\n * @param {String} xFlags XRegExp flags used to generate `regex`, or `null` if N/A.\r\n * @param {Boolean} [isInternalOnly=false] Whether the regex will be used only for internal\r\n *   operations, and never exposed to users. For internal-only regexes, we can improve perf by\r\n *   skipping some operations like attaching `XRegExp.prototype` properties.\r\n * @returns {RegExp} Augmented regex.\r\n */\r\nfunction augment(regex, captureNames, xSource, xFlags, isInternalOnly) {\r\n    var p;\r\n\r\n    regex[REGEX_DATA] = {\r\n        captureNames: captureNames\r\n    };\r\n\r\n    if (isInternalOnly) {\r\n        return regex;\r\n    }\r\n\r\n    // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\r\n    if (regex.__proto__) {\r\n        regex.__proto__ = XRegExp.prototype;\r\n    } else {\r\n        for (p in XRegExp.prototype) {\r\n            // An `XRegExp.prototype.hasOwnProperty(p)` check wouldn't be worth it here, since this\r\n            // is performance sensitive, and enumerable `Object.prototype` or `RegExp.prototype`\r\n            // extensions exist on `regex.prototype` anyway\r\n            regex[p] = XRegExp.prototype[p];\r\n        }\r\n    }\r\n\r\n    regex[REGEX_DATA].source = xSource;\r\n    // Emulate the ES6 `flags` prop by ensuring flags are in alphabetical order\r\n    regex[REGEX_DATA].flags = xFlags ? xFlags.split('').sort().join('') : xFlags;\r\n\r\n    return regex;\r\n}\r\n\r\n/**\r\n * Removes any duplicate characters from the provided string.\r\n *\r\n * @private\r\n * @param {String} str String to remove duplicate characters from.\r\n * @returns {String} String with any duplicate characters removed.\r\n */\r\nfunction clipDuplicates(str) {\r\n    return nativ.replace.call(str, /([\\s\\S])(?=[\\s\\S]*\\1)/g, '');\r\n}\r\n\r\n/**\r\n * Copies a regex object while preserving extended data and augmenting with `XRegExp.prototype`\r\n * properties. The copy has a fresh `lastIndex` property (set to zero). Allows adding and removing\r\n * flags g and y while copying the regex.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to copy.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   - `addG` {Boolean} Add flag g while copying the regex.\r\n *   - `addY` {Boolean} Add flag y while copying the regex.\r\n *   - `removeG` {Boolean} Remove flag g while copying the regex.\r\n *   - `removeY` {Boolean} Remove flag y while copying the regex.\r\n *   - `isInternalOnly` {Boolean} Whether the copied regex will be used only for internal\r\n *     operations, and never exposed to users. For internal-only regexes, we can improve perf by\r\n *     skipping some operations like attaching `XRegExp.prototype` properties.\r\n *   - `source` {String} Overrides `<regex>.source`, for special cases.\r\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\r\n */\r\nfunction copyRegex(regex, options) {\r\n    if (!XRegExp.isRegExp(regex)) {\r\n        throw new TypeError('Type RegExp expected');\r\n    }\r\n\r\n    var xData = regex[REGEX_DATA] || {};\r\n    var flags = getNativeFlags(regex);\r\n    var flagsToAdd = '';\r\n    var flagsToRemove = '';\r\n    var xregexpSource = null;\r\n    var xregexpFlags = null;\r\n\r\n    options = options || {};\r\n\r\n    if (options.removeG) {flagsToRemove += 'g';}\r\n    if (options.removeY) {flagsToRemove += 'y';}\r\n    if (flagsToRemove) {\r\n        flags = nativ.replace.call(flags, new RegExp('[' + flagsToRemove + ']+', 'g'), '');\r\n    }\r\n\r\n    if (options.addG) {flagsToAdd += 'g';}\r\n    if (options.addY) {flagsToAdd += 'y';}\r\n    if (flagsToAdd) {\r\n        flags = clipDuplicates(flags + flagsToAdd);\r\n    }\r\n\r\n    if (!options.isInternalOnly) {\r\n        if (xData.source !== undefined) {\r\n            xregexpSource = xData.source;\r\n        }\r\n        // null or undefined; don't want to add to `flags` if the previous value was null, since\r\n        // that indicates we're not tracking original precompilation flags\r\n        if (xData.flags != null) {\r\n            // Flags are only added for non-internal regexes by `XRegExp.globalize`. Flags are never\r\n            // removed for non-internal regexes, so don't need to handle it\r\n            xregexpFlags = flagsToAdd ? clipDuplicates(xData.flags + flagsToAdd) : xData.flags;\r\n        }\r\n    }\r\n\r\n    // Augment with `XRegExp.prototype` properties, but use the native `RegExp` constructor to avoid\r\n    // searching for special tokens. That would be wrong for regexes constructed by `RegExp`, and\r\n    // unnecessary for regexes constructed by `XRegExp` because the regex has already undergone the\r\n    // translation to native regex syntax\r\n    regex = augment(\r\n        new RegExp(options.source || regex.source, flags),\r\n        hasNamedCapture(regex) ? xData.captureNames.slice(0) : null,\r\n        xregexpSource,\r\n        xregexpFlags,\r\n        options.isInternalOnly\r\n    );\r\n\r\n    return regex;\r\n}\r\n\r\n/**\r\n * Converts hexadecimal to decimal.\r\n *\r\n * @private\r\n * @param {String} hex\r\n * @returns {Number}\r\n */\r\nfunction dec(hex) {\r\n    return parseInt(hex, 16);\r\n}\r\n\r\n/**\r\n * Returns a pattern that can be used in a native RegExp in place of an ignorable token such as an\r\n * inline comment or whitespace with flag x. This is used directly as a token handler function\r\n * passed to `XRegExp.addToken`.\r\n *\r\n * @private\r\n * @param {String} match Match arg of `XRegExp.addToken` handler\r\n * @param {String} scope Scope arg of `XRegExp.addToken` handler\r\n * @param {String} flags Flags arg of `XRegExp.addToken` handler\r\n * @returns {String} Either '' or '(?:)', depending on which is needed in the context of the match.\r\n */\r\nfunction getContextualTokenSeparator(match, scope, flags) {\r\n    if (\r\n        // No need to separate tokens if at the beginning or end of a group\r\n        match.input.charAt(match.index - 1) === '(' ||\r\n        match.input.charAt(match.index + match[0].length) === ')' ||\r\n        // Avoid separating tokens when the following token is a quantifier\r\n        isPatternNext(match.input, match.index + match[0].length, flags, '[?*+]|{\\\\d+(?:,\\\\d*)?}')\r\n    ) {\r\n        return '';\r\n    }\r\n    // Keep tokens separated. This avoids e.g. inadvertedly changing `\\1 1` or `\\1(?#)1` to `\\11`.\r\n    // This also ensures all tokens remain as discrete atoms, e.g. it avoids converting the syntax\r\n    // error `(? :` into `(?:`.\r\n    return '(?:)';\r\n}\r\n\r\n/**\r\n * Returns native `RegExp` flags used by a regex object.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {String} Native flags in use.\r\n */\r\nfunction getNativeFlags(regex) {\r\n    return hasFlagsProp ?\r\n        regex.flags :\r\n        // Explicitly using `RegExp.prototype.toString` (rather than e.g. `String` or concatenation\r\n        // with an empty string) allows this to continue working predictably when\r\n        // `XRegExp.proptotype.toString` is overridden\r\n        nativ.exec.call(/\\/([a-z]*)$/i, RegExp.prototype.toString.call(regex))[1];\r\n}\r\n\r\n/**\r\n * Determines whether a regex has extended instance data used to track capture names.\r\n *\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {Boolean} Whether the regex uses named capture.\r\n */\r\nfunction hasNamedCapture(regex) {\r\n    return !!(regex[REGEX_DATA] && regex[REGEX_DATA].captureNames);\r\n}\r\n\r\n/**\r\n * Converts decimal to hexadecimal.\r\n *\r\n * @private\r\n * @param {Number|String} dec\r\n * @returns {String}\r\n */\r\nfunction hex(dec) {\r\n    return parseInt(dec, 10).toString(16);\r\n}\r\n\r\n/**\r\n * Returns the first index at which a given value can be found in an array.\r\n *\r\n * @private\r\n * @param {Array} array Array to search.\r\n * @param {*} value Value to locate in the array.\r\n * @returns {Number} Zero-based index at which the item is found, or -1.\r\n */\r\nfunction indexOf(array, value) {\r\n    var len = array.length;\r\n    var i;\r\n\r\n    for (i = 0; i < len; ++i) {\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n}\r\n\r\n/**\r\n * Checks whether the next nonignorable token after the specified position matches the\r\n * `needlePattern`\r\n *\r\n * @private\r\n * @param {String} pattern Pattern to search within.\r\n * @param {Number} pos Index in `pattern` to search at.\r\n * @param {String} flags Flags used by the pattern.\r\n * @param {String} needlePattern Pattern to match the next token against.\r\n * @returns {Boolean} Whether the next nonignorable token matches `needlePattern`\r\n */\r\nfunction isPatternNext(pattern, pos, flags, needlePattern) {\r\n    var inlineCommentPattern = '\\\\(\\\\?#[^)]*\\\\)';\r\n    var lineCommentPattern = '#[^#\\\\n]*';\r\n    var patternsToIgnore = flags.indexOf('x') > -1 ?\r\n        // Ignore any leading whitespace, line comments, and inline comments\r\n        ['\\\\s', lineCommentPattern, inlineCommentPattern] :\r\n        // Ignore any leading inline comments\r\n        [inlineCommentPattern];\r\n    return nativ.test.call(\r\n        new RegExp('^(?:' + patternsToIgnore.join('|') + ')*(?:' + needlePattern + ')'),\r\n        pattern.slice(pos)\r\n    );\r\n}\r\n\r\n/**\r\n * Determines whether a value is of the specified type, by resolving its internal [[Class]].\r\n *\r\n * @private\r\n * @param {*} value Object to check.\r\n * @param {String} type Type to check for, in TitleCase.\r\n * @returns {Boolean} Whether the object matches the type.\r\n */\r\nfunction isType(value, type) {\r\n    return toString.call(value) === '[object ' + type + ']';\r\n}\r\n\r\n/**\r\n * Adds leading zeros if shorter than four characters. Used for fixed-length hexadecimal values.\r\n *\r\n * @private\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nfunction pad4(str) {\r\n    while (str.length < 4) {\r\n        str = '0' + str;\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * Checks for flag-related errors, and strips/applies flags in a leading mode modifier. Offloads\r\n * the flag preparation logic from the `XRegExp` constructor.\r\n *\r\n * @private\r\n * @param {String} pattern Regex pattern, possibly with a leading mode modifier.\r\n * @param {String} flags Any combination of flags.\r\n * @returns {Object} Object with properties `pattern` and `flags`.\r\n */\r\nfunction prepareFlags(pattern, flags) {\r\n    var i;\r\n\r\n    // Recent browsers throw on duplicate flags, so copy this behavior for nonnative flags\r\n    if (clipDuplicates(flags) !== flags) {\r\n        throw new SyntaxError('Invalid duplicate regex flag ' + flags);\r\n    }\r\n\r\n    // Strip and apply a leading mode modifier with any combination of flags except g or y\r\n    pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function($0, $1) {\r\n        if (nativ.test.call(/[gy]/, $1)) {\r\n            throw new SyntaxError('Cannot use flag g or y in mode modifier ' + $0);\r\n        }\r\n        // Allow duplicate flags within the mode modifier\r\n        flags = clipDuplicates(flags + $1);\r\n        return '';\r\n    });\r\n\r\n    // Throw on unknown native or nonnative flags\r\n    for (i = 0; i < flags.length; ++i) {\r\n        if (!registeredFlags[flags.charAt(i)]) {\r\n            throw new SyntaxError('Unknown regex flag ' + flags.charAt(i));\r\n        }\r\n    }\r\n\r\n    return {\r\n        pattern: pattern,\r\n        flags: flags\r\n    };\r\n}\r\n\r\n/**\r\n * Prepares an options object from the given value.\r\n *\r\n * @private\r\n * @param {String|Object} value Value to convert to an options object.\r\n * @returns {Object} Options object.\r\n */\r\nfunction prepareOptions(value) {\r\n    var options = {};\r\n\r\n    if (isType(value, 'String')) {\r\n        XRegExp.forEach(value, /[^\\s,]+/, function(match) {\r\n            options[match] = true;\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n/**\r\n * Registers a flag so it doesn't throw an 'unknown flag' error.\r\n *\r\n * @private\r\n * @param {String} flag Single-character flag to register.\r\n */\r\nfunction registerFlag(flag) {\r\n    if (!/^[\\w$]$/.test(flag)) {\r\n        throw new Error('Flag must be a single character A-Za-z0-9_$');\r\n    }\r\n\r\n    registeredFlags[flag] = true;\r\n}\r\n\r\n/**\r\n * Runs built-in and custom regex syntax tokens in reverse insertion order at the specified\r\n * position, until a match is found.\r\n *\r\n * @private\r\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\r\n * @param {String} flags Flags being used to construct the regex.\r\n * @param {Number} pos Position to search for tokens within `pattern`.\r\n * @param {Number} scope Regex scope to apply: 'default' or 'class'.\r\n * @param {Object} context Context object to use for token handler functions.\r\n * @returns {Object} Object with properties `matchLength`, `output`, and `reparse`; or `null`.\r\n */\r\nfunction runTokens(pattern, flags, pos, scope, context) {\r\n    var i = tokens.length;\r\n    var leadChar = pattern.charAt(pos);\r\n    var result = null;\r\n    var match;\r\n    var t;\r\n\r\n    // Run in reverse insertion order\r\n    while (i--) {\r\n        t = tokens[i];\r\n        if (\r\n            (t.leadChar && t.leadChar !== leadChar) ||\r\n            (t.scope !== scope && t.scope !== 'all') ||\r\n            (t.flag && flags.indexOf(t.flag) === -1)\r\n        ) {\r\n            continue;\r\n        }\r\n\r\n        match = XRegExp.exec(pattern, t.regex, pos, 'sticky');\r\n        if (match) {\r\n            result = {\r\n                matchLength: match[0].length,\r\n                output: t.handler.call(context, match, scope, flags),\r\n                reparse: t.reparse\r\n            };\r\n            // Finished with token tests\r\n            break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Enables or disables implicit astral mode opt-in. When enabled, flag A is automatically added to\r\n * all new regexes created by XRegExp. This causes an error to be thrown when creating regexes if\r\n * the Unicode Base addon is not available, since flag A is registered by that addon.\r\n *\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\nfunction setAstral(on) {\r\n    features.astral = on;\r\n}\r\n\r\n/**\r\n * Enables or disables native method overrides.\r\n *\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\nfunction setNatives(on) {\r\n    RegExp.prototype.exec = (on ? fixed : nativ).exec;\r\n    RegExp.prototype.test = (on ? fixed : nativ).test;\r\n    String.prototype.match = (on ? fixed : nativ).match;\r\n    String.prototype.replace = (on ? fixed : nativ).replace;\r\n    String.prototype.split = (on ? fixed : nativ).split;\r\n\r\n    features.natives = on;\r\n}\r\n\r\n/**\r\n * Returns the object, or throws an error if it is `null` or `undefined`. This is used to follow\r\n * the ES5 abstract operation `ToObject`.\r\n *\r\n * @private\r\n * @param {*} value Object to check and return.\r\n * @returns {*} The provided object.\r\n */\r\nfunction toObject(value) {\r\n    // null or undefined\r\n    if (value == null) {\r\n        throw new TypeError('Cannot convert null or undefined to object');\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n// ==--------------------------==\r\n// Constructor\r\n// ==--------------------------==\r\n\r\n/**\r\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\r\n * native regular expression in that additional syntax and flags are supported. The returned object\r\n * is in fact a native `RegExp` and works with all native methods.\r\n *\r\n * @class XRegExp\r\n * @constructor\r\n * @param {String|RegExp} pattern Regex pattern string, or an existing regex object to copy.\r\n * @param {String} [flags] Any combination of flags.\r\n *   Native flags:\r\n *     - `g` - global\r\n *     - `i` - ignore case\r\n *     - `m` - multiline anchors\r\n *     - `u` - unicode (ES6)\r\n *     - `y` - sticky (Firefox 3+, ES6)\r\n *   Additional XRegExp flags:\r\n *     - `n` - explicit capture\r\n *     - `s` - dot matches all (aka singleline)\r\n *     - `x` - free-spacing and line comments (aka extended)\r\n *     - `A` - astral (requires the Unicode Base addon)\r\n *   Flags cannot be provided when constructing one `RegExp` from another.\r\n * @returns {RegExp} Extended regular expression object.\r\n * @example\r\n *\r\n * // With named capture and flag x\r\n * XRegExp('(?<year>  [0-9]{4} ) -?  # year  \\n\\\r\n *          (?<month> [0-9]{2} ) -?  # month \\n\\\r\n *          (?<day>   [0-9]{2} )     # day   ', 'x');\r\n *\r\n * // Providing a regex object copies it. Native regexes are recompiled using native (not XRegExp)\r\n * // syntax. Copies maintain extended data, are augmented with `XRegExp.prototype` properties, and\r\n * // have fresh `lastIndex` properties (set to zero).\r\n * XRegExp(/regex/);\r\n */\r\nfunction XRegExp(pattern, flags) {\r\n    if (XRegExp.isRegExp(pattern)) {\r\n        if (flags !== undefined) {\r\n            throw new TypeError('Cannot supply flags when copying a RegExp');\r\n        }\r\n        return copyRegex(pattern);\r\n    }\r\n\r\n    // Copy the argument behavior of `RegExp`\r\n    pattern = pattern === undefined ? '' : String(pattern);\r\n    flags = flags === undefined ? '' : String(flags);\r\n\r\n    if (XRegExp.isInstalled('astral') && flags.indexOf('A') === -1) {\r\n        // This causes an error to be thrown if the Unicode Base addon is not available\r\n        flags += 'A';\r\n    }\r\n\r\n    if (!patternCache[pattern]) {\r\n        patternCache[pattern] = {};\r\n    }\r\n\r\n    if (!patternCache[pattern][flags]) {\r\n        var context = {\r\n            hasNamedCapture: false,\r\n            captureNames: []\r\n        };\r\n        var scope = defaultScope;\r\n        var output = '';\r\n        var pos = 0;\r\n        var result;\r\n\r\n        // Check for flag-related errors, and strip/apply flags in a leading mode modifier\r\n        var applied = prepareFlags(pattern, flags);\r\n        var appliedPattern = applied.pattern;\r\n        var appliedFlags = applied.flags;\r\n\r\n        // Use XRegExp's tokens to translate the pattern to a native regex pattern.\r\n        // `appliedPattern.length` may change on each iteration if tokens use `reparse`\r\n        while (pos < appliedPattern.length) {\r\n            do {\r\n                // Check for custom tokens at the current position\r\n                result = runTokens(appliedPattern, appliedFlags, pos, scope, context);\r\n                // If the matched token used the `reparse` option, splice its output into the\r\n                // pattern before running tokens again at the same position\r\n                if (result && result.reparse) {\r\n                    appliedPattern = appliedPattern.slice(0, pos) +\r\n                        result.output +\r\n                        appliedPattern.slice(pos + result.matchLength);\r\n                }\r\n            } while (result && result.reparse);\r\n\r\n            if (result) {\r\n                output += result.output;\r\n                pos += (result.matchLength || 1);\r\n            } else {\r\n                // Get the native token at the current position\r\n                var token = XRegExp.exec(appliedPattern, nativeTokens[scope], pos, 'sticky')[0];\r\n                output += token;\r\n                pos += token.length;\r\n                if (token === '[' && scope === defaultScope) {\r\n                    scope = classScope;\r\n                } else if (token === ']' && scope === classScope) {\r\n                    scope = defaultScope;\r\n                }\r\n            }\r\n        }\r\n\r\n        patternCache[pattern][flags] = {\r\n            // Use basic cleanup to collapse repeated empty groups like `(?:)(?:)` to `(?:)`. Empty\r\n            // groups are sometimes inserted during regex transpilation in order to keep tokens\r\n            // separated. However, more than one empty group in a row is never needed.\r\n            pattern: nativ.replace.call(output, /(?:\\(\\?:\\))+/g, '(?:)'),\r\n            // Strip all but native flags\r\n            flags: nativ.replace.call(appliedFlags, /[^gimuy]+/g, ''),\r\n            // `context.captureNames` has an item for each capturing group, even if unnamed\r\n            captures: context.hasNamedCapture ? context.captureNames : null\r\n        };\r\n    }\r\n\r\n    var generated = patternCache[pattern][flags];\r\n    return augment(\r\n        new RegExp(generated.pattern, generated.flags),\r\n        generated.captures,\r\n        pattern,\r\n        flags\r\n    );\r\n}\r\n\r\n// Add `RegExp.prototype` to the prototype chain\r\nXRegExp.prototype = new RegExp();\r\n\r\n// ==--------------------------==\r\n// Public properties\r\n// ==--------------------------==\r\n\r\n/**\r\n * The XRegExp version number as a string containing three dot-separated parts. For example,\r\n * '2.0.0-beta-3'.\r\n *\r\n * @static\r\n * @memberOf XRegExp\r\n * @type String\r\n */\r\nXRegExp.version = '3.2.0';\r\n\r\n// ==--------------------------==\r\n// Public methods\r\n// ==--------------------------==\r\n\r\n// Intentionally undocumented; used in tests and addons\r\nXRegExp._clipDuplicates = clipDuplicates;\r\nXRegExp._hasNativeFlag = hasNativeFlag;\r\nXRegExp._dec = dec;\r\nXRegExp._hex = hex;\r\nXRegExp._pad4 = pad4;\r\n\r\n/**\r\n * Extends XRegExp syntax and allows custom flags. This is used internally and can be used to\r\n * create XRegExp addons. If more than one token can match the same string, the last added wins.\r\n *\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex object that matches the new token.\r\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\r\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\r\n *   properties of the regex being built, through `this`. Invoked with three arguments:\r\n *   - The match array, with named backreference properties.\r\n *   - The regex scope where the match was found: 'default' or 'class'.\r\n *   - The flags used by the regex, including any flags in a leading mode modifier.\r\n *   The handler function becomes part of the XRegExp construction process, so be careful not to\r\n *   construct XRegExps within the function or you will trigger infinite recursion.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   - `scope` {String} Scope where the token applies: 'default', 'class', or 'all'.\r\n *   - `flag` {String} Single-character flag that triggers the token. This also registers the\r\n *     flag, which prevents XRegExp from throwing an 'unknown flag' error when the flag is used.\r\n *   - `optionalFlags` {String} Any custom flags checked for within the token `handler` that are\r\n *     not required to trigger the token. This registers the flags, to prevent XRegExp from\r\n *     throwing an 'unknown flag' error when any of the flags are used.\r\n *   - `reparse` {Boolean} Whether the `handler` function's output should not be treated as\r\n *     final, and instead be reparseable by other tokens (including the current token). Allows\r\n *     token chaining or deferring.\r\n *   - `leadChar` {String} Single character that occurs at the beginning of any successful match\r\n *     of the token (not always applicable). This doesn't change the behavior of the token unless\r\n *     you provide an erroneous value. However, providing it can increase the token's performance\r\n *     since the token can be skipped at any positions where this character doesn't appear.\r\n * @example\r\n *\r\n * // Basic usage: Add \\a for the ALERT control code\r\n * XRegExp.addToken(\r\n *   /\\\\a/,\r\n *   function() {return '\\\\x07';},\r\n *   {scope: 'all'}\r\n * );\r\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\r\n *\r\n * // Add the U (ungreedy) flag from PCRE and RE2, which reverses greedy and lazy quantifiers.\r\n * // Since `scope` is not specified, it uses 'default' (i.e., transformations apply outside of\r\n * // character classes only)\r\n * XRegExp.addToken(\r\n *   /([?*+]|{\\d+(?:,\\d*)?})(\\??)/,\r\n *   function(match) {return match[1] + (match[2] ? '' : '?');},\r\n *   {flag: 'U'}\r\n * );\r\n * XRegExp('a+', 'U').exec('aaa')[0]; // -> 'a'\r\n * XRegExp('a+?', 'U').exec('aaa')[0]; // -> 'aaa'\r\n */\r\nXRegExp.addToken = function(regex, handler, options) {\r\n    options = options || {};\r\n    var optionalFlags = options.optionalFlags;\r\n    var i;\r\n\r\n    if (options.flag) {\r\n        registerFlag(options.flag);\r\n    }\r\n\r\n    if (optionalFlags) {\r\n        optionalFlags = nativ.split.call(optionalFlags, '');\r\n        for (i = 0; i < optionalFlags.length; ++i) {\r\n            registerFlag(optionalFlags[i]);\r\n        }\r\n    }\r\n\r\n    // Add to the private list of syntax tokens\r\n    tokens.push({\r\n        regex: copyRegex(regex, {\r\n            addG: true,\r\n            addY: hasNativeY,\r\n            isInternalOnly: true\r\n        }),\r\n        handler: handler,\r\n        scope: options.scope || defaultScope,\r\n        flag: options.flag,\r\n        reparse: options.reparse,\r\n        leadChar: options.leadChar\r\n    });\r\n\r\n    // Reset the pattern cache used by the `XRegExp` constructor, since the same pattern and flags\r\n    // might now produce different results\r\n    XRegExp.cache.flush('patterns');\r\n};\r\n\r\n/**\r\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\r\n * the same pattern and flag combination, the cached copy of the regex is returned.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} pattern Regex pattern string.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Cached XRegExp object.\r\n * @example\r\n *\r\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\r\n *   // The regex is compiled once only\r\n * }\r\n */\r\nXRegExp.cache = function(pattern, flags) {\r\n    if (!regexCache[pattern]) {\r\n        regexCache[pattern] = {};\r\n    }\r\n    return regexCache[pattern][flags] || (\r\n        regexCache[pattern][flags] = XRegExp(pattern, flags)\r\n    );\r\n};\r\n\r\n// Intentionally undocumented; used in tests\r\nXRegExp.cache.flush = function(cacheName) {\r\n    if (cacheName === 'patterns') {\r\n        // Flush the pattern cache used by the `XRegExp` constructor\r\n        patternCache = {};\r\n    } else {\r\n        // Flush the regex cache populated by `XRegExp.cache`\r\n        regexCache = {};\r\n    }\r\n};\r\n\r\n/**\r\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\r\n * can safely be used at any point within a regex that uses any flags.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to escape.\r\n * @returns {String} String with regex metacharacters escaped.\r\n * @example\r\n *\r\n * XRegExp.escape('Escaped? <.>');\r\n * // -> 'Escaped\\?\\ <\\.>'\r\n */\r\nXRegExp.escape = function(str) {\r\n    return nativ.replace.call(toObject(str), /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n};\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\r\n * regex uses named capture, named backreference properties are included on the match array.\r\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\r\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\r\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Array} Match array with named backreference properties, or `null`.\r\n * @example\r\n *\r\n * // Basic use, with named backreference\r\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\r\n * match.hex; // -> '2620'\r\n *\r\n * // With pos and sticky, in a loop\r\n * var pos = 2, result = [], match;\r\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\r\n *   result.push(match[1]);\r\n *   pos = match.index + match[0].length;\r\n * }\r\n * // result -> ['2', '3', '4']\r\n */\r\nXRegExp.exec = function(str, regex, pos, sticky) {\r\n    var cacheKey = 'g';\r\n    var addY = false;\r\n    var fakeY = false;\r\n    var match;\r\n    var r2;\r\n\r\n    addY = hasNativeY && !!(sticky || (regex.sticky && sticky !== false));\r\n    if (addY) {\r\n        cacheKey += 'y';\r\n    } else if (sticky) {\r\n        // Simulate sticky matching by appending an empty capture to the original regex. The\r\n        // resulting regex will succeed no matter what at the current index (set with `lastIndex`),\r\n        // and will not search the rest of the subject string. We'll know that the original regex\r\n        // has failed if that last capture is `''` rather than `undefined` (i.e., if that last\r\n        // capture participated in the match).\r\n        fakeY = true;\r\n        cacheKey += 'FakeY';\r\n    }\r\n\r\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\r\n\r\n    // Shares cached copies with `XRegExp.match`/`replace`\r\n    r2 = regex[REGEX_DATA][cacheKey] || (\r\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\r\n            addG: true,\r\n            addY: addY,\r\n            source: fakeY ? regex.source + '|()' : undefined,\r\n            removeY: sticky === false,\r\n            isInternalOnly: true\r\n        })\r\n    );\r\n\r\n    pos = pos || 0;\r\n    r2.lastIndex = pos;\r\n\r\n    // Fixed `exec` required for `lastIndex` fix, named backreferences, etc.\r\n    match = fixed.exec.call(r2, str);\r\n\r\n    // Get rid of the capture added by the pseudo-sticky matcher if needed. An empty string means\r\n    // the original regexp failed (see above).\r\n    if (fakeY && match && match.pop() === '') {\r\n        match = null;\r\n    }\r\n\r\n    if (regex.global) {\r\n        regex.lastIndex = match ? r2.lastIndex : 0;\r\n    }\r\n\r\n    return match;\r\n};\r\n\r\n/**\r\n * Executes a provided function once per regex match. Searches always start at the beginning of the\r\n * string and continue until the end, regardless of the state of the regex's `global` property and\r\n * initial `lastIndex`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\r\n *   - The match array, with named backreference properties.\r\n *   - The zero-based match index.\r\n *   - The string being traversed.\r\n *   - The regex object being used to traverse the string.\r\n * @example\r\n *\r\n * // Extracts every other digit from a string\r\n * var evens = [];\r\n * XRegExp.forEach('1a2345', /\\d/, function(match, i) {\r\n *   if (i % 2) evens.push(+match[0]);\r\n * });\r\n * // evens -> [2, 4]\r\n */\r\nXRegExp.forEach = function(str, regex, callback) {\r\n    var pos = 0;\r\n    var i = -1;\r\n    var match;\r\n\r\n    while ((match = XRegExp.exec(str, regex, pos))) {\r\n        // Because `regex` is provided to `callback`, the function could use the deprecated/\r\n        // nonstandard `RegExp.prototype.compile` to mutate the regex. However, since `XRegExp.exec`\r\n        // doesn't use `lastIndex` to set the search position, this can't lead to an infinite loop,\r\n        // at least. Actually, because of the way `XRegExp.exec` caches globalized versions of\r\n        // regexes, mutating the regex will not have any effect on the iteration or matched strings,\r\n        // which is a nice side effect that brings extra safety.\r\n        callback(match, ++i, str, regex);\r\n\r\n        pos = match.index + (match[0].length || 1);\r\n    }\r\n};\r\n\r\n/**\r\n * Copies a regex object and adds flag `g`. The copy maintains extended data, is augmented with\r\n * `XRegExp.prototype` properties, and has a fresh `lastIndex` property (set to zero). Native\r\n * regexes are not recompiled using XRegExp syntax.\r\n *\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex to globalize.\r\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\r\n * @example\r\n *\r\n * var globalCopy = XRegExp.globalize(/regex/);\r\n * globalCopy.global; // -> true\r\n */\r\nXRegExp.globalize = function(regex) {\r\n    return copyRegex(regex, {addG: true});\r\n};\r\n\r\n/**\r\n * Installs optional features according to the specified options. Can be undone using\r\n * `XRegExp.uninstall`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.install({\r\n *   // Enables support for astral code points in Unicode addons (implicitly sets flag A)\r\n *   astral: true,\r\n *\r\n *   // DEPRECATED: Overrides native regex methods with fixed/extended versions\r\n *   natives: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.install('astral natives');\r\n */\r\nXRegExp.install = function(options) {\r\n    options = prepareOptions(options);\r\n\r\n    if (!features.astral && options.astral) {\r\n        setAstral(true);\r\n    }\r\n\r\n    if (!features.natives && options.natives) {\r\n        setNatives(true);\r\n    }\r\n};\r\n\r\n/**\r\n * Checks whether an individual optional feature is installed.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} feature Name of the feature to check. One of:\r\n *   - `astral`\r\n *   - `natives`\r\n * @returns {Boolean} Whether the feature is installed.\r\n * @example\r\n *\r\n * XRegExp.isInstalled('astral');\r\n */\r\nXRegExp.isInstalled = function(feature) {\r\n    return !!(features[feature]);\r\n};\r\n\r\n/**\r\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\r\n * created in another frame, when `instanceof` and `constructor` checks would fail.\r\n *\r\n * @memberOf XRegExp\r\n * @param {*} value Object to check.\r\n * @returns {Boolean} Whether the object is a `RegExp` object.\r\n * @example\r\n *\r\n * XRegExp.isRegExp('string'); // -> false\r\n * XRegExp.isRegExp(/regex/i); // -> true\r\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\r\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\r\n */\r\nXRegExp.isRegExp = function(value) {\r\n    return toString.call(value) === '[object RegExp]';\r\n    //return isType(value, 'RegExp');\r\n};\r\n\r\n/**\r\n * Returns the first matched string, or in global mode, an array containing all matched strings.\r\n * This is essentially a more convenient re-implementation of `String.prototype.match` that gives\r\n * the result types you actually want (string instead of `exec`-style array in match-first mode,\r\n * and an empty array instead of `null` when no matches are found in match-all mode). It also lets\r\n * you override flag g and ignore `lastIndex`, and fixes browser bugs.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {String} [scope='one'] Use 'one' to return the first match as a string. Use 'all' to\r\n *   return an array of all matched strings. If not explicitly specified and `regex` uses flag g,\r\n *   `scope` is 'all'.\r\n * @returns {String|Array} In match-first mode: First match as a string, or `null`. In match-all\r\n *   mode: Array of all matched strings, or an empty array.\r\n * @example\r\n *\r\n * // Match first\r\n * XRegExp.match('abc', /\\w/); // -> 'a'\r\n * XRegExp.match('abc', /\\w/g, 'one'); // -> 'a'\r\n * XRegExp.match('abc', /x/g, 'one'); // -> null\r\n *\r\n * // Match all\r\n * XRegExp.match('abc', /\\w/g); // -> ['a', 'b', 'c']\r\n * XRegExp.match('abc', /\\w/, 'all'); // -> ['a', 'b', 'c']\r\n * XRegExp.match('abc', /x/, 'all'); // -> []\r\n */\r\nXRegExp.match = function(str, regex, scope) {\r\n    var global = (regex.global && scope !== 'one') || scope === 'all';\r\n    var cacheKey = ((global ? 'g' : '') + (regex.sticky ? 'y' : '')) || 'noGY';\r\n    var result;\r\n    var r2;\r\n\r\n    regex[REGEX_DATA] = regex[REGEX_DATA] || {};\r\n\r\n    // Shares cached copies with `XRegExp.exec`/`replace`\r\n    r2 = regex[REGEX_DATA][cacheKey] || (\r\n        regex[REGEX_DATA][cacheKey] = copyRegex(regex, {\r\n            addG: !!global,\r\n            removeG: scope === 'one',\r\n            isInternalOnly: true\r\n        })\r\n    );\r\n\r\n    result = nativ.match.call(toObject(str), r2);\r\n\r\n    if (regex.global) {\r\n        regex.lastIndex = (\r\n            (scope === 'one' && result) ?\r\n                // Can't use `r2.lastIndex` since `r2` is nonglobal in this case\r\n                (result.index + result[0].length) : 0\r\n        );\r\n    }\r\n\r\n    return global ? (result || []) : (result && result[0]);\r\n};\r\n\r\n/**\r\n * Retrieves the matches from searching a string using a chain of regexes that successively search\r\n * within previous matches. The provided `chain` array can contain regexes and or objects with\r\n * `regex` and `backref` properties. When a backreference is specified, the named or numbered\r\n * backreference is passed forward to the next regex or returned.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} chain Regexes that each search for matches within preceding results.\r\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage; matches numbers within <b> tags\r\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\r\n *   XRegExp('(?is)<b>.*?</b>'),\r\n *   /\\d+/\r\n * ]);\r\n * // -> ['2', '4', '56']\r\n *\r\n * // Passing forward and returning specific backreferences\r\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\r\n *         <a href=\"http://www.google.com/\">Google</a>';\r\n * XRegExp.matchChain(html, [\r\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\r\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\r\n * ]);\r\n * // -> ['xregexp.com', 'www.google.com']\r\n */\r\nXRegExp.matchChain = function(str, chain) {\r\n    return (function recurseChain(values, level) {\r\n        var item = chain[level].regex ? chain[level] : {regex: chain[level]};\r\n        var matches = [];\r\n\r\n        function addMatch(match) {\r\n            if (item.backref) {\r\n                // Safari 4.0.5 (but not 5.0.5+) inappropriately uses sparse arrays to hold the\r\n                // `undefined`s for backreferences to nonparticipating capturing groups. In such\r\n                // cases, a `hasOwnProperty` or `in` check on its own would inappropriately throw\r\n                // the exception, so also check if the backreference is a number that is within the\r\n                // bounds of the array.\r\n                if (!(match.hasOwnProperty(item.backref) || +item.backref < match.length)) {\r\n                    throw new ReferenceError('Backreference to undefined group: ' + item.backref);\r\n                }\r\n\r\n                matches.push(match[item.backref] || '');\r\n            } else {\r\n                matches.push(match[0]);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < values.length; ++i) {\r\n            XRegExp.forEach(values[i], item.regex, addMatch);\r\n        }\r\n\r\n        return ((level === chain.length - 1) || !matches.length) ?\r\n            matches :\r\n            recurseChain(matches, level + 1);\r\n    }([str], 0));\r\n};\r\n\r\n/**\r\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\r\n * or regex, and the replacement can be a string or a function to be called for each match. To\r\n * perform a global search and replace, use the optional `scope` argument or include flag g if using\r\n * a regex. Replacement strings can use `${n}` for named and numbered backreferences. Replacement\r\n * functions can use named backreferences via `arguments[0].name`. Also fixes browser bugs compared\r\n * to the native `String.prototype.replace` and can be used reliably cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n *   Replacement strings can include special replacement syntax:\r\n *     - $$ - Inserts a literal $ character.\r\n *     - $&, $0 - Inserts the matched substring.\r\n *     - $` - Inserts the string that precedes the matched substring (left context).\r\n *     - $' - Inserts the string that follows the matched substring (right context).\r\n *     - $n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\r\n *       backreference n/nn.\r\n *     - ${n} - Where n is a name or any number of digits that reference an existent capturing\r\n *       group, inserts backreference n.\r\n *   Replacement functions are invoked with three or more arguments:\r\n *     - The matched substring (corresponds to $& above). Named backreferences are accessible as\r\n *       properties of this first argument.\r\n *     - 0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\r\n *     - The zero-based index of the match within the total search string.\r\n *     - The total string being searched.\r\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\r\n *   explicitly specified and using a regex with flag g, `scope` is 'all'.\r\n * @returns {String} New string with one or all matches replaced.\r\n * @example\r\n *\r\n * // Regex search, using named backreferences in replacement string\r\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\r\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\r\n * // -> 'Smith, John'\r\n *\r\n * // Regex search, using named backreferences in replacement function\r\n * XRegExp.replace('John Smith', name, function(match) {\r\n *   return match.last + ', ' + match.first;\r\n * });\r\n * // -> 'Smith, John'\r\n *\r\n * // String search, with replace-all\r\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\r\n * // -> 'XRegExp builds XRegExps'\r\n */\r\nXRegExp.replace = function(str, search, replacement, scope) {\r\n    var isRegex = XRegExp.isRegExp(search);\r\n    var global = (search.global && scope !== 'one') || scope === 'all';\r\n    var cacheKey = ((global ? 'g' : '') + (search.sticky ? 'y' : '')) || 'noGY';\r\n    var s2 = search;\r\n    var result;\r\n\r\n    if (isRegex) {\r\n        search[REGEX_DATA] = search[REGEX_DATA] || {};\r\n\r\n        // Shares cached copies with `XRegExp.exec`/`match`. Since a copy is used, `search`'s\r\n        // `lastIndex` isn't updated *during* replacement iterations\r\n        s2 = search[REGEX_DATA][cacheKey] || (\r\n            search[REGEX_DATA][cacheKey] = copyRegex(search, {\r\n                addG: !!global,\r\n                removeG: scope === 'one',\r\n                isInternalOnly: true\r\n            })\r\n        );\r\n    } else if (global) {\r\n        s2 = new RegExp(XRegExp.escape(String(search)), 'g');\r\n    }\r\n\r\n    // Fixed `replace` required for named backreferences, etc.\r\n    result = fixed.replace.call(toObject(str), s2, replacement);\r\n\r\n    if (isRegex && search.global) {\r\n        // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n        search.lastIndex = 0;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Performs batch processing of string replacements. Used like `XRegExp.replace`, but accepts an\r\n * array of replacement details. Later replacements operate on the output of earlier replacements.\r\n * Replacement details are accepted as an array with a regex or string to search for, the\r\n * replacement string or function, and an optional scope of 'one' or 'all'. Uses the XRegExp\r\n * replacement text syntax, which supports named backreference properties via `${name}`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} replacements Array of replacement detail arrays.\r\n * @returns {String} New string with all replacements.\r\n * @example\r\n *\r\n * str = XRegExp.replaceEach(str, [\r\n *   [XRegExp('(?<name>a)'), 'z${name}'],\r\n *   [/b/gi, 'y'],\r\n *   [/c/g, 'x', 'one'], // scope 'one' overrides /g\r\n *   [/d/, 'w', 'all'],  // scope 'all' overrides lack of /g\r\n *   ['e', 'v', 'all'],  // scope 'all' allows replace-all for strings\r\n *   [/f/g, function($0) {\r\n *     return $0.toUpperCase();\r\n *   }]\r\n * ]);\r\n */\r\nXRegExp.replaceEach = function(str, replacements) {\r\n    var i;\r\n    var r;\r\n\r\n    for (i = 0; i < replacements.length; ++i) {\r\n        r = replacements[i];\r\n        str = XRegExp.replace(str, r[0], r[1], r[2]);\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\n/**\r\n * Splits a string into an array of strings using a regex or string separator. Matches of the\r\n * separator are not included in the result array. However, if `separator` is a regex that contains\r\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\r\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\r\n * cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to split.\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.split('a b c', ' ');\r\n * // -> ['a', 'b', 'c']\r\n *\r\n * // With limit\r\n * XRegExp.split('a b c', ' ', 2);\r\n * // -> ['a', 'b']\r\n *\r\n * // Backreferences in result array\r\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\r\n * // -> ['..', 'word', '1', '..']\r\n */\r\nXRegExp.split = function(str, separator, limit) {\r\n    return fixed.split.call(toObject(str), separator, limit);\r\n};\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\r\n * `sticky` arguments specify the search start position, and whether the match must start at the\r\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\r\n * updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.test` and can be used reliably cross-browser.\r\n *\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.test('abc', /c/); // -> true\r\n *\r\n * // With pos and sticky\r\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\r\n * XRegExp.test('abc', /c/, 2, 'sticky'); // -> true\r\n */\r\nXRegExp.test = function(str, regex, pos, sticky) {\r\n    // Do this the easy way :-)\r\n    return !!XRegExp.exec(str, regex, pos, sticky);\r\n};\r\n\r\n/**\r\n * Uninstalls optional features according to the specified options. All optional features start out\r\n * uninstalled, so this is used to undo the actions of `XRegExp.install`.\r\n *\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.uninstall({\r\n *   // Disables support for astral code points in Unicode addons\r\n *   astral: true,\r\n *\r\n *   // DEPRECATED: Restores native regex methods\r\n *   natives: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.uninstall('astral natives');\r\n */\r\nXRegExp.uninstall = function(options) {\r\n    options = prepareOptions(options);\r\n\r\n    if (features.astral && options.astral) {\r\n        setAstral(false);\r\n    }\r\n\r\n    if (features.natives && options.natives) {\r\n        setNatives(false);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\r\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\r\n * Backreferences in provided regex objects are automatically renumbered to work correctly within\r\n * the larger combined pattern. Native flags used by provided regexes are ignored in favor of the\r\n * `flags` argument.\r\n *\r\n * @memberOf XRegExp\r\n * @param {Array} patterns Regexes and strings to combine.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   - `conjunction` {String} Type of conjunction to use: 'or' (default) or 'none'.\r\n * @returns {RegExp} Union of the provided regexes and strings.\r\n * @example\r\n *\r\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\r\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\r\n *\r\n * XRegExp.union([/man/, /bear/, /pig/], 'i', {conjunction: 'none'});\r\n * // -> /manbearpig/i\r\n */\r\nXRegExp.union = function(patterns, flags, options) {\r\n    options = options || {};\r\n    var conjunction = options.conjunction || 'or';\r\n    var numCaptures = 0;\r\n    var numPriorCaptures;\r\n    var captureNames;\r\n\r\n    function rewrite(match, paren, backref) {\r\n        var name = captureNames[numCaptures - numPriorCaptures];\r\n\r\n        // Capturing group\r\n        if (paren) {\r\n            ++numCaptures;\r\n            // If the current capture has a name, preserve the name\r\n            if (name) {\r\n                return '(?<' + name + '>';\r\n            }\r\n        // Backreference\r\n        } else if (backref) {\r\n            // Rewrite the backreference\r\n            return '\\\\' + (+backref + numPriorCaptures);\r\n        }\r\n\r\n        return match;\r\n    }\r\n\r\n    if (!(isType(patterns, 'Array') && patterns.length)) {\r\n        throw new TypeError('Must provide a nonempty array of patterns to merge');\r\n    }\r\n\r\n    var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/g;\r\n    var output = [];\r\n    var pattern;\r\n    for (var i = 0; i < patterns.length; ++i) {\r\n        pattern = patterns[i];\r\n\r\n        if (XRegExp.isRegExp(pattern)) {\r\n            numPriorCaptures = numCaptures;\r\n            captureNames = (pattern[REGEX_DATA] && pattern[REGEX_DATA].captureNames) || [];\r\n\r\n            // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns are\r\n            // independently valid; helps keep this simple. Named captures are put back\r\n            output.push(nativ.replace.call(XRegExp(pattern.source).source, parts, rewrite));\r\n        } else {\r\n            output.push(XRegExp.escape(pattern));\r\n        }\r\n    }\r\n\r\n    var separator = conjunction === 'none' ? '' : '|';\r\n    return XRegExp(output.join(separator), flags);\r\n};\r\n\r\n// ==--------------------------==\r\n// Fixed/extended native methods\r\n// ==--------------------------==\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method. Use via `XRegExp.exec` without overriding natives.\r\n *\r\n * @memberOf RegExp\r\n * @param {String} str String to search.\r\n * @returns {Array} Match array with named backreference properties, or `null`.\r\n */\r\nfixed.exec = function(str) {\r\n    var origLastIndex = this.lastIndex;\r\n    var match = nativ.exec.apply(this, arguments);\r\n    var name;\r\n    var r2;\r\n    var i;\r\n\r\n    if (match) {\r\n        // Fix browsers whose `exec` methods don't return `undefined` for nonparticipating capturing\r\n        // groups. This fixes IE 5.5-8, but not IE 9's quirks mode or emulation of older IEs. IE 9\r\n        // in standards mode follows the spec.\r\n        if (!correctExecNpcg && match.length > 1 && indexOf(match, '') > -1) {\r\n            r2 = copyRegex(this, {\r\n                removeG: true,\r\n                isInternalOnly: true\r\n            });\r\n            // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\r\n            // matching due to characters outside the match\r\n            nativ.replace.call(String(str).slice(match.index), r2, function() {\r\n                var len = arguments.length;\r\n                var i;\r\n                // Skip index 0 and the last 2\r\n                for (i = 1; i < len - 2; ++i) {\r\n                    if (arguments[i] === undefined) {\r\n                        match[i] = undefined;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Attach named capture properties\r\n        if (this[REGEX_DATA] && this[REGEX_DATA].captureNames) {\r\n            // Skip index 0\r\n            for (i = 1; i < match.length; ++i) {\r\n                name = this[REGEX_DATA].captureNames[i - 1];\r\n                if (name) {\r\n                    match[name] = match[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Fix browsers that increment `lastIndex` after zero-length matches\r\n        if (this.global && !match[0].length && (this.lastIndex > match.index)) {\r\n            this.lastIndex = match.index;\r\n        }\r\n    }\r\n\r\n    if (!this.global) {\r\n        // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n        this.lastIndex = origLastIndex;\r\n    }\r\n\r\n    return match;\r\n};\r\n\r\n/**\r\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method.\r\n *\r\n * @memberOf RegExp\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n */\r\nfixed.test = function(str) {\r\n    // Do this the easy way :-)\r\n    return !!fixed.exec.call(this, str);\r\n};\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method.\r\n *\r\n * @memberOf String\r\n * @param {RegExp|*} regex Regex to search with. If not a regex object, it is passed to `RegExp`.\r\n * @returns {Array} If `regex` uses flag g, an array of match strings or `null`. Without flag g,\r\n *   the result of calling `regex.exec(this)`.\r\n */\r\nfixed.match = function(regex) {\r\n    var result;\r\n\r\n    if (!XRegExp.isRegExp(regex)) {\r\n        // Use the native `RegExp` rather than `XRegExp`\r\n        regex = new RegExp(regex);\r\n    } else if (regex.global) {\r\n        result = nativ.match.apply(this, arguments);\r\n        // Fixes IE bug\r\n        regex.lastIndex = 0;\r\n\r\n        return result;\r\n    }\r\n\r\n    return fixed.exec.call(regex, toObject(this));\r\n};\r\n\r\n/**\r\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\r\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes browser\r\n * bugs in replacement text syntax when performing a replacement using a nonregex search value, and\r\n * the value of a replacement regex's `lastIndex` property during replacement iterations and upon\r\n * completion. Calling `XRegExp.install('natives')` uses this to override the native method. Note\r\n * that this doesn't support SpiderMonkey's proprietary third (`flags`) argument. Use via\r\n * `XRegExp.replace` without overriding natives.\r\n *\r\n * @memberOf String\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n * @returns {String} New string with one or all matches replaced.\r\n */\r\nfixed.replace = function(search, replacement) {\r\n    var isRegex = XRegExp.isRegExp(search);\r\n    var origLastIndex;\r\n    var captureNames;\r\n    var result;\r\n\r\n    if (isRegex) {\r\n        if (search[REGEX_DATA]) {\r\n            captureNames = search[REGEX_DATA].captureNames;\r\n        }\r\n        // Only needed if `search` is nonglobal\r\n        origLastIndex = search.lastIndex;\r\n    } else {\r\n        search += ''; // Type-convert\r\n    }\r\n\r\n    // Don't use `typeof`; some older browsers return 'function' for regex objects\r\n    if (isType(replacement, 'Function')) {\r\n        // Stringifying `this` fixes a bug in IE < 9 where the last argument in replacement\r\n        // functions isn't type-converted to a string\r\n        result = nativ.replace.call(String(this), search, function() {\r\n            var args = arguments;\r\n            var i;\r\n            if (captureNames) {\r\n                // Change the `arguments[0]` string primitive to a `String` object that can store\r\n                // properties. This really does need to use `String` as a constructor\r\n                args[0] = new String(args[0]);\r\n                // Store named backreferences on the first argument\r\n                for (i = 0; i < captureNames.length; ++i) {\r\n                    if (captureNames[i]) {\r\n                        args[0][captureNames[i]] = args[i + 1];\r\n                    }\r\n                }\r\n            }\r\n            // Update `lastIndex` before calling `replacement`. Fixes IE, Chrome, Firefox, Safari\r\n            // bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\r\n            if (isRegex && search.global) {\r\n                search.lastIndex = args[args.length - 2] + args[0].length;\r\n            }\r\n            // ES6 specs the context for replacement functions as `undefined`\r\n            return replacement.apply(undefined, args);\r\n        });\r\n    } else {\r\n        // Ensure that the last value of `args` will be a string when given nonstring `this`,\r\n        // while still throwing on null or undefined context\r\n        result = nativ.replace.call(this == null ? this : String(this), search, function() {\r\n            // Keep this function's `arguments` available through closure\r\n            var args = arguments;\r\n            return nativ.replace.call(String(replacement), replacementToken, function($0, $1, $2) {\r\n                var n;\r\n                // Named or numbered backreference with curly braces\r\n                if ($1) {\r\n                    // XRegExp behavior for `${n}`:\r\n                    // 1. Backreference to numbered capture, if `n` is an integer. Use `0` for the\r\n                    //    entire match. Any number of leading zeros may be used.\r\n                    // 2. Backreference to named capture `n`, if it exists and is not an integer\r\n                    //    overridden by numbered capture. In practice, this does not overlap with\r\n                    //    numbered capture since XRegExp does not allow named capture to use a bare\r\n                    //    integer as the name.\r\n                    // 3. If the name or number does not refer to an existing capturing group, it's\r\n                    //    an error.\r\n                    n = +$1; // Type-convert; drop leading zeros\r\n                    if (n <= args.length - 3) {\r\n                        return args[n] || '';\r\n                    }\r\n                    // Groups with the same name is an error, else would need `lastIndexOf`\r\n                    n = captureNames ? indexOf(captureNames, $1) : -1;\r\n                    if (n < 0) {\r\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\r\n                    }\r\n                    return args[n + 1] || '';\r\n                }\r\n                // Else, special variable or numbered backreference without curly braces\r\n                if ($2 === '$') { // $$\r\n                    return '$';\r\n                }\r\n                if ($2 === '&' || +$2 === 0) { // $&, $0 (not followed by 1-9), $00\r\n                    return args[0];\r\n                }\r\n                if ($2 === '`') { // $` (left context)\r\n                    return args[args.length - 1].slice(0, args[args.length - 2]);\r\n                }\r\n                if ($2 === \"'\") { // $' (right context)\r\n                    return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\r\n                }\r\n                // Else, numbered backreference without curly braces\r\n                $2 = +$2; // Type-convert; drop leading zero\r\n                // XRegExp behavior for `$n` and `$nn`:\r\n                // - Backrefs end after 1 or 2 digits. Use `${..}` for more digits.\r\n                // - `$1` is an error if no capturing groups.\r\n                // - `$10` is an error if less than 10 capturing groups. Use `${1}0` instead.\r\n                // - `$01` is `$1` if at least one capturing group, else it's an error.\r\n                // - `$0` (not followed by 1-9) and `$00` are the entire match.\r\n                // Native behavior, for comparison:\r\n                // - Backrefs end after 1 or 2 digits. Cannot reference capturing group 100+.\r\n                // - `$1` is a literal `$1` if no capturing groups.\r\n                // - `$10` is `$1` followed by a literal `0` if less than 10 capturing groups.\r\n                // - `$01` is `$1` if at least one capturing group, else it's a literal `$01`.\r\n                // - `$0` is a literal `$0`.\r\n                if (!isNaN($2)) {\r\n                    if ($2 > args.length - 3) {\r\n                        throw new SyntaxError('Backreference to undefined group ' + $0);\r\n                    }\r\n                    return args[$2] || '';\r\n                }\r\n                // `$` followed by an unsupported char is an error, unlike native JS\r\n                throw new SyntaxError('Invalid token ' + $0);\r\n            });\r\n        });\r\n    }\r\n\r\n    if (isRegex) {\r\n        if (search.global) {\r\n            // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n            search.lastIndex = 0;\r\n        } else {\r\n            // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n            search.lastIndex = origLastIndex;\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\r\n *\r\n * @memberOf String\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n */\r\nfixed.split = function(separator, limit) {\r\n    if (!XRegExp.isRegExp(separator)) {\r\n        // Browsers handle nonregex split correctly, so use the faster native method\r\n        return nativ.split.apply(this, arguments);\r\n    }\r\n\r\n    var str = String(this);\r\n    var output = [];\r\n    var origLastIndex = separator.lastIndex;\r\n    var lastLastIndex = 0;\r\n    var lastLength;\r\n\r\n    // Values for `limit`, per the spec:\r\n    // If undefined: pow(2,32) - 1\r\n    // If 0, Infinity, or NaN: 0\r\n    // If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\r\n    // If negative number: pow(2,32) - floor(abs(limit))\r\n    // If other: Type-convert, then use the above rules\r\n    // This line fails in very strange ways for some values of `limit` in Opera 10.5-10.63, unless\r\n    // Opera Dragonfly is open (go figure). It works in at least Opera 9.5-10.1 and 11+\r\n    limit = (limit === undefined ? -1 : limit) >>> 0;\r\n\r\n    XRegExp.forEach(str, separator, function(match) {\r\n        // This condition is not the same as `if (match[0].length)`\r\n        if ((match.index + match[0].length) > lastLastIndex) {\r\n            output.push(str.slice(lastLastIndex, match.index));\r\n            if (match.length > 1 && match.index < str.length) {\r\n                Array.prototype.push.apply(output, match.slice(1));\r\n            }\r\n            lastLength = match[0].length;\r\n            lastLastIndex = match.index + lastLength;\r\n        }\r\n    });\r\n\r\n    if (lastLastIndex === str.length) {\r\n        if (!nativ.test.call(separator, '') || lastLength) {\r\n            output.push('');\r\n        }\r\n    } else {\r\n        output.push(str.slice(lastLastIndex));\r\n    }\r\n\r\n    separator.lastIndex = origLastIndex;\r\n    return output.length > limit ? output.slice(0, limit) : output;\r\n};\r\n\r\n// ==--------------------------==\r\n// Built-in syntax/flag tokens\r\n// ==--------------------------==\r\n\r\n/*\r\n * Letter escapes that natively match literal characters: `\\a`, `\\A`, etc. These should be\r\n * SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-browser\r\n * consistency and to reserve their syntax, but lets them be superseded by addons.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))/,\r\n    function(match, scope) {\r\n        // \\B is allowed in default scope only\r\n        if (match[1] === 'B' && scope === defaultScope) {\r\n            return match[0];\r\n        }\r\n        throw new SyntaxError('Invalid escape ' + match[0]);\r\n    },\r\n    {\r\n        scope: 'all',\r\n        leadChar: '\\\\'\r\n    }\r\n);\r\n\r\n/*\r\n * Unicode code point escape with curly braces: `\\u{N..}`. `N..` is any one or more digit\r\n * hexadecimal number from 0-10FFFF, and can include leading zeros. Requires the native ES6 `u` flag\r\n * to support code points greater than U+FFFF. Avoids converting code points above U+FFFF to\r\n * surrogate pairs (which could be done without flag `u`), since that could lead to broken behavior\r\n * if you follow a `\\u{N..}` token that references a code point above U+FFFF with a quantifier, or\r\n * if you use the same in a character class.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\u{([\\dA-Fa-f]+)}/,\r\n    function(match, scope, flags) {\r\n        var code = dec(match[1]);\r\n        if (code > 0x10FFFF) {\r\n            throw new SyntaxError('Invalid Unicode code point ' + match[0]);\r\n        }\r\n        if (code <= 0xFFFF) {\r\n            // Converting to \\uNNNN avoids needing to escape the literal character and keep it\r\n            // separate from preceding tokens\r\n            return '\\\\u' + pad4(hex(code));\r\n        }\r\n        // If `code` is between 0xFFFF and 0x10FFFF, require and defer to native handling\r\n        if (hasNativeU && flags.indexOf('u') > -1) {\r\n            return match[0];\r\n        }\r\n        throw new SyntaxError('Cannot use Unicode code point above \\\\u{FFFF} without flag u');\r\n    },\r\n    {\r\n        scope: 'all',\r\n        leadChar: '\\\\'\r\n    }\r\n);\r\n\r\n/*\r\n * Empty character class: `[]` or `[^]`. This fixes a critical cross-browser syntax inconsistency.\r\n * Unless this is standardized (per the ES spec), regex syntax can't be accurately parsed because\r\n * character class endings can't be determined.\r\n */\r\nXRegExp.addToken(\r\n    /\\[(\\^?)\\]/,\r\n    function(match) {\r\n        // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\r\n        // (?!) should work like \\b\\B, but is unreliable in some versions of Firefox\r\n        return match[1] ? '[\\\\s\\\\S]' : '\\\\b\\\\B';\r\n    },\r\n    {leadChar: '['}\r\n);\r\n\r\n/*\r\n * Comment pattern: `(?# )`. Inline comments are an alternative to the line comments allowed in\r\n * free-spacing mode (flag x).\r\n */\r\nXRegExp.addToken(\r\n    /\\(\\?#[^)]*\\)/,\r\n    getContextualTokenSeparator,\r\n    {leadChar: '('}\r\n);\r\n\r\n/*\r\n * Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\r\n */\r\nXRegExp.addToken(\r\n    /\\s+|#[^\\n]*\\n?/,\r\n    getContextualTokenSeparator,\r\n    {flag: 'x'}\r\n);\r\n\r\n/*\r\n * Dot, in dotall mode (aka singleline mode, flag s) only.\r\n */\r\nXRegExp.addToken(\r\n    /\\./,\r\n    function() {\r\n        return '[\\\\s\\\\S]';\r\n    },\r\n    {\r\n        flag: 's',\r\n        leadChar: '.'\r\n    }\r\n);\r\n\r\n/*\r\n * Named backreference: `\\k<name>`. Backreference names can use the characters A-Z, a-z, 0-9, _,\r\n * and $ only. Also allows numbered backreferences as `\\k<n>`.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\k<([\\w$]+)>/,\r\n    function(match) {\r\n        // Groups with the same name is an error, else would need `lastIndexOf`\r\n        var index = isNaN(match[1]) ? (indexOf(this.captureNames, match[1]) + 1) : +match[1];\r\n        var endIndex = match.index + match[0].length;\r\n        if (!index || index > this.captureNames.length) {\r\n            throw new SyntaxError('Backreference to undefined group ' + match[0]);\r\n        }\r\n        // Keep backreferences separate from subsequent literal numbers. This avoids e.g.\r\n        // inadvertedly changing `(?<n>)\\k<n>1` to `()\\11`.\r\n        return '\\\\' + index + (\r\n            endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ?\r\n                '' : '(?:)'\r\n        );\r\n    },\r\n    {leadChar: '\\\\'}\r\n);\r\n\r\n/*\r\n * Numbered backreference or octal, plus any following digits: `\\0`, `\\11`, etc. Octals except `\\0`\r\n * not followed by 0-9 and backreferences to unopened capture groups throw an error. Other matches\r\n * are returned unaltered. IE < 9 doesn't support backreferences above `\\99` in regex syntax.\r\n */\r\nXRegExp.addToken(\r\n    /\\\\(\\d+)/,\r\n    function(match, scope) {\r\n        if (\r\n            !(\r\n                scope === defaultScope &&\r\n                /^[1-9]/.test(match[1]) &&\r\n                +match[1] <= this.captureNames.length\r\n            ) &&\r\n            match[1] !== '0'\r\n        ) {\r\n            throw new SyntaxError('Cannot use octal escape or backreference to undefined group ' +\r\n                match[0]);\r\n        }\r\n        return match[0];\r\n    },\r\n    {\r\n        scope: 'all',\r\n        leadChar: '\\\\'\r\n    }\r\n);\r\n\r\n/*\r\n * Named capturing group; match the opening delimiter only: `(?<name>`. Capture names can use the\r\n * characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers. Supports Python-style\r\n * `(?P<name>` as an alternate syntax to avoid issues in some older versions of Opera which natively\r\n * supported the Python-style syntax. Otherwise, XRegExp might treat numbered backreferences to\r\n * Python-style named capture as octals.\r\n */\r\nXRegExp.addToken(\r\n    /\\(\\?P?<([\\w$]+)>/,\r\n    function(match) {\r\n        // Disallow bare integers as names because named backreferences are added to match arrays\r\n        // and therefore numeric properties may lead to incorrect lookups\r\n        if (!isNaN(match[1])) {\r\n            throw new SyntaxError('Cannot use integer as capture name ' + match[0]);\r\n        }\r\n        if (match[1] === 'length' || match[1] === '__proto__') {\r\n            throw new SyntaxError('Cannot use reserved word as capture name ' + match[0]);\r\n        }\r\n        if (indexOf(this.captureNames, match[1]) > -1) {\r\n            throw new SyntaxError('Cannot use same name for multiple groups ' + match[0]);\r\n        }\r\n        this.captureNames.push(match[1]);\r\n        this.hasNamedCapture = true;\r\n        return '(';\r\n    },\r\n    {leadChar: '('}\r\n);\r\n\r\n/*\r\n * Capturing group; match the opening parenthesis only. Required for support of named capturing\r\n * groups. Also adds explicit capture mode (flag n).\r\n */\r\nXRegExp.addToken(\r\n    /\\((?!\\?)/,\r\n    function(match, scope, flags) {\r\n        if (flags.indexOf('n') > -1) {\r\n            return '(?:';\r\n        }\r\n        this.captureNames.push(null);\r\n        return '(';\r\n    },\r\n    {\r\n        optionalFlags: 'n',\r\n        leadChar: '('\r\n    }\r\n);\r\n\r\nmodule.exports = XRegExp;\r\n\n},{}]},{},[8])(8)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/xregexp/xregexp-all.js\n// module id = 143\n// module chunks = 1","(function(angular){\n\n    angular.module('ngError', ['ng'])\n    \n    .directive('ngError', ['$parse', function($parse){\n\n        return {\n            restrict: 'A',\n            compile: function($element, attr) {\n                var fn = $parse(attr['ngError']);\n\n                return function(scope, element, attr) {\n                    element.on('error', function(event) {\n                        scope.$apply(function() {\n                            fn(scope, {$event:event});\n                        });\n                    });\n                };\n\n            }\n        };\n\n    }]);\n\n    \n})(angular);\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/ng-error/ng-error.js\n// module id = 149\n// module chunks = 1","(function(angular){\n\n    angular.module('ngLoad', ['ng'])\n    \n    .directive('ngLoad', ['$parse', function($parse){\n\n        return {\n            restrict: 'A',\n            compile: function($element, attr) {\n                var fn = $parse(attr['ngLoad']);\n\n                return function(scope, element, attr) {\n                    element.on('load', function(event) {\n                        scope.$apply(function() {\n                            fn(scope, {$event:event});\n                        });\n                    });\n                };\n\n            }\n        };\n\n    }]);\n\n    \n})(angular);\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/ng-load/ng-load.js\n// module id = 150\n// module chunks = 1","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/babel-runtime/core-js/object/values.js\n// module id = 161\n// module chunks = 1","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/fn/object/values.js\n// module id = 162\n// module chunks = 1","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/es7.object.values.js\n// module id = 163\n// module chunks = 1","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-to-array.js\n// module id = 164\n// module chunks = 1","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/core-js/library/modules/_object-pie.js\n// module id = 165\n// module chunks = 1","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/md5/md5.js\n// module id = 184\n// module chunks = 1","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/crypt/crypt.js\n// module id = 185\n// module chunks = 1","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/is-buffer/index.js\n// module id = 186\n// module chunks = 1","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/localforage/dist/localforage.js\n// module id = 193\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 194\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/css-loader/lib/css-base.js\n// module id = 195\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Fox/Documents/VisualStudioCodeProjects/ColorSearch/node_modules/style-loader/lib/addStyles.js\n// module id = 196\n// module chunks = 1"],"sourceRoot":""}