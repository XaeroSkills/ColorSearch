"use strict";var __awaiter=this&&this.__awaiter||function(e,t,s,c){return new(s||(s=Promise))(function(i,u){function r(e){try{o(c.next(e))}catch(e){u(e)}}function n(e){try{o(c.throw(e))}catch(e){u(e)}}function o(e){e.done?i(e.value):new s(function(t){t(e.value)}).then(r,n)}o((c=c.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const couchbase=require("couchbase"),Debug=require("debug"),debug=Debug("CouchbaseDB");class Couchbase{constructor(){this.cluster=null,this.url="couchbase://127.0.0.1",this.user="admin",this.pass="admin123"}connection(e){return __awaiter(this,void 0,void 0,function*(){try{switch(null===this.cluster&&(this.cluster=new couchbase.Cluster(this.url),this.cluster.authenticate(this.user,this.pass)),e){case"images":return this.imagesBucket||(this.imagesBucket=this.cluster.openBucket("images")),this.imagesBucket;case"wordembeddings":return this.wordEmbeddingsBucket||(this.wordEmbeddingsBucket=this.cluster.openBucket("wordembeddings")),this.wordEmbeddingsBucket}}catch(e){return console.error("Connection to Couchbase failed."),Promise.reject(new Error("LocalHost Couchbase connection failed."))}})}}exports.default=Couchbase;