"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Vector_1=require("../common/Vector"),Debug=require("debug"),debug=Debug("ImageDescriptor");class Descriptor{constructor(e){this.histogram=e&&e.histogram?new Vector_1.default(e.histogram):new Vector_1.default}toJSON(){return{histogram:this.histogram.getValues()}}}exports.Descriptor=Descriptor;class ImageDescriptor extends Descriptor{constructor(e){super(e),this.id=e&&void 0!==e.id?Number.parseInt(e.id):null,this.originId=e&&void 0!==e.originId?e.originId:"",this.source=e&&void 0!==e.source?e.source:"",this.originalURL=e&&"string"==typeof e.originalURL?e.originalURL:"",this.previewURL=e&&"string"==typeof e.previewURL?e.previewURL:"",this.url=e&&"string"==typeof e.url?e.url:"",this.owner=e&&"string"==typeof e.owner?e.owner:"",this.license=e&&void 0!==e.license?e.license:"",this.title=e&&"string"==typeof e.title?e.title:"",this.node=e&&void 0!==e.node?Number.parseInt(e.node):null}toJSON(){return Object.assign({id:this.id,originId:this.originId,source:this.source,url:this.url,previewURL:this.previewURL,originalURL:this.originalURL,owner:this.owner,license:this.license,title:this.title,histogram:this.histogram.getValues(),node:this.node},super.toJSON())}}exports.ImageDescriptor=ImageDescriptor;