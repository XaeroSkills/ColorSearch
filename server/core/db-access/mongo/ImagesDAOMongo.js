"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(n,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function c(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){e.done?n(e.value):new i(function(t){t(e.value)}).then(s,c)}d((r=r.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const Descriptors_1=require("../../descriptors/Descriptors"),Settings_1=require("../../Settings"),Debug=require("debug"),debug=Debug("ImagesDAOMongo");class ImagesDAOMongo{constructor(){this.db=Settings_1.default.db(),this.nodeId=Settings_1.default.global().id,this.images="images"}delete(e){return __awaiter(this,void 0,void 0,function*(){try{yield(yield this.db.connection(this.images)).deleteOne({id:e})}catch(e){console.error(e)}})}saveMany(e){return __awaiter(this,void 0,void 0,function*(){let t=new Array;if(e&&e.length>0){debug("saving...");try{const i=yield this.db.connection(this.images);yield i.createIndex({id:1},{unique:!0}),t=yield this.save(i,e),debug("saving successful")}catch(e){console.error(e),t=[]}}return e.filter(e=>t.includes(e.id))})}countForNode(){return __awaiter(this,void 0,void 0,function*(){try{return yield(yield this.db.connection(this.images)).count()}catch(e){return console.error(e),0}})}iterateNode(e,t=null){return __awaiter(this,void 0,void 0,function*(){try{const i=yield this.db.connection(this.images);return new Promise((r,n)=>{let o=0;const s=i.find({node:this.nodeId});s.batchSize(1e3).forEach(i=>{t&&o>=t&&(r(),s.close()),o++,e(new Descriptors_1.ImageDescriptor(i))},e=>{r()})})}catch(e){console.error(e)}})}save(e,t){return __awaiter(this,void 0,void 0,function*(){return yield new Promise((i,r)=>e.insertMany(t.map(e=>e.toJSON()),{ordered:!1},(t,n)=>{if(t&&11e3===t.code){const t=Array.from(n.getInsertedIds()).map(e=>e._id);e.find({_id:{$in:t}}).toArray().then(e=>i(e?Array.from(e).map(e=>e.id):[])).catch(e=>r(e))}else t?r(t):i(n.ops?Array.from(n.ops).map(e=>e.id):[])}))})}}exports.default=ImagesDAOMongo;