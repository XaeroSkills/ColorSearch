"use strict";var __awaiter=this&&this.__awaiter||function(e,t,a,s){return new(a||(a=Promise))(function(n,r){function h(e){try{o(s.next(e))}catch(e){r(e)}}function i(e){try{o(s.throw(e))}catch(e){r(e)}}function o(e){e.done?n(e.value):new a(function(t){t(e.value)}).then(h,i)}o((s=s.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const HashTable_1=require("./HashTable"),flatten=require("arr-flatten");class LSH{constructor(e,t,a){this.hashFamily=e,this.hashTables=new Array;for(let e=0;e<a;e++)this.hashTables.push(new HashTable_1.default(t,this.hashFamily))}index(e,t){for(const a of this.hashTables)a.add(e,t)}query(e){return __awaiter(this,void 0,void 0,function*(){return new Promise((t,a)=>{const s=[],n=this.hashTables.entries(),r=()=>{const a=n.next();a.done?t([...new Set(flatten(s))]):(s.push(a.value[1].query(e)),setImmediate(r))};setImmediate(r)})})}remove(e){for(let t=0,a=this.hashTables.length;t<a;t++)this.hashTables[t].remove(e)}}exports.default=LSH;