"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(n,s){function c(e){try{o(i.next(e))}catch(e){s(e)}}function a(e){try{o(i.throw(e))}catch(e){s(e)}}function o(e){e.done?n(e.value):new r(function(t){t(e.value)}).then(c,a)}o((i=i.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const EventHub_1=require("../EventHub"),Settings_1=require("../Settings"),GoogleService_1=require("./services/GoogleService"),Services=new Map;Services.set("GoogleService",new GoogleService_1.default);class Translator{constructor(){const e=Settings_1.default.textTranslator();this.enabled=e.enabled,this.services=e.services.map(e=>{if(Services.has(e))return Services.get(e)}),this.currentService=this.services.length>0?this.services[0]:void 0}translate(e){return __awaiter(this,void 0,void 0,function*(){let t=e;if(this.enabled&&this.currentService)try{t=yield this.currentService.translate(e)}catch(r){t=yield this.tryOtherServices(e)}return t})}tryOtherServices(e){return __awaiter(this,void 0,void 0,function*(){let t=0,r=e;for(const i of this.services){t++;try{return r=yield i.translate(e),this.currentService=i,r}catch(e){if(console.error("TextTranslator service error. Trying another service..."),t===this.services.length){console.error("Translation failed."),EventHub_1.default.emit("translation-failed",!0);break}continue}}return r})}}exports.default=new Translator;