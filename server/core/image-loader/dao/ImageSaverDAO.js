"use strict";var __awaiter=this&&this.__awaiter||function(e,t,n,i){return new(n||(n=Promise))(function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function s(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){e.done?r(e.value):new n(function(t){t(e.value)}).then(a,s)}c((i=i.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const EventHub_1=require("../../EventHub"),Settings_1=require("../../Settings"),Debug=require("debug"),debug=Debug("ImageSaverDAO");class ImageSaverDAO{saveDescriptors(e){return __awaiter(this,void 0,void 0,function*(){if(e&&e.length>0){debug("saving...");try{const t=yield Settings_1.default.dbConnection();yield t.collection("Images").createIndex({indexId:1}),yield t.collection("Images").createIndex({id:1},{unique:!0});const n=yield t.collection("Images").find({},{fields:{indexId:1}}).sort({indexId:-1}).limit(1).toArray();let i=n&&n.length>0?++n[0].indexId:0;e.forEach(e=>e.indexId=i++);const r=e.map(e=>e.toJSON()),o=yield t.collection("Images").insertMany(r,{ordered:!1});EventHub_1.default.emit("images-saved",o.ops),debug("saving successful")}catch(e){console.error(e)}}})}}exports.default=ImageSaverDAO;