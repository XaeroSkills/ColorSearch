"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Debug=require("debug"),debug=Debug("DirectorySource"),ImageDTO_1=require("../../dto/ImageDTO"),path=require("path"),fs=require("fs"),md5=require("md5"),Settings_1=require("../../Settings");class DirectorySource{constructor(){const e=Settings_1.default.directorySource();this.sourceName="directory",this.cache=[],this.enabled=e.enabled,this.step=e.step,this.path=e.path,this.imgsPath=e["imgs-path"],this.exts=[".jpg",".jpeg",".gif"]}read(){return new Promise((e,t)=>{this.enabled?fs.readdir(this.path,(s,r)=>{if(s)t(s);else{this.cache=r.filter(e=>{try{return fs.accessSync(this.path+"/"+e,fs.constants.R_OK|fs.constants.W_OK),!!fs.lstatSync(this.path+"/"+e).isFile()}catch(e){return!1}});const t=this.getData();e(t)}}):e(new Array)})}getData(){const e=this.cache.slice(0,this.step),t=/.+(?=\..+)/i;this.cache=[];const s=[];for(const r of e)if(this.exts.includes(path.extname(r))){const e=new ImageDTO_1.default;try{debug("encode base64..."),e.base64=this.encodeBase64(this.path+"/"+r)}catch(e){console.error(e);continue}e.id=md5(e.base64)+this.sourceName;const i=t.exec(r)[0];e.text=i,e.source=this.sourceName,e.url=e.id+i+path.extname(r),e.originalURL=e.url;try{debug("move file to folder..."),fs.renameSync(this.path+"/"+r,this.imgsPath+"/"+e.url)}catch(e){console.error(e);continue}e.serverPath=this.imgsPath+"/"+e.url,s.push(e)}return s}encodeBase64(e){const t=fs.readFileSync(e);return new Buffer(t).toString("base64")}}exports.default=DirectorySource;