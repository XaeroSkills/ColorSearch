"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const XRegExp=require("xregexp"),keywordExtractor=require("keyword-extractor"),sanitizeHtml=require("sanitize-html"),stemmer=require("node-snowball"),stringLength=require("string-length");class TextUtil{constructor(){this.pattern="[^\\pN\\pL]+",this.patternRegGlobal=XRegExp(this.pattern,"gi"),this.patternReg=XRegExp(this.pattern)}normalizedEnglishKeyWords(e){const t=Array.isArray(e)?this.tokenizeText(e.join(" ")).join(" "):this.tokenizeText(e).join(" ");let r=new Array;const s={language:"english",remove_digits:!1,remove_duplicates:!1,return_changed_case:!0};return r=keywordExtractor.extract(t.toLowerCase(),s),r=stemmer.stemword(r,"english"),r=this.uniqSet(r)}setOfUniqWords(e){const t=this.tokenizeText(e.toLowerCase());return this.uniqSet(t)}reduceSetOfWords(e,t,r){let s=e.filter(e=>stringLength(e)<=t);return s.length>r&&(s=s.slice(0,r)),s}stemmEnglishWords(e){const t=e.map(e=>e.toLowerCase());return stemmer.stemword(t,"english")}cleanText(e){const t=this.patternRegGlobal;return sanitizeHtml(e,{allowedAttributes:[],allowedTags:[],textFilter:e=>e.replace(t," ")})}uniqSet(e){return[...new Set(e)]}tokenizeText(e){return e.split(this.patternReg)}getHashCode(e){let t=0;for(let r=0,s=e.length;r<s;++r)t=(t<<5)-t+e.charCodeAt(r),t&=t;return t}}exports.default=new TextUtil;