"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const XRegExp=require("xregexp"),cleanTextUtils=require("clean-text-utils"),keywordExtractor=require("keyword-extractor"),sanitizeHtml=require("sanitize-html"),stemmer=require("node-snowball");class TextUtil{constructor(){}static normalizedEnglishKeyWords(e){const t=Array.isArray(e)?this.tokenizeEnglishText(e.join(" ")).join(" "):this.tokenizeEnglishText(e).join(" ");let r=new Array;return r=keywordExtractor.extract(t.toLowerCase(),{language:"english",remove_digits:!0,remove_duplicates:!1,return_changed_case:!0}),r=stemmer.stemword(r,"english"),r=TextUtil.uniqSet(r)}static setOfUniqWords(e){const t=this.tokenizeText(e.toLowerCase());return TextUtil.uniqSet(t)}static stemmEnglishWords(e){const t=e.map(e=>e.toLowerCase());return stemmer.stemword(t,"english")}static cleanTextFromHtml(e){return sanitizeHtml(e,{allowedAttributes:[],allowedTags:[]})}static uniqSet(e){return[...new Set(e)]}static tokenizeText(e){return XRegExp.match(e,TextUtil.wordsRegex)}static tokenizeEnglishText(e){return XRegExp.match(e,TextUtil.englishWordsRegex)}static truncate(e,t){return e.length>t?e.substr(0,t)+"...":e}static clean(e){return cleanTextUtils.strip.emoji(e).replace(TextUtil.cleanRegex,"").trim()}}TextUtil.wordsRegex=XRegExp("\\pL+(?:[-'’]?\\pL+)*","gi"),TextUtil.englishWordsRegex=XRegExp("\\b[a-zA-Z]+(?:[-'’]?[a-zA-Z]+)+\\b","gi"),TextUtil.cleanRegex=/['"\/\\{}\[\]\x00-\x1F\x7F-\x9F]/g,exports.default=TextUtil;