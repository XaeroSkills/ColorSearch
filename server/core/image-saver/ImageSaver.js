"use strict";var __awaiter=this&&this.__awaiter||function(e,s,t,i){return new(t||(t=Promise))(function(r,a){function o(e){try{l(i.next(e))}catch(e){a(e)}}function n(e){try{l(i.throw(e))}catch(e){a(e)}}function l(e){e.done?r(e.value):new t(function(s){s(e.value)}).then(o,n)}l((i=i.apply(e,s||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const childProcess=require("child_process"),Cluster_1=require("../cluster/Cluster"),Descriptors_1=require("../descriptors/Descriptors"),Debug=require("debug"),debug=Debug("ImageSaver");class ImageSaver{constructor(e,s){this.enabled=!0===s.enabled,this.sleepTime=s.sleepTime||5e3,this.timeGap=s.timeGap||5e3,this.index=e,this.child=null}start(){this.enabled&&(debug("starting image loading process..."),this.child=childProcess.fork("./server/core/image-saver/ImageLoading.js"),this.child.on("message",e=>{switch(e.message){case"sleep":this.restart(this.sleepTime);break;case"save":this.save(e.images);break;case"restart":this.restart(6e4);break;case"stop":this.stop()}}))}enable(){this.enabled=!0}disable(){this.enabled=!1,this.stop()}save(e){return __awaiter(this,void 0,void 0,function*(){debug("saving descriptors..."),console.log(`${(new Date).toString()} saved descriptors: ${e.length}`),e.length>0&&this.index.indexMany(e.map(e=>new Descriptors_1.ImageDescriptor(e)));const s=yield Cluster_1.default.readyForSaving();s&&s.some(e=>e.ready)?(console.log(`${(new Date).toString()} cluster ready for saving`),setTimeout(()=>this.child.send({message:"load-next",data:{}}),this.timeGap)):(console.log(`${(new Date).toString()} cluster not ready for saving. restart in ${this.sleepTime}ms...`),this.restart(this.sleepTime))})}restart(e){this.stop(),setTimeout(()=>this.start(),e)}stop(){this.child&&(debug("stop loading process..."),this.child.kill())}}exports.default=ImageSaver;