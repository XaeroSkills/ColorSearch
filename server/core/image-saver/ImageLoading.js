"use strict";var __awaiter=this&&this.__awaiter||function(e,t,s,r){return new(s||(s=Promise))(function(o,a){function n(e){try{c(r.next(e))}catch(e){a(e)}}function u(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){e.done?o(e.value):new s(function(t){t(e.value)}).then(n,u)}c((r=r.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const Cluster_1=require("../cluster/Cluster"),EventHub_1=require("../EventHub"),FlickrSource_1=require("../image-sources/flickr/FlickrSource"),LocalSource_1=require("../image-sources/LocalSource"),Settings_1=require("../Settings"),ImageLoader_1=require("./ImageLoader"),Debug=require("debug"),debug=Debug("ImageLoading"),EventEmitter=require("events").EventEmitter,config=Settings_1.default.imageSaver(),sources=new Array;for(const e of config.sources)if(e.enabled)switch(e.name){case"local":sources.push(new LocalSource_1.default(e));break;case"flickr":sources.push(new FlickrSource_1.default(e))}const save=e=>__awaiter(this,void 0,void 0,function*(){let t=new Array;try{t=yield Cluster_1.default.saveDescriptors(e)}catch(e){console.log(e)}process.send({message:"save",images:t})});debug("sources: "+sources.length);const imageLoader=new ImageLoader_1.default(...sources);imageLoader.loadNext(),EventHub_1.default.on("sleep",()=>{process.send({message:"sleep"})}),EventHub_1.default.on("save",e=>{save(e)}),EventHub_1.default.on("stop",()=>{process.send({message:"stop"})});const inputEvents=new EventEmitter;inputEvents.on("load-next",()=>{imageLoader.loadNext()}),process.on("message",e=>{inputEvents.emit(e.message,e.data)});