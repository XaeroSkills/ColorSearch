"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,s){return new(r||(r=Promise))(function(i,a){function o(e){try{u(s.next(e))}catch(e){a(e)}}function n(e){try{u(s.throw(e))}catch(e){a(e)}}function u(e){e.done?i(e.value):new r(function(t){t(e.value)}).then(o,n)}u((s=s.apply(e,t||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const DescriptorBuilder_1=require("../descriptors/DescriptorBuilder"),ImageDTO_js_1=require("../dto/ImageDTO.js"),EventHub_1=require("../EventHub"),flatten=require("arr-flatten"),Debug=require("debug"),debug=Debug("ImageLoader");class ImageLoader{constructor(...e){this.sources=Array.isArray(e)?e:new Array,this.attempts=0,this.ATTEMPTS_LIMIT=10}loadNext(){return __awaiter(this,void 0,void 0,function*(){if(this.sources.length<1)return Promise.reject("No image sources found");const e=this.sources.map(e=>e.read());let t=new Array;try{t=yield Promise.all(e);const r=flatten(t).filter(e=>e instanceof ImageDTO_js_1.default);debug(`DTOs from image sources: ${r.length}`);const s=yield DescriptorBuilder_1.DescriptorBuilder.createMany(r);this.attempts=s.length<1?this.attempts+1:0,this.attempts>=this.ATTEMPTS_LIMIT?(debug("go to sleep..."),this.attempts=0,EventHub_1.default.emit("sleep")):EventHub_1.default.emit("save",s)}catch(e){console.error(e)}})}}exports.default=ImageLoader;