"use strict";var __awaiter=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))(function(r,o){function c(e){try{u(i.next(e))}catch(e){o(e)}}function a(e){try{u(i.throw(e))}catch(e){o(e)}}function u(e){e.done?r(e.value):new t(function(n){n(e.value)}).then(c,a)}u((i=i.apply(e,n||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const Settings_1=require("../../Settings"),Debug=require("debug"),debug=Debug("ImageFinderDAO");class ImageFinderDAO{linearQuery(e,n){return __awaiter(this,void 0,void 0,function*(){const t=new Array,i=yield Settings_1.default.dbConnection();return new Promise((r,o)=>{if(!i)return console.error("No db connection."),void r(t);i.collection("images").find({}).batchSize(50).forEach(i=>n.compare(e,i,t),e=>{r(t)})})})}queryByIndexIds(e,n,t){return __awaiter(this,void 0,void 0,function*(){const i=new Array,r=yield Settings_1.default.dbConnection();return new Promise((o,c)=>{if(!r)return console.error("No db connection."),void o(i);r.collection("images").find({indexId:{$in:e}}).batchSize(50).forEach(e=>t.compare(n,e,i),e=>{o(i)})})})}}exports.default=ImageFinderDAO;