"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Distances_1=require("../common/Distances"),ResultDTO_1=require("../dto/ResultDTO"),Debug=require("debug"),debug=Debug("Comparator");class Comparator{constructor(t){this.colorDistance=t.distance,this.colorDistanceThreshold=(1-t.similarityLevel/100)*this.colorDistance.maxDistance(),this.checkSemanticSimilarity=t.checkSemanticSimilarity,this.distanceMode=t.distanceMode}compare(t,e,s){if(e&&e.url&&e.originalURL&&e.source&&e.histogram&&e.words){const i="strict"===this.distanceMode?this.colorDistance.calcDistance(t.getHistogram(),e.histogram):this.colorDistance.calcDistanceSoft(t.getHistogram(),e.histogram);if(i<=this.colorDistanceThreshold){let c=1;this.checkSemanticSimilarity&&e.words&&(c=Distances_1.Jaccard.calcDistance(t.words,e.words));const a=i/this.colorDistance.maxDistance()-i/this.colorDistance.maxDistance()*(1-c);s.push(new ResultDTO_1.default(e,a))}}}}exports.default=Comparator;