"use strict";var __awaiter=this&&this.__awaiter||function(e,r,t,i){return new(t||(t=Promise))(function(n,a){function d(e){try{s(i.next(e))}catch(e){a(e)}}function o(e){try{s(i.throw(e))}catch(e){a(e)}}function s(e){e.done?n(e.value):new t(function(r){r(e.value)}).then(d,o)}s((i=i.apply(e,r||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const Comparator_1=require("./Comparator"),ImageFinderDAO_1=require("./dao/ImageFinderDAO"),ResultSetSorter_1=require("./ResultSetSorter"),Debug=require("debug"),debug=Debug("ImageFinder");class ImageFinder{constructor(e){this.dao=new ImageFinderDAO_1.default,this.index=e}findSimilarImages(e,r){return __awaiter(this,void 0,void 0,function*(){const t=isNaN(r)?1e4:Math.round(r),i=new Comparator_1.default(e),n=new ResultSetSorter_1.default;let a=new Array;if(e.descriptor.getHistogram().reduce((e,r)=>e+r)>0){if("regular"===e.searchMode&&this.index.isEnabled()){debug("query index...");const r=yield this.index.query({indexId:0,histogram:e.descriptor.getHistogram()});debug("candidates: "+r.length),a=yield this.dao.queryByIndexIds(r,e.descriptor,i)}else a=yield this.dao.linearQuery(e.descriptor,i);n.sort(a),a.length>t&&(a=a.slice(0,t))}return a})}}exports.default=ImageFinder;