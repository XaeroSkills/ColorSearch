"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Distances_1=require("./common/Distances"),ImageDescriptor_1=require("./image-descriptor/ImageDescriptor"),Settings_1=require("./Settings"),config=Settings_1.default.imageFinder(),distances=new Map;distances.set("euclidean",Distances_1.Euclidean),distances.set("chisquare",Distances_1.ChiSquare),distances.set("s2jsd",Distances_1.S2JSD);class SearchRequest{static create(e,s,t){return ImageDescriptor_1.default.create(e,s).then(e=>{if(e instanceof ImageDescriptor_1.default)return new SearchRequest(e,t);throw new Error("Request build failed")}).catch(e=>{throw console.error(e),new Error("Request build failed")})}constructor(e,s){if(!(s&&e instanceof ImageDescriptor_1.default))throw new Error("Invalid constructor arguments");this.descriptor=e,this.searchMode="special"===s.searchMode?"special":"regular",this.similarityLevel="special"===this.searchMode&&void 0!==s.similarityLevel?parseInt(s.similarityLevel,10):config["similarity-threshold"],this.distance="special"===this.searchMode&&distances.has(s.distance)?distances.get(s.distance):distances.get(config["default-distance"].toLowerCase()),this.distanceMode="special"===this.searchMode&&"soft"===s.distanceMode?"soft":"strict",this.checkSemanticSimilarity=!0===s.checkSemanticSimilarity}}exports.default=SearchRequest;